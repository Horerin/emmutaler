/*

    AUTOGENERATED DO NOT EDIT!

    Generated by /Users/leonardogalli/Code/ETH/thesis/emmutaler/builddir/go/emmu rom --rom /Users/leonardogalli/Code/ETH/thesis/emmutaler/../SecureROMs-master/SecureROM for t8030si, iBoot-4479.0.0.100.4 --out /Users/leonardogalli/Code/ETH/thesis/emmutaler/builddir/go symbols --out /Users/leonardogalli/Code/ETH/thesis/emmutaler/go/rom
    at 2021-06-29 22:47:24.485678 +0200 CEST m=+0.003548376

*/


package rom

import "github.com/galli-leo/emmutaler/fbs"

func FromFbs(s *fbs.SymbolT) Symbol {
    return Symbol{Start: int64(s.FileStart), End: int64(s.FileEnd)}
}

type Symbol struct {
    Start int64
    End   int64
}

type Symbols struct {

    // __int64  rom_start();
    rom_start Symbol

    // 
    rom_rom_aSecureromForT8 Symbol

    // 
    rom_aRomrelease Symbol

    // 
    rom_aIboot447900100 Symbol

    // void  rom_arch_cpu_init(__int64 resume);
    rom_arch_cpu_init Symbol

    // void rom_arch_cpu_quiesce();
    rom_arch_cpu_quiesce Symbol

    // unsigned __int64 rom_arm_read_sctlr();
    rom_arm_read_sctlr Symbol

    // unsigned __int64  rom__arm_write_sctlr(unsigned __int64 result);
    rom__arm_write_sctlr Symbol

    // unsigned __int64  rom_arm_write_mair(unsigned __int64 result);
    rom_arm_write_mair Symbol

    // unsigned __int64  rom_arm_write_tcr(unsigned __int64 result);
    rom_arm_write_tcr Symbol

    // unsigned __int64  rom_arm_write_ttbr0(unsigned __int64 result);
    rom_arm_write_ttbr0 Symbol

    // unsigned __int64 rom_arm_read_cpacr();
    rom_arm_read_cpacr Symbol

    // unsigned __int64  rom_arm_write_cpacr(unsigned __int64 result);
    rom_arm_write_cpacr Symbol

    // unsigned __int64 rom_arm_read_cntp_ctl();
    rom_arm_read_cntp_ctl Symbol

    // unsigned __int64  rom_arm_write_cntp_ctl(unsigned __int64 result);
    rom_arm_write_cntp_ctl Symbol

    // unsigned __int64 rom_arm_read_cntpct();
    rom_arm_read_cntpct Symbol

    // unsigned __int64  rom_arm_write_cntp_tval(unsigned __int64 result);
    rom_arm_write_cntp_tval Symbol

    // void rom_arm_flush_tlbs();
    rom_arm_flush_tlbs Symbol

    // void rom_arm_invalidate_icache();
    rom_arm_invalidate_icache Symbol

    // void rom_arm_invalidate_dcache_line();
    rom_arm_invalidate_dcache_line Symbol

    // void rom_arm_clean_dcache_line();
    rom_arm_clean_dcache_line Symbol

    // void rom_arm_clean_invalidate_dcache();
    rom_arm_clean_invalidate_dcache Symbol

    // void rom_arm_clean_dcache();
    rom_arm_clean_dcache Symbol

    // void rom_arm_invalidate_dcache();
    rom_arm_invalidate_dcache Symbol

    // void rom_arm_clean_invalidate_dcache_line();
    rom_arm_clean_invalidate_dcache_line Symbol

    // void rom_arm_drain_write_buffer();
    rom_arm_drain_write_buffer Symbol

    // void rom_arm_memory_barrier();
    rom_arm_memory_barrier Symbol

    // __int64  rom__arm_vtop(__int16);
    rom__arm_vtop Symbol

    // void rom_arch_enable_ints();
    rom_arch_enable_ints Symbol

    // void  rom_return_to_el0();
    rom_return_to_el0 Symbol

    // void  rom_finish_irq();
    rom_finish_irq Symbol

    // void rom_nullsub_14();
    rom_nullsub_14 Symbol

    // void rom__arch_halt();
    rom__arch_halt Symbol

    // void __noreturn rom__arch_spin();
    rom__arch_spin Symbol

    // void  rom_set_paci_a_key(unsigned __int64, unsigned __int64);
    rom_set_paci_a_key Symbol

    // void  rom_set_paci_b_key(unsigned __int64, unsigned __int64);
    rom_set_paci_b_key Symbol

    // void  rom_set_pacd_a_key(unsigned __int64, unsigned __int64);
    rom_set_pacd_a_key Symbol

    // void  rom_set_pacd_b_key(unsigned __int64, unsigned __int64);
    rom_set_pacd_b_key Symbol

    // void  rom_set_pacc_a_key(unsigned __int64, unsigned __int64);
    rom_set_pacc_a_key Symbol

    // unsigned __int64  rom_enable_pacia_key(__int64);
    rom_enable_pacia_key Symbol

    // unsigned __int64  rom_enable_pacib_key(__int64 enable);
    rom_enable_pacib_key Symbol

    // void *rom_authenticate_task_pointer();
    rom_authenticate_task_pointer Symbol

    // __int64  rom_get_aff1(void *, void *, void *, void *, void *, void *, void *);
    rom_get_aff1 Symbol

    // void __usercall __noreturn rom_curr_el_sp0_sync(__int64@<X0>, __int64@<X1>, __int64@<X2>, __int64@<X3>, __int64@<X4>, __int64@<X5>, __int64@<X6>, __int64@<X7>, __int64@<X8>, __int128@<Q0>, __int128@<Q1>, __int128@<Q2>, __int128@<Q3>, __int128@<Q4>, __int128@<Q5>, __int128@<Q6>, __int128@<Q7>, char);
    rom_curr_el_sp0_sync Symbol

    // 
    rom_curr_el_sp0_irq Symbol

    // 
    rom_curr_el_sp0_fiq Symbol

    // 
    rom_curr_el_sp0_serror Symbol

    // 
    rom_curr_el_spx_sync Symbol

    // 
    rom_curr_el_spx_irq Symbol

    // 
    rom_curr_el_spx_fiq Symbol

    // 
    rom_curr_el_spx_serror Symbol

    // 
    rom_lower_el_aarch64_sync Symbol

    // void  rom_lower_el_aarch64_irq(__int64, __int64, __int64, __int64);
    rom_lower_el_aarch64_irq Symbol

    // 
    rom_lower_el_aarch64_fiq Symbol

    // 
    rom_lower_el_aarch64_serror Symbol

    // 
    rom_aUuid Symbol

    // void  rom_dispatch64();
    rom_dispatch64 Symbol

    // 
    rom_def_100001428 Symbol

    // 
    rom_jpt_100001428 Symbol

    // __int64  rom_arm_mmu_init(bool resume);
    rom_arm_mmu_init Symbol

    // __int64 rom_task_init_stack_magic_cookie();
    rom_task_init_stack_magic_cookie Symbol

    // void * rom_arch_task_create(task *a1);
    rom_arch_task_create Symbol

    // void  rom_arch_task_destroy(struct task *);
    rom_arch_task_destroy Symbol

    // int  rom_main(int argc, const char **argv, const char **envp);
    rom_main Symbol

    // void __noreturn rom_panic_sep_client_reader();
    rom_panic_sep_client_reader Symbol

    // int32_t  rom_akf_recv_mbox(const KFWRAPPER_TYPE_T kfw_type, uint64_t *msg, uint32_t wait_timeout);
    rom_akf_recv_mbox Symbol

    // void __noreturn rom_probably_panic();
    rom_probably_panic Symbol

    // int32_t  rom_akf_send_mbox(const KFWRAPPER_TYPE_T kfw_type, const uint64_t msg, uint32_t wait_timeout);
    rom_akf_send_mbox Symbol

    // int32_t  rom_akf_stop(const KFWRAPPER_TYPE_T kfw_type);
    rom_akf_stop Symbol

    // __int64 rom_get_some_uk_vtable();
    rom_get_some_uk_vtable Symbol

    // int rom_interrupt_init(void);
    rom_interrupt_init Symbol

    // void rom_interrupt_mask_all();
    rom_interrupt_mask_all Symbol

    // void  rom_mask_int(uint32_t vector);
    rom_mask_int Symbol

    // void  rom_unmask_int(uint32_t vector);
    rom_unmask_int Symbol

    // void  rom__aic_unmask_int_internal(uint32_t vector);
    rom__aic_unmask_int_internal Symbol

    // int  rom_install_int_handler(uint32_t vector, int_handler handler, void *arg);
    rom_install_int_handler Symbol

    // void rom_platform_irq();
    rom_platform_irq Symbol

    // void rom_usbphy_power_up();
    rom_usbphy_power_up Symbol

    // __int64 rom_usbphy_enable_pullup(void);
    rom_usbphy_enable_pullup Symbol

    // void rom_usbphy_power_down();
    rom_usbphy_power_down Symbol

    // bool rom_usbphy_is_cable_connected(void);
    rom_usbphy_is_cable_connected Symbol

    // __int64  rom_gpio_read(__int64);
    rom_gpio_read Symbol

    // __int64  rom_gpio_get_pad_pin(unsigned int gpio, unsigned int *pad, int *pin);
    rom_gpio_get_pad_pin Symbol

    // __int64  rom_flash_spi_select(unsigned int, __int64);
    rom_flash_spi_select Symbol

    // void  rom_gpio_configure(uint32_t gpio, uint32_t config);
    rom_gpio_configure Symbol

    // 
    rom_def_100003578 Symbol

    // 
    rom_jpt_100003578 Symbol

    // __int64  rom_gpio_configure_pupdn(unsigned int, int);
    rom_gpio_configure_pupdn Symbol

    // __int64  rom_rGPIO_PINSTRAPS_VALID_CFG_0();
    rom_rGPIO_PINSTRAPS_VALID_CFG_0 Symbol

    // void  rom_maybe_power_on_sep();
    rom_maybe_power_on_sep Symbol

    // int32_t  rom_sep_client_get_nonce(uint8_t *buffer);
    rom_sep_client_get_nonce Symbol

    // int  rom__sep_client_reader(uint32_t wait_timeout);
    rom__sep_client_reader Symbol

    // int  rom_flash_spi_init(int which_bus);
    rom_flash_spi_init Symbol

    // int  rom_flash_spi_read_range_fun(spi_ndev *handle, uint8_t *ptr, uint32_t offset, uint32_t length);
    rom_flash_spi_read_range_fun Symbol

    // void   rom_flash_spi_setup_bus(struct spi_ndev *sdev);
    rom_flash_spi_setup_bus Symbol

    // int   rom_flash_spi_wait_busy(struct spi_ndev *sdev, u_int32_t timeout);
    rom_flash_spi_wait_busy Symbol

    // spi_regs_t * rom_spiregs(int a1);
    rom_spiregs Symbol

    // void  __noreturn rom_empty_panic();
    rom_empty_panic Symbol

    // void  rom_spi_setup(int port, int baud, bool master, int clkpol, int clkpha);
    rom_spi_setup Symbol

    // int  rom_spi_read_etc(__int64 port, void *buf, size_t len);
    rom_spi_read_etc Symbol

    // spi_regs_t * rom_spi_write_etc(__int64, __int64, unsigned __int64);
    rom_spi_write_etc Symbol

    // __int64  rom_spi_gpio_read(int port);
    rom_spi_gpio_read Symbol

    // int  rom__image4_get_partial(const void *buf, size_t buf_bytes, uint32_t *ret_type, uint32_t *ret_size);
    rom__image4_get_partial Symbol

    // int   rom_der_expect(const DERItem *bounds, DERTag tag, DERDecodedInfo *info, bool partial);
    rom_der_expect Symbol

    // int   rom_der_restrict(DERItem *bounds, const DERItem *item);
    rom_der_restrict Symbol

    // int   rom_der_expect_ia5string(DERItem *bounds, const char *s);
    rom_der_expect_ia5string Symbol

    // int  rom_image4_validate_property_callback_interposer(asn1_tag tag, void *value, uint32_t propertyType, image4_wrapper_context *context);
    rom_image4_validate_property_callback_interposer Symbol

    // __int64  rom_called_by_verify_impl(img4 *a1, image4_wrapper_context *a2);
    rom_called_by_verify_impl Symbol

    // int  rom_image4_process_superblock(void *sblock, struct blockdev *bdev, off_t offset, uint32_t imageOptions);
    rom_image4_process_superblock Symbol

    // struct image_info * rom_image4_find(uint32_t image_type);
    rom_image4_find Symbol

    // int  rom_image4_load(struct image_info *image, const uint32_t *types, uint32_t count, uint32_t *actual, void **load_addr, size_t *load_len);
    rom_image4_load Symbol

    // int   rom_image4_load_copyobject(struct image_info *image_info, void *objectBuffer, size_t objectSize);
    rom_image4_load_copyobject Symbol

    // __int64  rom_image4_verify_number_relation(_QWORD, _QWORD, _QWORD, _QWORD);
    rom_image4_verify_number_relation Symbol

    // __int64  rom_image4_verify_boolean_relation(__int64, __int64, int);
    rom_image4_verify_boolean_relation Symbol

    // void  rom_platform_cache_operation(char, unsigned __int64, __int64);
    rom_platform_cache_operation Symbol

    // void rom_platform_memory_barrier(void);
    rom_platform_memory_barrier Symbol

    // __int64 rom_platform_get_iboot_flags(void);
    rom_platform_get_iboot_flags Symbol

    // __int64 rom_j_chipid_get_minimum_epoch(void);
    rom_j_chipid_get_minimum_epoch Symbol

    // uint16_t rom_platform_get_usb_product_id(void);
    rom_platform_get_usb_product_id Symbol

    // __int64 rom_platform_get_usb_product_string(void);
    rom_platform_get_usb_product_string Symbol

    // const char * rom_platform_get_usb_serial_number_string(bool full);
    rom_platform_get_usb_serial_number_string Symbol

    // __int64  rom_hash_calculate(__int64, __int64, __int64);
    rom_hash_calculate Symbol

    // const char * rom_platform_get_usb_more_other_string(bool full);
    rom_platform_get_usb_more_other_string Symbol

    // __int64 rom_platform_consume_nonce();
    rom_platform_consume_nonce Symbol

    // __int64  rom_panic_as_well();
    rom_panic_as_well Symbol

    // void  rom_platform_start();
    rom_platform_start Symbol

    // __int64  rom_report_no_boot_image(__int64 result);
    rom_report_no_boot_image Symbol

    // __int64  rom_some_kind_of_report(__int64 result, int, int, int);
    rom_some_kind_of_report Symbol

    // void rom_nullsub_5();
    rom_nullsub_5 Symbol

    // __int64 rom_platform_init_setup_clocks();
    rom_platform_init_setup_clocks Symbol

    // __int64  rom_unknown_main_init_fn(__int64);
    rom_unknown_main_init_fn Symbol

    // __int64 rom_platform_init_hwpins();
    rom_platform_init_hwpins Symbol

    // __int64 rom_platform_init_internal_mem();
    rom_platform_init_internal_mem Symbol

    // u_int32_t rom_platform_get_entropy(void);
    rom_platform_get_entropy Symbol

    // int  rom_platform_quiesce_hardware(enum boot_target target);
    rom_platform_quiesce_hardware Symbol

    // int  rom_platform_bootprep(enum boot_target target);
    rom_platform_bootprep Symbol

    // void  rom_platform_disable_keys(uint32_t gid, uint32_t uid);
    rom_platform_disable_keys Symbol

    // __int64 rom_get_integrated_hash();
    rom_get_integrated_hash Symbol

    // __int64 rom_something_l2_cramconfig();
    rom_something_l2_cramconfig Symbol

    // void __noreturn rom_platform_reset();
    rom_platform_reset Symbol

    // int  rom_platform_get_board_id();
    rom_platform_get_board_id Symbol

    // bool rom_platform_get_lock_fuses_required(void);
    rom_platform_get_lock_fuses_required Symbol

    // bool  rom_platform_get_boot_device(int32_t index, enum boot_device *boot_device, uint32_t *boot_flag, uint32_t *boot_arg);
    rom_platform_get_boot_device Symbol

    // void  rom_platform_enable_boot_interface(int, int, int);
    rom_platform_enable_boot_interface Symbol

    // unsigned __int64 rom_platform_get_nonce();
    rom_platform_get_nonce Symbol

    // int32_t  rom_platform_get_sep_nonce(uint8_t *nonce);
    rom_platform_get_sep_nonce Symbol

    // __int64 rom_platform_get_spi_frequency(void);
    rom_platform_get_spi_frequency Symbol

    // __int64  rom_platform_get_usb_cable_connected(_QWORD);
    rom_platform_get_usb_cable_connected Symbol

    // void  rom_platform_watchdog_tickle();
    rom_platform_watchdog_tickle Symbol

    // bool  rom_platform_get_force_dfu();
    rom_platform_get_force_dfu Symbol

    // bool  rom_platform_get_request_dfu1();
    rom_platform_get_request_dfu1 Symbol

    // bool rom_platform_get_request_dfu2();
    rom_platform_get_request_dfu2 Symbol

    // void rom_platform_demote_production(void);
    rom_platform_demote_production Symbol

    // void * rom_platform_get_boot_trampoline();
    rom_platform_get_boot_trampoline Symbol

    // __int64  rom_platform_get_boot_manifest_hash(_DWORD *);
    rom_platform_get_boot_manifest_hash Symbol

    // int32_t  rom_platform_set_boot_manifest_hash(const uint8_t *boot_manifest_hash);
    rom_platform_set_boot_manifest_hash Symbol

    // int  rom_memzero_if_io_reg(char *a1, __int64 a2);
    rom_memzero_if_io_reg Symbol

    // void __noreturn rom_panic_now(void);
    rom_panic_now Symbol

    // void rom_platform_sidp_lock_rom_manifest();
    rom_platform_sidp_lock_rom_manifest Symbol

    // void  rom_platform_sidp_set_rom_manifest(const uint32_t *manifest_hash, size_t manifest_hash_size);
    rom_platform_sidp_set_rom_manifest Symbol

    // __int64 rom_platform_get_mix_n_match_prevention_status();
    rom_platform_get_mix_n_match_prevention_status Symbol

    // __int64  rom_platform_set_mix_n_match_prevention_status(__int64 result);
    rom_platform_set_mix_n_match_prevention_status Symbol

    // long double rom__boot_handoff_trampoline();
    rom__boot_handoff_trampoline Symbol

    // __int64  rom_cfg_sec_params_valid();
    rom_cfg_sec_params_valid Symbol

    // uint32_t  rom_cfg_fuse_get_bit(int a1, __int64 bit, bool is_raw);
    rom_cfg_fuse_get_bit Symbol

    // bool  rom_chipid_get_current_production_mode();
    rom_chipid_get_current_production_mode Symbol

    // __int64  rom_cfg_fuse_get_bool(int a1, __int64 bit, bool is_raw, unsigned int a4);
    rom_cfg_fuse_get_bool Symbol

    // bool  rom_chipid_get_raw_production_mode();
    rom_chipid_get_raw_production_mode Symbol

    // void rom_chipid_clear_production_mode();
    rom_chipid_clear_production_mode Symbol

    // bool  rom_chipid_get_secure_mode();
    rom_chipid_get_secure_mode Symbol

    // __int64 rom_chipid_get_security_domain();
    rom_chipid_get_security_domain Symbol

    // __int64 rom_chipid_get_board_id();
    rom_chipid_get_board_id Symbol

    // __int64 rom_platform_get_security_epoch();
    rom_platform_get_security_epoch Symbol

    // __int64 rom_chipid_get_chip_id();
    rom_chipid_get_chip_id Symbol

    // __int64 rom__chipid_get_chip_revision();
    rom__chipid_get_chip_revision Symbol

    // unsigned __int64 rom_chipid_get_ecid_id();
    rom_chipid_get_ecid_id Symbol

    // void  rom_chipid_set_fuse_lock(bool locked);
    rom_chipid_set_fuse_lock Symbol

    // __int64 rom_miu_initialize_internal_ram();
    rom_miu_initialize_internal_ram Symbol

    // int rom_clocks_set_default(void);
    rom_clocks_set_default Symbol

    // void  rom_clock_gate(int device, bool enable);
    rom_clock_gate Symbol

    // 
    rom_def_100008A1C Symbol

    // 
    rom_jpt_100008A1C Symbol

    // __int64 rom_nullsub_6(void);
    rom_nullsub_6 Symbol

    // uint32_t  rom_clocks_set_performance(uint32_t performance_level);
    rom_clocks_set_performance Symbol

    // 
    rom_def_100008B28 Symbol

    // 
    rom_jpt_100008B28 Symbol

    // void  __noreturn rom_prepare_and_jump(enum boot_target boot, void *entry, void *arg);
    rom_prepare_and_jump Symbol

    // void rom_debug_init(void);
    rom_debug_init Symbol

    // void rom_nullsub_7();
    rom_nullsub_7 Symbol

    // void rom_nullsub_8();
    rom_nullsub_8 Symbol

    // void __noreturn rom__panic(const char *func, const char *str, ...);
    rom__panic Symbol

    // __int64  rom_sys_init_stack_cookie();
    rom_sys_init_stack_cookie Symbol

    // __int64  rom_stack_corrupted();
    rom_stack_corrupted Symbol

    // void rom_sys_init(void);
    rom_sys_init Symbol

    // void  rom_task_init();
    rom_task_init Symbol

    // __int64  rom_security_init(bool clear_memory);
    rom_security_init Symbol

    // void  rom_security_protect_memory(const void *address, size_t length, bool protect);
    rom_security_protect_memory Symbol

    // bool  rom_security_allow_modes(int);
    rom_security_allow_modes Symbol

    // __int64  rom_security_set_untrusted(_QWORD, _QWORD);
    rom_security_set_untrusted Symbol

    // __int64  rom_security_set_production_override(_QWORD, _QWORD);
    rom_security_set_production_override Symbol

    // bool  rom_security_get_effective_production_status(bool);
    rom_security_get_effective_production_status Symbol

    // __int64 * rom_security_set_boot_manifest_hash(__int64 *result);
    rom_security_set_boot_manifest_hash Symbol

    // __int64  rom_security_set_mix_n_match_prevention_status(__int64 result);
    rom_security_set_mix_n_match_prevention_status Symbol

    // __int64  rom_security_set_lock_fuses(_QWORD);
    rom_security_set_lock_fuses Symbol

    // bool rom_security_get_lock_fuses(void);
    rom_security_get_lock_fuses Symbol

    // void rom_security_consolidate_environment();
    rom_security_consolidate_environment Symbol

    // void rom_security_sidp_seal_rom_manifest();
    rom_security_sidp_seal_rom_manifest Symbol

    // _BYTE * rom_did_enter_higher_el(_BYTE *result);
    rom_did_enter_higher_el Symbol

    // __int64  rom_potentially_return_to_el0();
    rom_potentially_return_to_el0 Symbol

    // void __noreturn rom_panic2();
    rom_panic2 Symbol

    // __int64  rom_must_return_to_el0();
    rom_must_return_to_el0 Symbol

    // void __noreturn rom_panic3();
    rom_panic3 Symbol

    // __int64  rom_iteratively_return_to_el0(__int64 result);
    rom_iteratively_return_to_el0 Symbol

    // unsigned __int64 rom_set_thread_id_bootstrap();
    rom_set_thread_id_bootstrap Symbol

    // struct task *  rom_task_create_etc(struct task *t, const char *name, task_routine routine, void *arg, void *stack, size_t stack_len);
    rom_task_create_etc Symbol

    // int  rom_idle_task_routine_0(void *arg);
    rom_idle_task_routine_0 Symbol

    // task * rom_current_task();
    rom_current_task Symbol

    // struct task * rom_task_create(const char *name, task_routine routine, void *arg, size_t stack_len);
    rom_task_create Symbol

    // void  rom_task_destroy(struct task *);
    rom_task_destroy Symbol

    // __int64  rom_list_delete(_QWORD);
    rom_list_delete Symbol

    // void rom_task_yield(void);
    rom_task_yield Symbol

    // __int64  rom_insert_run_q_tail(_QWORD);
    rom_insert_run_q_tail Symbol

    // void  rom_task_start(struct task *t);
    rom_task_start Symbol

    // int  rom_wait_queue_wake_all(struct task_wait_queue *q);
    rom_wait_queue_wake_all Symbol

    // int  rom_task_wait_on(struct task *);
    rom_task_wait_on Symbol

    // void  rom_task_block(struct task_wait_queue *q);
    rom_task_block Symbol

    // void  rom_list_add_tail_0(struct list_node *list, struct list_node *item);
    rom_list_add_tail_0 Symbol

    // __int64  rom_task_sleep(_QWORD);
    rom_task_sleep Symbol

    // int  rom_wait_queue_wake_one(struct task_wait_queue *q);
    rom_wait_queue_wake_one Symbol

    // __int64  rom_list_remove_head(__int64);
    rom_list_remove_head Symbol

    // void  rom_event_init(struct task_event *event, uint32_t flags, bool initial_state);
    rom_event_init Symbol

    // void  rom_event_signal(struct task_event *event);
    rom_event_signal Symbol

    // void  rom_event_wait(struct task_event *event);
    rom_event_wait Symbol

    // void  __noreturn rom_event_wait_timeout(_BYTE *, __int64);
    rom_event_wait_timeout Symbol

    // 
    rom_deep_idle_timeout_act Symbol

    // utime_t rom_system_time(void);
    rom_system_time Symbol

    // __int64  rom_time_has_elapsed(_QWORD, _QWORD);
    rom_time_has_elapsed Symbol

    // void  rom_spin(utime_t usecs);
    rom_spin Symbol

    // __int64  rom__aes_crypto_cmd(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
    rom__aes_crypto_cmd Symbol

    // __int64  rom__boot_check_panic(__int64, int, __int64);
    rom__boot_check_panic Symbol

    // int  rom_flash_nor_register(struct nor_blockdev *nor_bdev, const char *name, uint64_t len, uint32_t block_size);
    rom_flash_nor_register Symbol

    // int   rom_nor_blockdev_read_block_0(struct blockdev *bdev, void *ptr, block_addr block, uint32_t count);
    rom_nor_blockdev_read_block_0 Symbol

    // int  rom_flash_nor_init(int which_device);
    rom_flash_nor_init Symbol

    // int  rom_usb_init_with_controller(struct usb_controller_functions *controller_funcs);
    rom_usb_init_with_controller Symbol

    // __int64 rom_usb_free();
    rom_usb_free Symbol

    // int  rom_platform_init_usb();
    rom_platform_init_usb Symbol

    // __int64 rom_usb_quiesce();
    rom_usb_quiesce Symbol

    // __int64 rom_nullsub_9(void);
    rom_nullsub_9 Symbol

    // void rom_nullsub_10();
    rom_nullsub_10 Symbol

    // __int64  rom_nullsub_11(_QWORD);
    rom_nullsub_11 Symbol

    // void rom_nullsub_12();
    rom_nullsub_12 Symbol

    // __int64  rom_mib_get_string(u_int32_t);
    rom_mib_get_string Symbol

    // int  rom_image_search_bdev(struct blockdev *bdev, off_t map_offset, uint32_t imageOptions);
    rom_image_search_bdev Symbol

    // int  rom_image_load(struct image_info *image, const uint32_t *types, uint32_t count, uint32_t *actual, void **load_addr, size_t *load_len, size_t *unknown);
    rom_image_load Symbol

    // struct image_info * rom_image_find(uint32_t type);
    rom_image_find Symbol

    // struct image_info * rom_image_create_from_memory(void *address, size_t length, uint32_t imageOptions);
    rom_image_create_from_memory Symbol

    // void  rom_image_free(struct image_info *image);
    rom_image_free Symbol

    // __int64 rom_platform_get_fuse_modes();
    rom_platform_get_fuse_modes Symbol

    // void  rom_arch_task_context_switch(struct arch_task *old, struct arch_task *new_task);
    rom_arch_task_context_switch Symbol

    // unsigned __int64  rom_set_thread_id(unsigned __int64 result);
    rom_set_thread_id Symbol

    // void rom_arm_fp_init();
    rom_arm_fp_init Symbol

    // __int64  rom_handle_svc(struct arm_exception_frame64 *frame, __int16 iss);
    rom_handle_svc Symbol

    // void  rom__arm_synchronous_exception(struct arm_exception_frame64 *frame, bool is_lower);
    rom__arm_synchronous_exception Symbol

    // void  __noreturn rom_handle_irq(struct arm_exception_frame64 *, bool is_fiq);
    rom_handle_irq Symbol

    // int  rom_timer_init(uint32_t timer);
    rom_timer_init Symbol

    // void  rom_timer_stop_all();
    rom_timer_stop_all Symbol

    // void  rom_timer_deadline_enter(uint64_t deadline, void (*func)(void));
    rom_timer_deadline_enter Symbol

    // unsigned __int64  rom_timer_get_ticks_0();
    rom_timer_get_ticks_0 Symbol

    // void  rom_arm_fiq();
    rom_arm_fiq Symbol

    // utime_t  rom_timer_ticks_to_usecs(uint64_t ticks);
    rom_timer_ticks_to_usecs Symbol

    // __int64 rom_ticks_per_usec();
    rom_ticks_per_usec Symbol

    // __int64  rom_usecs_to_ticks(__int64);
    rom_usecs_to_ticks Symbol

    // __int64  rom_platform_power_spin(_QWORD);
    rom_platform_power_spin Symbol

    // __int64  rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService(void *__hidden this, void *);
    rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService Symbol

    // __int64  rom_spi_nand_init(int a1);
    rom_spi_nand_init Symbol

    // struct usb_controller_functions *rom_synopsys_otg_controller_init();
    rom_synopsys_otg_controller_init Symbol

    // int rom_synopsys_otg_start(void);
    rom_synopsys_otg_start Symbol

    // void __noreturn rom_synopsys_otg_stop();
    rom_synopsys_otg_stop Symbol

    // void  __noreturn rom_synopsys_otg_set_address(char);
    rom_synopsys_otg_set_address Symbol

    // void __noreturn rom_synopsys_otg_get_connection_speed();
    rom_synopsys_otg_get_connection_speed Symbol

    // void  __noreturn rom_synopsys_otg_activate_endpoint(unsigned int, int, __int64, int);
    rom_synopsys_otg_activate_endpoint Symbol

    // void  __noreturn rom_synopsys_otg_do_endpoint_io(struct usb_device_io_request *);
    rom_synopsys_otg_do_endpoint_io Symbol

    // void  __noreturn rom_synopsys_otg_stall_endpoint(char, int);
    rom_synopsys_otg_stall_endpoint Symbol

    // void  rom_synopsys_otg_reset_endpoint_data_toggle(int a1);
    rom_synopsys_otg_reset_endpoint_data_toggle Symbol

    // bool  rom_synopsys_otg_is_endpoint_stalled(u_int32_t endpoint);
    rom_synopsys_otg_is_endpoint_stalled Symbol

    // void  rom_synopsys_otg_do_test_mode(char a1);
    rom_synopsys_otg_do_test_mode Symbol

    // void  rom_synopsys_otg_abort_endpoint(__int64);
    rom_synopsys_otg_abort_endpoint Symbol

    // void  __noreturn rom_synopsys_otg_deactivate_endpoint(char);
    rom_synopsys_otg_deactivate_endpoint Symbol

    // int  rom_synopsys_otg_init();
    rom_synopsys_otg_init Symbol

    // int  rom_synopsys_otg_task(void *arg);
    rom_synopsys_otg_task Symbol

    // void rom_synopsys_otg_start_controller(void);
    rom_synopsys_otg_start_controller Symbol

    // __int64 rom_synopsys_otg_go_on_bus();
    rom_synopsys_otg_go_on_bus Symbol

    // void  rom_scavenge_endpoint_finished_list(u_int32_t endpoint);
    rom_scavenge_endpoint_finished_list Symbol

    // void  rom_synopsys_otg_start_ep0_out(bool data_phase);
    rom_synopsys_otg_start_ep0_out Symbol

    // void rom_synopsys_otg_free();
    rom_synopsys_otg_free Symbol

    // void rom_synopsys_otg_int_handler();
    rom_synopsys_otg_int_handler Symbol

    // __int64  rom_synopsys_otg_start_endpoint_in(__int64 result);
    rom_synopsys_otg_start_endpoint_in Symbol

    // int  rom_usb_controller_register(struct usb_controller_functions *controller_funcs);
    rom_usb_controller_register Symbol

    // __int64 rom_usb_controller_init();
    rom_usb_controller_init Symbol

    // __int64 rom_usb_controller_start();
    rom_usb_controller_start Symbol

    // void  rom_usb_controller_set_address(u_int32_t new_address);
    rom_usb_controller_set_address Symbol

    // int rom_usb_controller_get_connection_speed(void);
    rom_usb_controller_get_connection_speed Symbol

    // void  rom_usb_controller_abort_endpoint(u_int32_t endpoint);
    rom_usb_controller_abort_endpoint Symbol

    // int  rom_usb_core_init(const char *configuration_string_desc);
    rom_usb_core_init Symbol

    // __int64  rom_usb_alloc_string_descriptor(_QWORD);
    rom_usb_alloc_string_descriptor Symbol

    // __int64  rom_usb_create_string_descriptor(_QWORD);
    rom_usb_create_string_descriptor Symbol

    // __int64 rom_usb_core_start();
    rom_usb_core_start Symbol

    // void  rom_usb_core_register_interface(struct usb_interface_instance *intf);
    rom_usb_core_register_interface Symbol

    // void  rom_usb_core_handle_usb_control_receive(__int64 *, char, unsigned int, bool *);
    rom_usb_core_handle_usb_control_receive Symbol

    // 
    rom_def_10000E514 Symbol

    // 
    rom_jpt_10000E514 Symbol

    // 
    rom_jpt_10000E6C4 Symbol

    // 
    rom_jpt_10000E83C Symbol

    // void  rom_usb_core_event_handler(usb_event_t event);
    rom_usb_core_event_handler Symbol

    // void  rom_usb_core_complete_endpoint_io(struct usb_device_io_request *io_req);
    rom_usb_core_complete_endpoint_io Symbol

    // __int64  rom__vsock_abort(_QWORD);
    rom__vsock_abort Symbol

    // int  rom_getDFUImage(void *load_address, int load_length);
    rom_getDFUImage Symbol

    // __int64 rom_usb_dfu_init();
    rom_usb_dfu_init Symbol

    // int  rom_handle_interface_request(struct usb_device_request *request, u_int8_t **out_data);
    rom_handle_interface_request Symbol

    // void  rom_data_received(u_int32_t received);
    rom_data_received Symbol

    // void rom_handle_bus_reset(void);
    rom_handle_bus_reset Symbol

    // void rom_usb_dfu_exit();
    rom_usb_dfu_exit Symbol

    // blockdev * rom_lookup_blockdev(char *name);
    rom_lookup_blockdev Symbol

    // int  rom_register_blockdev(struct blockdev *dev);
    rom_register_blockdev Symbol

    // __int64 rom_get_cpu_cache_line_size();
    rom_get_cpu_cache_line_size Symbol

    // int  rom_construct_blockdev(struct blockdev *dev, const char *name, uint64_t len, uint32_t block_size);
    rom_construct_blockdev Symbol

    // int  rom_blockdev_read_hook_fun(struct blockdev *dev, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_hook_fun Symbol

    // int  rom_blockdev_read_block_hook_fun(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_block_hook_fun Symbol

    // int  rom_blockdev_write_hook_fun(struct blockdev *, const void *ptr, off_t offset, uint64_t len);
    rom_blockdev_write_hook_fun Symbol

    // int  rom_blockdev_write_block_hook_fun(struct blockdev *, const void *ptr, block_addr block, uint32_t count);
    rom_blockdev_write_block_hook_fun Symbol

    // int  rom_blockdev_erase_hook_fun(struct blockdev *, off_t offset, uint64_t len);
    rom_blockdev_erase_hook_fun Symbol

    // void *  rom_get_bounce_buf(struct blockdev *dev);
    rom_get_bounce_buf Symbol

    // struct cbuf * rom_cbuf_create(size_t len, struct task_event *event);
    rom_cbuf_create Symbol

    // void  rom_siphash_aligned(uint64_t *out, const uint64_t *in_aligned, size_t inlen, const uint64_t *k);
    rom_siphash_aligned Symbol

    // 
    rom_def_10000FBA8 Symbol

    // 
    rom_jpt_10000FBA8 Symbol

    // heap_block * rom_heap_alloc(__int64 a1);
    rom_heap_alloc Symbol

    // new_chunk_data *rom_uk_heap_fn();
    rom_uk_heap_fn Symbol

    // void __noreturn rom_panic_almost();
    rom_panic_almost Symbol

    // size_t  rom_required_size(size_t size);
    rom_required_size Symbol

    // heap_block * rom_maybe_verify_block_padding(heap_block *result, unsigned __int64 a2);
    rom_maybe_verify_block_padding Symbol

    // void * rom_calloc(size_t count, size_t size, const char *caller_name);
    rom_calloc Symbol

    // void  rom_verify_block_checksum(const struct heap_block *b);
    rom_verify_block_checksum Symbol

    // void  rom_heap_free(heap_block *);
    rom_heap_free Symbol

    // void  rom_calculate_block_checksum(struct heap_block *b);
    rom_calculate_block_checksum Symbol

    // void * rom_heap_memalign(size_t size, size_t constraint, const char *caller_name);
    rom_heap_memalign Symbol

    // void  rom_posix_memalign(__int64 a1, __int64 a2, __int64 a3);
    rom_posix_memalign Symbol

    // void __noreturn rom_heap_panic();
    rom_heap_panic Symbol

    // heap_block * rom_verify_block_padding(heap_block *result);
    rom_verify_block_padding Symbol

    // __int64  rom_free_list_add(free_block *);
    rom_free_list_add Symbol

    // void  rom_heap_add_chunk_0(void *chunk, size_t size, bool clear_memory, bool uk);
    rom_heap_add_chunk_0 Symbol

    // void  rom_heap_add_chunk(void *chunk, size_t size, bool clear_memory);
    rom_heap_add_chunk Symbol

    // void __noreturn rom_another_heap_panic2();
    rom_another_heap_panic2 Symbol

    // _QWORD * rom_heap_set_cookie(_QWORD *result);
    rom_heap_set_cookie Symbol

    // void __noreturn rom_another_heap_panic();
    rom_another_heap_panic Symbol

    // void rom_heap_verify();
    rom_heap_verify Symbol

    // __int64  rom_round_size(unsigned __int64);
    rom_round_size Symbol

    // void  rom_free_list_remove(struct free_block *b);
    rom_free_list_remove Symbol

    // void  rom_split_tail(struct heap_block *b, size_t size, size_t user_size);
    rom_split_tail Symbol

    // void * rom_malloc(__int64 a1);
    rom_malloc Symbol

    // __int64  rom_free(void *a1);
    rom_free Symbol

    // __int64  rom_log2_int(_QWORD);
    rom_log2_int Symbol

    // __int64  rom_memset_s(__int64, __int64, __int64, __int64);
    rom_memset_s Symbol

    // __int64  rom_weird_memset(__int64, unsigned __int64, __int64, unsigned __int64, unsigned __int64);
    rom_weird_memset Symbol

    // __int64 rom_dprintf(const char *fmt, ...);
    rom_dprintf Symbol

    // __int64  rom_not_empty_putchar(__int64, int);
    rom_not_empty_putchar Symbol

    // __int64  rom__do_printf(__int64, _BYTE *, __int64);
    rom__do_printf Symbol

    // 
    rom_def_100010D1C Symbol

    // 
    rom_def_100010D64 Symbol

    // 
    rom_jpt_100010D1C Symbol

    // 
    rom_jpt_100010D64 Symbol

    // __int64 rom_snprintf(_QWORD, _QWORD, _QWORD, _QWORD, const char *, ...);
    rom_snprintf Symbol

    // void __noreturn rom__platform_early_init();
    rom__platform_early_init Symbol

    // __int64  rom_puts(const char *);
    rom_puts Symbol

    // __int64  rom__putchar(int);
    rom__putchar Symbol

    // size_t  rom_strlcat(char *dst, char *src, size_t maxlen);
    rom_strlcat Symbol

    // __int64  rom_strlcpy(_QWORD, _QWORD, _QWORD, _QWORD);
    rom_strlcpy Symbol

    // void * rom_memcpy(void *__dst, const void *__src, size_t __n);
    rom_memcpy Symbol

    // void  rom__bzero(void *, size_t);
    rom__bzero Symbol

    // void * rom__memset(void *__b, int __c, size_t __len);
    rom__memset Symbol

    // __int64  rom_memcmp(_BYTE *, _BYTE *, __int64);
    rom_memcmp Symbol

    // int  rom_strcmp(const char *cs, const char *ct);
    rom_strcmp Symbol

    // size_t  rom_strlen(const char *s);
    rom_strlen Symbol

    // struct mib_node * rom_mib_find_node(u_int32_t oid);
    rom_mib_find_node Symbol

    // bool  rom_mib_something_varr(mib_node *node, void *value);
    rom_mib_something_varr Symbol

    // bool  rom__mib_find(u_int32_t oid, u_int32_t node_type, void *value);
    rom__mib_find Symbol

    // bool  rom_mib_probably_retrieve_value(mib_node *node, void *value);
    rom_mib_probably_retrieve_value Symbol

    // void  rom_mib_get_size(u_int32_t oid, u_int32_t node_type, void *value);
    rom_mib_get_size Symbol

    // bool  rom_mib_exists(mib_node *node, void *value);
    rom_mib_exists Symbol

    // mib_cache * rom_mib_get_cached(unsigned int oid);
    rom_mib_get_cached Symbol

    // _DWORD * rom_mib_get_value(mib_value *v_ptr, int node_type, void *value);
    rom_mib_get_value Symbol

    // 
    rom_def_1000120D0 Symbol

    // 
    rom_jpt_1000120D0 Symbol

    // uint32_t * rom_get_entropy(uint32_t *result, unsigned __int64 entropy_len);
    rom_get_entropy Symbol

    // void  rom_init_entropy_source(_QWORD *result, unsigned __int64);
    rom_init_entropy_source Symbol

    // __int64 rom_timer_get_ticks(void);
    rom_timer_get_ticks Symbol

    // int   rom_random_get_bytes_internal(uint8_t *buffer, size_t length, void *entropy_buffer, size_t entropy_buffer_size);
    rom_random_get_bytes_internal Symbol

    // __int64  rom_random_get_bytes(__int64, unsigned __int64);
    rom_random_get_bytes Symbol

    // void  rom_callout_enqueue(struct callout *, utime_t delay, callout_func, void *arg);
    rom_callout_enqueue Symbol

    // __int64  rom__callout_dequeue(_QWORD);
    rom__callout_dequeue Symbol

    // void  rom_list_add_tail(struct list_node *list, struct list_node *item);
    rom_list_add_tail Symbol

    // void rom__callout_reset_deadline();
    rom__callout_reset_deadline Symbol

    // __int64  rom_callout_dequeue(_QWORD);
    rom_callout_dequeue Symbol

    // void  rom_enter_critical_section();
    rom_enter_critical_section Symbol

    // void rom_exit_critical_section();
    rom_exit_critical_section Symbol

    // task *rom__irq_enter_critical_section();
    rom__irq_enter_critical_section Symbol

    // task *rom__irq_exit_critical_section_0();
    rom__irq_exit_critical_section_0 Symbol

    // task *rom_really_disable_interrupts_on_current_task();
    rom_really_disable_interrupts_on_current_task Symbol

    // task *rom__irq_exit_critical_section();
    rom__irq_exit_critical_section Symbol

    // __int64  rom_image4_load_decrypt_payload();
    rom_image4_load_decrypt_payload Symbol

    // bool rom_platform_get_current_production_mode(void);
    rom_platform_get_current_production_mode Symbol

    // bool rom_platform_get_raw_production_mode(void);
    rom_platform_get_raw_production_mode Symbol

    // __int64 rom_platform_get_security_domain();
    rom_platform_get_security_domain Symbol

    // __int64  rom_platform_get_secure_mode();
    rom_platform_get_secure_mode Symbol

    // __int64  rom_platform_get_hardware_epoch(__int64);
    rom_platform_get_hardware_epoch Symbol

    // __int64 rom_platform_get_chip_id(void);
    rom_platform_get_chip_id Symbol

    // __int64 rom_platform_get_chip_revision(void);
    rom_platform_get_chip_revision Symbol

    // unsigned __int64 rom_platform_get_ecid_id(void);
    rom_platform_get_ecid_id Symbol

    // int  rom_j__platform_init_usb();
    rom_j__platform_init_usb Symbol

    // __int64 rom_platform_get_usb_vendor_id(void);
    rom_platform_get_usb_vendor_id Symbol

    // void rom_platform_halt(void);
    rom_platform_halt Symbol

    // __int64 rom_platform_deep_idle();
    rom_platform_deep_idle Symbol

    // __int64 rom_platform_get_usb_manufacturer_string(void);
    rom_platform_get_usb_manufacturer_string Symbol

    // __int64 rom_platform_get_usb_device_version();
    rom_platform_get_usb_device_version Symbol

    // __int64  rom_DERImg4DecodeFindInSequence_0(void *set_data, __int64 *set_end, __int64 search_key, DERItem *dest);
    rom_DERImg4DecodeFindInSequence_0 Symbol

    // __int64  rom_DERImg4DecodeContentFindItemWithTag_0(DERItem *set, __int64 search_key, DERItem *dest);
    rom_DERImg4DecodeContentFindItemWithTag_0 Symbol

    // __int64  rom_DERImg4DecodeTagCompare_1(_QWORD, _QWORD);
    rom_DERImg4DecodeTagCompare_1 Symbol

    // __int64  rom_parse_main_img4_der(DERItem *a1, __int64 decoded_infos);
    rom_parse_main_img4_der Symbol

    // __int64  rom_parse_payload_der(DERItem *a1, img4_payload *payload_items);
    rom_parse_payload_der Symbol

    // __int64  rom_parse_manifest_der(_QWORD *a1, img4_manifest *manifest_items);
    rom_parse_manifest_der Symbol

    // DERItem * rom_parse_recovery_der(DERItem *result, img4_recovery *recovery);
    rom_parse_recovery_der Symbol

    // __int64  rom_DERImg4DecodeProperty_0(DERItem *a1, asn1_tag a2, DERDecodedInfoFind *find_result);
    rom_DERImg4DecodeProperty_0 Symbol

    // __int64  rom_DERFindInSequence(DERItem *set, asn1_tag search_key, asn1_tag return_type_maybe, DERDecodedInfoFind *result);
    rom_DERFindInSequence Symbol

    // __int64  rom_DERImg4DecodeParseManifestProperties_0(img4 *a1, DERItem *manb, DERItem *manp);
    rom_DERImg4DecodeParseManifestProperties_0 Symbol

    // __int64  rom__Img4DecodePayloadExists_0(img4 *a1, bool *a2);
    rom__Img4DecodePayloadExists_0 Symbol

    // __int64  rom_Img4DecodeGetPayload(img4 *img4, DERItem *res);
    rom_Img4DecodeGetPayload Symbol

    // __int64  rom_Img4DecodeGetPayloadType(img4 *a1, _DWORD *a2);
    rom_Img4DecodeGetPayloadType Symbol

    // __int64  rom_Img4DecodeGetPayloadKeybag(img4 *a1, __int64 a2);
    rom_Img4DecodeGetPayloadKeybag Symbol

    // __int64  rom_Img4DecodePayloadCompressionExists(img4 *a1, bool *a2);
    rom_Img4DecodePayloadCompressionExists Symbol

    // __int64  rom_Img4DecodeGetPayloadCompression(img4 *a1, uint32_t *payload_compression_algo, uint32_t *decomp_size);
    rom_Img4DecodeGetPayloadCompression Symbol

    // __int64  rom_Img4DecodeCopyPayloadDigest(img4 *a1, __int64 x1_0, unsigned __int64 a3, Img4DecodeImplementation *a4);
    rom_Img4DecodeCopyPayloadDigest Symbol

    // __int64  rom__Img4DecodeManifestExists_0(img4 *, bool *validManifest);
    rom__Img4DecodeManifestExists_0 Symbol

    // __int64  rom_Img4DecodeCopyManifestDigest(img4 *a1, __int64 dest, unsigned __int64 a3, Img4DecodeImplementation *a4);
    rom_Img4DecodeCopyManifestDigest Symbol

    // __int64  rom__Img4DecodeSectionExists_0(img4 *img, unsigned int section_num, char *a3);
    rom__Img4DecodeSectionExists_0 Symbol

    // void  rom__Img4DecodeGetRestoreInfoData(img4 *img, __int64 tag, char *data, __int64 *length);
    rom__Img4DecodeGetRestoreInfoData Symbol

    // __int64  rom_Img4DecodeGetPropertyBoolean_0(__int64, __int64, __int64);
    rom_Img4DecodeGetPropertyBoolean_0 Symbol

    // __int64  rom_verify_payload_properties(img4 *img4);
    rom_verify_payload_properties Symbol

    // __int64  rom_Img4DecodeEvaluateDictionaryProperties_0(const DERItem *a1, __int64 propType, int ( *image4_validate_property_callback_interposer)(uint32_t, void *, uint32_t, void *), void *context);
    rom_Img4DecodeEvaluateDictionaryProperties_0 Symbol

    // __int64  rom_Img4DecodeInit(DERByte *bjectBuffer, DERSize correctedObjectSize, img4 *img4);
    rom_Img4DecodeInit Symbol

    // __int64  rom_Img4DecodePerformTrustEvaluatation(uint32_t actualType, img4 *img4, void *validate_props, Img4DecodeImplementation *hasher, image4_wrapper_context *wrapper_ctxt);
    rom_Img4DecodePerformTrustEvaluatation Symbol

    // __int64  rom_verify_signature_for_reals(DERItem *pubKey, const unsigned __int8 *hash_oid, DERItem *toVerify, DERItem *sig, __int64 key_size, __int64 hash_size, Img4DecodeImplementation *hasher);
    rom_verify_signature_for_reals Symbol

    // int  rom_verify_pkcs1_sig(const DERItem pubKey, DERItem sig, const DERItem toVerify, Img4DecodeImplementation *hasher);
    rom_verify_pkcs1_sig Symbol

    // int  rom_parse_chain(__int64 res, DERShort chain_len, DERSignedCertCrl *__attribute__((__org_arrdim(0,0))) chainElements, DERTBSCert *__attribute__((__org_arrdim(0,0))) tbsCerts, DERItem *__attribute__((__org_arrdim(0,0))) derPubKey, DERExtensions *__attribute__((__org_arrdim(0,0))) extensions);
    rom_parse_chain Symbol

    // int  rom_verify_chain_signatures(DERItem *issuerPubKey, DERSignedCertCrl *signedCert, Img4DecodeImplementation *hasher);
    rom_verify_chain_signatures Symbol

    // __int64  rom_verify_parse_chain(__int64, __int64, __int64, __int64, DERByte **manifest_props_data, DERSize *manifest_props_len, Img4DecodeImplementation *hasher, __int64 ( *crack_chain_root)(DERItem *, DERItem[], unsigned int));
    rom_verify_parse_chain Symbol

    // __int64  rom_parse_cert_chain(__int64 cert_chain_data, __int64 cert_chain_len, __int64 local1, __int64 local2, DERByte **manifest_props_data, DERSize *manifest_props_len, __int64 a7);
    rom_parse_cert_chain Symbol

    // __int64  rom_crack_chain_root(DERItem *certBlob, DERItem *__attribute__((__org_arrdim(0,0))) chain, unsigned int chain_len);
    rom_crack_chain_root Symbol

    // __int64  rom_Img4DecodeComputeDigest(void *a1, __int64 len, void *probs_dest, __int64 hash_size, Img4DecodeImplementation *a5);
    rom_Img4DecodeComputeDigest Symbol

    // __int64  rom_crack_chain(DERItem *certBlob, DERItem *__attribute__((__org_arrdim(0,0))) chain, unsigned int chain_len);
    rom_crack_chain Symbol

    // int  rom_parse_extensions(DERTBSCert *tbsCert, DERExtensions *extensions);
    rom_parse_extensions Symbol

    // DERReturn  rom_DERDecodeItem(const DERItem *der, DERDecodedInfo *decoded);
    rom_DERDecodeItem Symbol

    // DERReturn  rom_DERDecodeItemPartialBuffer(const DERItem *der, DERDecodedInfo *decoded, __int64 *actual_length);
    rom_DERDecodeItemPartialBuffer Symbol

    // DERReturn  rom_DERDecodeItemPartialBuffer_0(const DERItem *der, DERDecodedInfo *decoded, bool allowPartialBuffer);
    rom_DERDecodeItemPartialBuffer_0 Symbol

    // DERReturn  rom__DERParseBitString_0_0(const DERItem *contents, DERItem *bitStringBytes, DERByte *numUnusedBits);
    rom__DERParseBitString_0_0 Symbol

    // __int64  rom__DERParseBoolean_0(_QWORD, _QWORD);
    rom__DERParseBoolean_0 Symbol

    // DERReturn  rom_DERParseInteger(const DERItem *contents, uint32_t *result);
    rom_DERParseInteger Symbol

    // DERReturn  rom__DERParseInteger64(const DERItem *contents, uint64_t *result);
    rom__DERParseInteger64 Symbol

    // __int64  rom_DERDecodeSeqInitAgain(const DERItem *a1, asn1_tag *a2, DERSequence *a3);
    rom_DERDecodeSeqInitAgain Symbol

    // DERReturn  rom_DERDecodeSeqContentInit(const DERItem *content, DERSequence *derSeq);
    rom_DERDecodeSeqContentInit Symbol

    // DERReturn  rom_DERDecodeSeqNext(DERSequence *derSeq, DERDecodedInfo *decoded);
    rom_DERDecodeSeqNext Symbol

    // DERReturn  rom_DERParseSequence(const DERItem *der, DERShort numItems, const DERItemSpec *itemSpecs, void *dest, DERSize sizeToZero);
    rom_DERParseSequence Symbol

    // DERReturn  rom_DERParseSequenceContent(const DERItem *content, DERShort numItems, const DERItemSpec *itemSpecs, void *dest, DERSize sizeToZero);
    rom_DERParseSequenceContent Symbol

    // bool  rom_DEROidCompare(const DERItem *oid1, const DERItem *oid2);
    rom_DEROidCompare Symbol

    // bool  rom_memcmp_0();
    rom_memcmp_0 Symbol

    // __int64 rom__lzvn_decode_buffer(void);
    rom__lzvn_decode_buffer Symbol

    // __int64  rom__lz4_decode_asm(int8x16_t **, unsigned __int64, unsigned __int64, unsigned __int8 **, unsigned __int64);
    rom__lz4_decode_asm Symbol

    // 
    rom__lzfse_decode_lmd Symbol

    // 
    rom__lzfse_decode_literals Symbol

    // char * rom__lz4raw_decode_buffer(int8x16_t *, unsigned __int64, unsigned __int8 *, unsigned __int64);
    rom__lz4raw_decode_buffer Symbol

    // 
    rom__LZFSEIBootBufferPush Symbol

    // 
    rom_aes_key_expansion Symbol

    // 
    rom__ccaes_arm_decrypt_key128 Symbol

    // 
    rom__ccaes_arm_decrypt_key192 Symbol

    // 
    rom__ccaes_arm_decrypt_key256 Symbol

    // 
    rom__ccaes_arm_encrypt_key Symbol

    // 
    rom__ccaes_arm_encrypt_key_0 Symbol

    // int  rom__ccn_cmp_0(cc_size n, const cc_unit *s, const cc_unit *t);
    rom__ccn_cmp_0 Symbol

    // __int64  rom_nullsub_13(_QWORD);
    rom_nullsub_13 Symbol

    // void  rom__ccn_mul(cc_size n, cc_unit *r_2n, const cc_unit *s, const cc_unit *t);
    rom__ccn_mul Symbol

    // void  rom_ccdigest(const struct rom_ccdigest_info *di, size_t len, const void *data, void *digest);
    rom_ccdigest Symbol

    // void  rom__ccdigest_init(const struct ccdigest_info *di, ccdigest_ctx_t ctx);
    rom__ccdigest_init Symbol

    // void  rom__ccdigest_update(const struct ccdigest_info *di, ccdigest_ctx_t ctx, size_t len, const void *data);
    rom__ccdigest_update Symbol

    // __int64  rom__cchmac_final(_QWORD, _QWORD, _QWORD);
    rom__cchmac_final Symbol

    // void  rom__cchmac_init(const struct ccdigest_info *di, void *hc, size_t key_len, const void *key_data);
    rom__cchmac_init Symbol

    // void  rom_j__ccdigest_update(const struct ccdigest_info *di, void *ctx, size_t len, const void *data);
    rom_j__ccdigest_update Symbol

    // __int64  rom__cc_mux2p(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
    rom__cc_mux2p Symbol

    // cc_unit  rom__ccn_add_0(cc_size n, cc_unit *r, const cc_unit *s, const cc_unit *t);
    rom__ccn_add_0 Symbol

    // cc_unit  rom__ccn_sub_0(cc_size n, cc_unit *r, const cc_unit *s, const cc_unit *t);
    rom__ccn_sub_0 Symbol

    // size_t  rom__ccn_write_uint_size(cc_size n, const cc_unit *s);
    rom__ccn_write_uint_size Symbol

    // __int64  rom_cc_clear(__int64, __int64);
    rom_cc_clear Symbol

    // ccdigest_info *rom_get_sha1_digest();
    rom_get_sha1_digest Symbol

    // __int64  rom__ccn_shift_right_1(__int64 result, int8x16_t *, int8x16_t *, __int64);
    rom__ccn_shift_right_1 Symbol

    // int  rom_ccdrbg_init(const struct ccdrbg_info *info, struct ccdrbg_state *drbg, size_t entropyLength, const void *entropy, size_t nonceLength, const void *nonce, size_t psLength, const void *ps);
    rom_ccdrbg_init Symbol

    // int  rom_ccdrbg_reseed(struct ccdrbg_state *prng, size_t entropylen, const void *entropy, size_t inlen, const void *in);
    rom_ccdrbg_reseed Symbol

    // int  rom_ccdrbg_generate(struct ccdrbg_state *prng, size_t outlen, void *out, size_t inlen, const void *in);
    rom_ccdrbg_generate Symbol

    // void  rom_ccdrbg_done(struct ccdrbg_state *prng);
    rom_ccdrbg_done Symbol

    // ccdrbg_info * rom__ccdrbg_factory_nisthmac(ccdrbg_info *result, ccdrbg_nisthmac_custom *a2);
    rom__ccdrbg_factory_nisthmac Symbol

    // void rom_ccdrbg_update(struct ccdrbg_state *ctx, unsigned int ndata, ...);
    rom_ccdrbg_update Symbol

    // const struct ccdigest_info **rom_get_hash_impl();
    rom_get_hash_impl Symbol

    // void * rom__cc_muxp(int s, const void *a, const void *b);
    rom__cc_muxp Symbol

    // cc_size  rom__ccn_n_0(cc_size n, const cc_unit *s);
    rom__ccn_n_0 Symbol

    // char rom_aNor0[5];
    rom_aNor0 Symbol

    // char rom_aSpiNand0[10];
    rom_aSpiNand0 Symbol

    // char rom_aImg4[5];
    rom_aImg4 Symbol

    // char rom_aIm4p[5];
    rom_aIm4p Symbol

    // char rom_aAppleMobileDev[31];
    rom_aAppleMobileDev Symbol

    // char rom_aCpid04xCprv02x[73];
    rom_aCpid04xCprv02x Symbol

    // char rom_aSrtgS[11];
    rom_aSrtgS Symbol

    // char rom_aNonc[7];
    rom_aNonc Symbol

    // char rom_a02x[5];
    rom_a02x Symbol

    // char rom_aSnon[7];
    rom_aSnon Symbol

    // char rom_aDoublePanicIn[17];
    rom_aDoublePanicIn Symbol

    // char rom_aPanic[9];
    rom_aPanic Symbol

    // char rom_aConstructingId[24];
    rom_aConstructingId Symbol

    // char rom_aIdleTask[10];
    rom_aIdleTask Symbol

    // char rom_aUsb[4];
    rom_aUsb Symbol

    // char rom_aNull[7];
    rom_aNull Symbol

    // char rom_aPtr[6];
    rom_aPtr Symbol

    // char rom_a0x[3];
    rom_a0x Symbol

    // 
    rom_aAppleInc Symbol

    // 
    rom_spi_regs Symbol

    // boot_device rom_boot_device_map[8];
    rom_boot_device_map Symbol

    // uint32_t rom_boot_flag_map[8];
    rom_boot_flag_map Symbol

    // device_config rom_probably_device_configs[12];
    rom_probably_device_configs Symbol

    // 
    rom_a78 Symbol

    // usb_interface_descriptor rom_usb_dfu_interface_descriptor;
    rom_usb_dfu_interface_descriptor Symbol

    // usb_dfu_run_time_descriptor rom_usb_dfu_run_time_desc;
    rom_usb_dfu_run_time_desc Symbol

    // DERItemSpec rom_img4_item_spec[4];
    rom_img4_item_spec Symbol

    // DERItemSpec rom_payload_item_spec[6];
    rom_payload_item_spec Symbol

    // DERItemSpec rom_manifest_item_spec[5];
    rom_manifest_item_spec Symbol

    // DERItemSpec rom_recover_item_spec[2];
    rom_recover_item_spec Symbol

    // DERItemSpec rom_payload_uk_item_spec[2];
    rom_payload_uk_item_spec Symbol

    // __int64 rom_root_ca[172];
    rom_root_ca Symbol

    // __int64 rom_DERSignedCertCrlItemSpecs;
    rom_DERSignedCertCrlItemSpecs Symbol

    // DERItemSpec rom_DERTBSCertItemSpecs[10];
    rom_DERTBSCertItemSpecs Symbol

    // DERItemSpec rom_DERExtensionItemSpecs;
    rom_DERExtensionItemSpecs Symbol

    // DERItemSpec rom_DERAlgorithmIdItemSpecs[2];
    rom_DERAlgorithmIdItemSpecs Symbol

    // DERItemSpec rom_DERSubjPubKeyInfoItemSpecs[2];
    rom_DERSubjPubKeyInfoItemSpecs Symbol

    // 
    rom_oidRsa Symbol

    // 
    rom_oidSha384Rsa Symbol

    // void *rom_oidEcPubKey;
    rom_oidEcPubKey Symbol

    // 
    rom_oidSha384 Symbol

    // 
    rom_oidAppleImg4ManifestCertSpec Symbol

    // mib_node *rom_mib_linker_set_begin[31];
    rom_mib_linker_set_begin Symbol

    // 
    rom_mib_linker_set_limit Symbol

    // struct usb_controller_functions rom_synopsys_otg_controller_functions;
    rom_synopsys_otg_controller_functions Symbol

    // mib_cache *rom_mib_node_cache[3];
    rom_mib_node_cache Symbol

    // hash_info rom_hasher_meta;
    rom_hasher_meta Symbol

    // Img4DecodeImplementation rom_cc_digest_impl;
    rom_cc_digest_impl Symbol

    // DERItem rom_oidRsaItem;
    rom_oidRsaItem Symbol

    // 
    rom_oidSha384RsaItem Symbol

    // DERItem rom_oidEcPubKeyItem;
    rom_oidEcPubKeyItem Symbol

    // 
    rom_oidSha384Item Symbol

    // DERItem rom_oidAppleImg4ManifestCertSpecItem;
    rom_oidAppleImg4ManifestCertSpecItem Symbol

    // const struct ccdigest_info *rom_sha384;
    rom_sha384 Symbol

    // ccdigest_info rom_sha1;
    rom_sha1 Symbol

    // akf_wrapper rom__akf_wrappers;
    rom__akf_wrappers Symbol

    // list_node rom_images;
    rom_images Symbol

    // __int64 rom_stack_cookie;
    rom_stack_cookie Symbol

    // struct list_node rom_task_list;
    rom_task_list Symbol

    // list_node rom_run_q;
    rom_run_q Symbol

    // task rom_bootstrap_task;
    rom_bootstrap_task Symbol

    // struct usb_device_descriptor rom_usb_core_device_descriptor;
    rom_usb_core_device_descriptor Symbol

    // uint64_t rom_heap_cookie[2];
    rom_heap_cookie Symbol

    // ccdrbg_state *rom_ccdrbg_state_ptr;
    rom_ccdrbg_state_ptr Symbol

    // int ( *rom_flash_spi_read_range)(uintptr_t handle, uint8_t *ptr, uint32_t offset, uint32_t length);
    rom_flash_spi_read_range Symbol

    // 
    rom_deep_idle_timeout Symbol

    // __int64 ( *rom_idle_task_routine)();
    rom_idle_task_routine Symbol

    // int ( *rom_nor_blockdev_read_block)(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_nor_blockdev_read_block Symbol

    // void ( *rom_synopsys_otg_int_handler_ptr)(void *blah);
    rom_synopsys_otg_int_handler_ptr Symbol

    // __int64 rom_synopsys_otg_task_ptr;
    rom_synopsys_otg_task_ptr Symbol

    // void ( *rom_data_received_ptr)(u_int32_t data_rcvd);
    rom_data_received_ptr Symbol

    // void (*rom_handle_bus_reset_ptr)(void);
    rom_handle_bus_reset_ptr Symbol

    // int ( *rom_handle_interface_request_ptr)(struct usb_device_request *request, u_int8_t **out_data);
    rom_handle_interface_request_ptr Symbol

    // int ( *rom_blockdev_erase_hook)(struct blockdev *, off_t offset, uint64_t len);
    rom_blockdev_erase_hook Symbol

    // int ( *rom_blockdev_read_block_hook)(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_block_hook Symbol

    // int ( *rom_blockdev_read_hook)(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_hook Symbol

    // int ( *rom_blockdev_write_block_hook)(struct blockdev *, const void *ptr, block_addr block, uint32_t count);
    rom_blockdev_write_block_hook Symbol

    // int ( *rom_blockdev_write_hook)(struct blockdev *, const void *ptr, off_t offset, uint64_t len);
    rom_blockdev_write_hook Symbol

    // unsigned int ( *rom_crack_chain_root_ptr)(DERItem *certBlob, DERItem *chain, __int64 chain_len);
    rom_crack_chain_root_ptr Symbol

    // void ( *rom_ccdrbg_done_ptr)(struct ccdrbg_state *prng);
    rom_ccdrbg_done_ptr Symbol

    // int ( *rom_ccdrbg_generate_ptr)(struct ccdrbg_state *prng, size_t outlen, void *out, size_t inlen, const void *in);
    rom_ccdrbg_generate_ptr Symbol

    // int ( *rom_ccdrbg_init_ptr)(const struct ccdrbg_info *info, struct ccdrbg_state *drbg, size_t entropyLength, const void *entropy, size_t nonceLength, const void *nonce, size_t psLength, const void *ps);
    rom_ccdrbg_init_ptr Symbol

    // int ( *rom_ccdrbg_reseed_ptr)(struct ccdrbg_state *prng, size_t entropylen, const void *entropy, size_t inlen, const void *in);
    rom_ccdrbg_reseed_ptr Symbol

    // char rom_did_read_aff1;
    rom_did_read_aff1 Symbol

    // int rom_aff1;
    rom_aff1 Symbol

    // interrupt_entry rom_handlers[195];
    rom_handlers Symbol

    // 
    rom_spurious Symbol

    // bool rom_usbphy_powered;
    rom_usbphy_powered Symbol

    // uint8_t rom_sep_nonce_buffer[20];
    rom_sep_nonce_buffer Symbol

    // sep_message rom__sep_send_msg;
    rom__sep_send_msg Symbol

    // sep_message rom__sep_pending_recv_msg;
    rom__sep_pending_recv_msg Symbol

    // sep_message rom__sep_recv_msg;
    rom__sep_recv_msg Symbol

    // image4_callbacks rom_spi_status;
    rom_spi_status Symbol

    // image4_callbacks rom_img_callbacks;
    rom_img_callbacks Symbol

    // int rom_gUSBSerialNumberStatus;
    rom_gUSBSerialNumberStatus Symbol

    // 
    rom_gUSBMoreOtherStatus Symbol

    // _BYTE rom_gUSBMoreOther[129];
    rom_gUSBMoreOther Symbol

    // __int64 rom_debug_cbuf;
    rom_debug_cbuf Symbol

    // task_event rom_debug_event;
    rom_debug_event Symbol

    // _DWORD rom_panicDepth;
    rom_panicDepth Symbol

    // char rom_panicBuf[8];
    rom_panicBuf Symbol

    // char rom_security_environment_consolidated;
    rom_security_environment_consolidated Symbol

    // int rom_security_mode;
    rom_security_mode Symbol

    // __int64 rom_insecure_memory_start;
    rom_insecure_memory_start Symbol

    // __int64 rom_insecure_memory_end;
    rom_insecure_memory_end Symbol

    // __int64 rom_security_boot_manifest_hash[7];
    rom_security_boot_manifest_hash Symbol

    // 
    rom_idle_task Symbol

    // int rom_task_count;
    rom_task_count Symbol

    // 
    rom_run_q_len Symbol

    // int rom_max_task_id;
    rom_max_task_id Symbol

    // char rom_deep_idle;
    rom_deep_idle Symbol

    // 
    rom_deep_idle_threshold_us Symbol

    // __int64 rom_boot_time_ticks;
    rom_boot_time_ticks Symbol

    // 
    rom_shallow_idle_cnt Symbol

    // 
    rom_deep_idle_ticks Symbol

    // 
    rom_deep_idle_cnt Symbol

    // bool rom_usb_inited;
    rom_usb_inited Symbol

    // void (*rom_timer_deadline_func)(void);
    rom_timer_deadline_func Symbol

    // char rom_setup_pkt_buffer_valid;
    rom_setup_pkt_buffer_valid Symbol

    // int rom_usb_task_event_status;
    rom_usb_task_event_status Symbol

    // int rom_synopsys_otg_gintsts;
    rom_synopsys_otg_gintsts Symbol

    // int rom_synopsys_otg_daintsts;
    rom_synopsys_otg_daintsts Symbol

    // int rom_max_packet_count;
    rom_max_packet_count Symbol

    // int rom_max_dma_size;
    rom_max_dma_size Symbol

    // int rom_core_version;
    rom_core_version Symbol

    // uint8_t **rom_ep0_rx_buffer;
    rom_ep0_rx_buffer Symbol

    // uint8_t **rom_setup_pkt_buffer;
    rom_setup_pkt_buffer Symbol

    // struct task_event rom_usb_task_event;
    rom_usb_task_event Symbol

    // struct task_event rom_usb_task_terminate_event;
    rom_usb_task_terminate_event Symbol

    // usb_endpoint_instance rom_synopsys_otg_endpoints[12];
    rom_synopsys_otg_endpoints Symbol

    // struct usb_controller_functions rom_usb_controller_funcs;
    rom_usb_controller_funcs Symbol

    // usb_event_t rom_usb_core_cable_state;
    rom_usb_core_cable_state Symbol

    // usb_interface_instance *rom_registered_interfaces[2];
    rom_registered_interfaces Symbol

    // int rom_ep0_data_phase_if_num;
    rom_ep0_data_phase_if_num Symbol

    // int rom_registered_interfaces_count;
    rom_registered_interfaces_count Symbol

    // int rom_usb_device_state;
    rom_usb_device_state Symbol

    // __int64 rom_nonce_string_desc;
    rom_nonce_string_desc Symbol

    // __int64 rom_ep0_tx_buffer;
    rom_ep0_tx_buffer Symbol

    // __int64 rom_usb_core_hs_configuration_descriptor;
    rom_usb_core_hs_configuration_descriptor Symbol

    // __int64 rom_usb_core_fs_configuration_descriptor;
    rom_usb_core_fs_configuration_descriptor Symbol

    // __int64 rom_usb_core_configuration_descriptor;
    rom_usb_core_configuration_descriptor Symbol

    // __int64 rom_usb_core_other_speed_configuration_descriptor;
    rom_usb_core_other_speed_configuration_descriptor Symbol

    // char rom_dfu_done;
    rom_dfu_done Symbol

    // bool rom_usb_dfu_inited;
    rom_usb_dfu_inited Symbol

    // char rom_dfu_state;
    rom_dfu_state Symbol

    // int rom_image_buffer_size;
    rom_image_buffer_size Symbol

    // int rom_completion_status;
    rom_completion_status Symbol

    // uint32_t rom_total_received;
    rom_total_received Symbol

    // usb_dfu_status_request rom_status_req;
    rom_status_req Symbol

    // void *rom_image_buffer;
    rom_image_buffer Symbol

    // __int64 rom_io_buffer;
    rom_io_buffer Symbol

    // struct task_event rom_dfu_event;
    rom_dfu_event Symbol

    // struct usb_interface_instance rom_usb_dfu_interface_instance;
    rom_usb_dfu_interface_instance Symbol

    // blockdev *rom_bdev_list;
    rom_bdev_list Symbol

    // 
    rom_maybe_mib_flags Symbol

    // char rom_mib_cache_initialized;
    rom_mib_cache_initialized Symbol

    // char rom_initialized_nisthmac;
    rom_initialized_nisthmac Symbol

    // char rom_random_count;
    rom_random_count Symbol

    // int rom_random_len;
    rom_random_len Symbol

    // __int64 rom_entropy_len;
    rom_entropy_len Symbol

    // char rom_random_output[10];
    rom_random_output Symbol

    // ccdrbg_nisthmac_custom rom_random_digest_maybe;
    rom_random_digest_maybe Symbol

    // ccdrbg_info rom_nisthmac_info;
    rom_nisthmac_info Symbol

    // bool rom_ready;
    rom_ready Symbol

    // list_node rom_callout_queue;
    rom_callout_queue Symbol

    // const struct ccdigest_info *rom_img_hash_impml;
    rom_img_hash_impml Symbol

    // __int64 rom_gPanicStr;
    rom_gPanicStr Symbol

    // __int64 rom_gPanicFunc;
    rom_gPanicFunc Symbol

    // char rom_is_in_higher_el;
    rom_is_in_higher_el Symbol

    // callout rom_deep_idle_callout;
    rom_deep_idle_callout Symbol

    // task *rom_current_task_0;
    rom_current_task_0 Symbol

    // struct task *rom_controller_task;
    rom_controller_task Symbol

    // int rom_usb_configuration_string_desc_index;
    rom_usb_configuration_string_desc_index Symbol

    // new_chunk_data rom_new_chunk_data_0;
    rom_new_chunk_data_0 Symbol

    // new_chunk_data rom_other_new_chunk_data;
    rom_other_new_chunk_data Symbol

    // __int64 rom_task_stacks[];
    rom_task_stacks Symbol

    // char rom_task_stacks_used[];
    rom_task_stacks_used Symbol

    // int rom_higher_el_count;
    rom_higher_el_count Symbol

    // struct arm_exception_frame64 *rom_irq_frame;
    rom_irq_frame Symbol

    // int rom_rAUSB_USB20PHY_CTL;
    rom_rAUSB_USB20PHY_CTL Symbol

    // int rom_rAUSB_USB20PHY_OTGSIG;
    rom_rAUSB_USB20PHY_OTGSIG Symbol

    // 
    rom_DWCUSB_GAHBCFG Symbol

    // 
    rom_DWCUSB_GUSBCFG Symbol

    // unsigned int rom_DWCUSB_GRSTCTL;
    rom_DWCUSB_GRSTCTL Symbol

    // int rom_DWCUSB_GINTSTS;
    rom_DWCUSB_GINTSTS Symbol

    // int rom_DWCUSB_GINTMSK;
    rom_DWCUSB_GINTMSK Symbol

    // __int16 rom_DWCUSB_GSNPSID;
    rom_DWCUSB_GSNPSID Symbol

    // 
    rom_DWCUSB_GHWCFG1 Symbol

    // 
    rom_DWCUSB_GHWCFG2 Symbol

    // 
    rom_DWCUSB_GHWCFG3 Symbol

    // int rom_DWCUSB_DCFG;
    rom_DWCUSB_DCFG Symbol

    // int rom_DWCUSB_DCTL;
    rom_DWCUSB_DCTL Symbol

    // int rom_DWCUSB_DIEPMSK;
    rom_DWCUSB_DIEPMSK Symbol

    // int rom_DWCUSB_DOEPMSK;
    rom_DWCUSB_DOEPMSK Symbol

    // 
    rom_DWCUSB_DAINT Symbol

    // int rom_DWCUSB_DAINTMSK;
    rom_DWCUSB_DAINTMSK Symbol

    // int rom_DWCUSB_DIEPINT;
    rom_DWCUSB_DIEPINT Symbol

    // 
    rom_DWCUSB_DOEPCTL_0 Symbol

    // int rom_DWCUSB_DOEPTSIZ_0;
    rom_DWCUSB_DOEPTSIZ_0 Symbol

    // 
    rom_DWCUSB_DOEPDMA Symbol

    // int rom_DWCUSB_DOEPINT_END;
    rom_DWCUSB_DOEPINT_END Symbol

    // unsigned int rom_rPMGR_SCRATCH0;
    rom_rPMGR_SCRATCH0 Symbol

    // 
    rom_rPMGR_SCRATCH1 Symbol

    // 
    rom_rPMGR_SCRATCH2 Symbol

    // 
    rom_rPMGR_SCRATCH3 Symbol

    // unsigned int rom_rPMGR_SCRATCH_BOOT_NONCE_0;
    rom_rPMGR_SCRATCH_BOOT_NONCE_0 Symbol

    // unsigned int rom_rPMGR_SCRATCH_BOOT_NONCE_1;
    rom_rPMGR_SCRATCH_BOOT_NONCE_1 Symbol

    // int rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST;
    rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST Symbol

    // 
    rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_LAST Symbol

    // int rom_AIC_CPU_ID;
    rom_AIC_CPU_ID Symbol

    // int rom_rAIC_IACK;
    rom_rAIC_IACK Symbol

    // _DWORD rom_rAIC_EIR_DEST[1088];
    rom_rAIC_EIR_DEST Symbol

    // _DWORD rom_rAIC_EIR_MASK_CLR[4190112];
    rom_rAIC_EIR_MASK_CLR Symbol

    // __int64 rom_gpio_base_addr;
    rom_gpio_base_addr Symbol

    // 
    rom_rGPIO_PINSTRAPS_VALID Symbol

    // int rom_report_id;
    rom_report_id Symbol

    // __int64 rom_rCFG_FUSE0;
    rom_rCFG_FUSE0 Symbol

    // int rom_rCFG_FUSE2;
    rom_rCFG_FUSE2 Symbol

    // int rom_rCFG_FUSE3;
    rom_rCFG_FUSE3 Symbol

    // int rom_rCFG_FUSE4;
    rom_rCFG_FUSE4 Symbol

    // int rom_rECIDLO;
    rom_rECIDLO Symbol

    // 
    rom_rECIDHI Symbol

    // int rom_rCFG_FUSE0_RAW;
    rom_rCFG_FUSE0_RAW Symbol

    // int rom_rCFG_FUSE1_RAW;
    rom_rCFG_FUSE1_RAW Symbol

    // unsigned int rom_rCFG_FUSE2_RAW;
    rom_rCFG_FUSE2_RAW Symbol

    // unsigned int rom_rCFG_FUSE3_RAW;
    rom_rCFG_FUSE3_RAW Symbol

    // int rom_rMINIPMGR_SEAL_DATA_A_FIRST;
    rom_rMINIPMGR_SEAL_DATA_A_FIRST Symbol

    // 
    rom_rMINIPMGR_SEAL_DATA_A_LAST Symbol

    // int rom_rMINIPMGR_SEAL_CTL_A;
    rom_rMINIPMGR_SEAL_CTL_A Symbol
}

// Gets the symbols from the rom meta information.
func (r *ROM) GetSymbols() *Symbols {
    ret := &Symbols{}
    for _, symbt := range r.Symbols() {
        switch symbt.Name {

        case "rom_start":
            ret.rom_start = FromFbs(symbt)

        case "rom_rom_aSecureromForT8":
            ret.rom_rom_aSecureromForT8 = FromFbs(symbt)

        case "rom_aRomrelease":
            ret.rom_aRomrelease = FromFbs(symbt)

        case "rom_aIboot447900100":
            ret.rom_aIboot447900100 = FromFbs(symbt)

        case "rom_arch_cpu_init":
            ret.rom_arch_cpu_init = FromFbs(symbt)

        case "rom_arch_cpu_quiesce":
            ret.rom_arch_cpu_quiesce = FromFbs(symbt)

        case "rom_arm_read_sctlr":
            ret.rom_arm_read_sctlr = FromFbs(symbt)

        case "rom__arm_write_sctlr":
            ret.rom__arm_write_sctlr = FromFbs(symbt)

        case "rom_arm_write_mair":
            ret.rom_arm_write_mair = FromFbs(symbt)

        case "rom_arm_write_tcr":
            ret.rom_arm_write_tcr = FromFbs(symbt)

        case "rom_arm_write_ttbr0":
            ret.rom_arm_write_ttbr0 = FromFbs(symbt)

        case "rom_arm_read_cpacr":
            ret.rom_arm_read_cpacr = FromFbs(symbt)

        case "rom_arm_write_cpacr":
            ret.rom_arm_write_cpacr = FromFbs(symbt)

        case "rom_arm_read_cntp_ctl":
            ret.rom_arm_read_cntp_ctl = FromFbs(symbt)

        case "rom_arm_write_cntp_ctl":
            ret.rom_arm_write_cntp_ctl = FromFbs(symbt)

        case "rom_arm_read_cntpct":
            ret.rom_arm_read_cntpct = FromFbs(symbt)

        case "rom_arm_write_cntp_tval":
            ret.rom_arm_write_cntp_tval = FromFbs(symbt)

        case "rom_arm_flush_tlbs":
            ret.rom_arm_flush_tlbs = FromFbs(symbt)

        case "rom_arm_invalidate_icache":
            ret.rom_arm_invalidate_icache = FromFbs(symbt)

        case "rom_arm_invalidate_dcache_line":
            ret.rom_arm_invalidate_dcache_line = FromFbs(symbt)

        case "rom_arm_clean_dcache_line":
            ret.rom_arm_clean_dcache_line = FromFbs(symbt)

        case "rom_arm_clean_invalidate_dcache":
            ret.rom_arm_clean_invalidate_dcache = FromFbs(symbt)

        case "rom_arm_clean_dcache":
            ret.rom_arm_clean_dcache = FromFbs(symbt)

        case "rom_arm_invalidate_dcache":
            ret.rom_arm_invalidate_dcache = FromFbs(symbt)

        case "rom_arm_clean_invalidate_dcache_line":
            ret.rom_arm_clean_invalidate_dcache_line = FromFbs(symbt)

        case "rom_arm_drain_write_buffer":
            ret.rom_arm_drain_write_buffer = FromFbs(symbt)

        case "rom_arm_memory_barrier":
            ret.rom_arm_memory_barrier = FromFbs(symbt)

        case "rom__arm_vtop":
            ret.rom__arm_vtop = FromFbs(symbt)

        case "rom_arch_enable_ints":
            ret.rom_arch_enable_ints = FromFbs(symbt)

        case "rom_return_to_el0":
            ret.rom_return_to_el0 = FromFbs(symbt)

        case "rom_finish_irq":
            ret.rom_finish_irq = FromFbs(symbt)

        case "rom_nullsub_14":
            ret.rom_nullsub_14 = FromFbs(symbt)

        case "rom__arch_halt":
            ret.rom__arch_halt = FromFbs(symbt)

        case "rom__arch_spin":
            ret.rom__arch_spin = FromFbs(symbt)

        case "rom_set_paci_a_key":
            ret.rom_set_paci_a_key = FromFbs(symbt)

        case "rom_set_paci_b_key":
            ret.rom_set_paci_b_key = FromFbs(symbt)

        case "rom_set_pacd_a_key":
            ret.rom_set_pacd_a_key = FromFbs(symbt)

        case "rom_set_pacd_b_key":
            ret.rom_set_pacd_b_key = FromFbs(symbt)

        case "rom_set_pacc_a_key":
            ret.rom_set_pacc_a_key = FromFbs(symbt)

        case "rom_enable_pacia_key":
            ret.rom_enable_pacia_key = FromFbs(symbt)

        case "rom_enable_pacib_key":
            ret.rom_enable_pacib_key = FromFbs(symbt)

        case "rom_authenticate_task_pointer":
            ret.rom_authenticate_task_pointer = FromFbs(symbt)

        case "rom_get_aff1":
            ret.rom_get_aff1 = FromFbs(symbt)

        case "rom_curr_el_sp0_sync":
            ret.rom_curr_el_sp0_sync = FromFbs(symbt)

        case "rom_curr_el_sp0_irq":
            ret.rom_curr_el_sp0_irq = FromFbs(symbt)

        case "rom_curr_el_sp0_fiq":
            ret.rom_curr_el_sp0_fiq = FromFbs(symbt)

        case "rom_curr_el_sp0_serror":
            ret.rom_curr_el_sp0_serror = FromFbs(symbt)

        case "rom_curr_el_spx_sync":
            ret.rom_curr_el_spx_sync = FromFbs(symbt)

        case "rom_curr_el_spx_irq":
            ret.rom_curr_el_spx_irq = FromFbs(symbt)

        case "rom_curr_el_spx_fiq":
            ret.rom_curr_el_spx_fiq = FromFbs(symbt)

        case "rom_curr_el_spx_serror":
            ret.rom_curr_el_spx_serror = FromFbs(symbt)

        case "rom_lower_el_aarch64_sync":
            ret.rom_lower_el_aarch64_sync = FromFbs(symbt)

        case "rom_lower_el_aarch64_irq":
            ret.rom_lower_el_aarch64_irq = FromFbs(symbt)

        case "rom_lower_el_aarch64_fiq":
            ret.rom_lower_el_aarch64_fiq = FromFbs(symbt)

        case "rom_lower_el_aarch64_serror":
            ret.rom_lower_el_aarch64_serror = FromFbs(symbt)

        case "rom_aUuid":
            ret.rom_aUuid = FromFbs(symbt)

        case "rom_dispatch64":
            ret.rom_dispatch64 = FromFbs(symbt)

        case "rom_def_100001428":
            ret.rom_def_100001428 = FromFbs(symbt)

        case "rom_jpt_100001428":
            ret.rom_jpt_100001428 = FromFbs(symbt)

        case "rom_arm_mmu_init":
            ret.rom_arm_mmu_init = FromFbs(symbt)

        case "rom_task_init_stack_magic_cookie":
            ret.rom_task_init_stack_magic_cookie = FromFbs(symbt)

        case "rom_arch_task_create":
            ret.rom_arch_task_create = FromFbs(symbt)

        case "rom_arch_task_destroy":
            ret.rom_arch_task_destroy = FromFbs(symbt)

        case "rom_main":
            ret.rom_main = FromFbs(symbt)

        case "rom_panic_sep_client_reader":
            ret.rom_panic_sep_client_reader = FromFbs(symbt)

        case "rom_akf_recv_mbox":
            ret.rom_akf_recv_mbox = FromFbs(symbt)

        case "rom_probably_panic":
            ret.rom_probably_panic = FromFbs(symbt)

        case "rom_akf_send_mbox":
            ret.rom_akf_send_mbox = FromFbs(symbt)

        case "rom_akf_stop":
            ret.rom_akf_stop = FromFbs(symbt)

        case "rom_get_some_uk_vtable":
            ret.rom_get_some_uk_vtable = FromFbs(symbt)

        case "rom_interrupt_init":
            ret.rom_interrupt_init = FromFbs(symbt)

        case "rom_interrupt_mask_all":
            ret.rom_interrupt_mask_all = FromFbs(symbt)

        case "rom_mask_int":
            ret.rom_mask_int = FromFbs(symbt)

        case "rom_unmask_int":
            ret.rom_unmask_int = FromFbs(symbt)

        case "rom__aic_unmask_int_internal":
            ret.rom__aic_unmask_int_internal = FromFbs(symbt)

        case "rom_install_int_handler":
            ret.rom_install_int_handler = FromFbs(symbt)

        case "rom_platform_irq":
            ret.rom_platform_irq = FromFbs(symbt)

        case "rom_usbphy_power_up":
            ret.rom_usbphy_power_up = FromFbs(symbt)

        case "rom_usbphy_enable_pullup":
            ret.rom_usbphy_enable_pullup = FromFbs(symbt)

        case "rom_usbphy_power_down":
            ret.rom_usbphy_power_down = FromFbs(symbt)

        case "rom_usbphy_is_cable_connected":
            ret.rom_usbphy_is_cable_connected = FromFbs(symbt)

        case "rom_gpio_read":
            ret.rom_gpio_read = FromFbs(symbt)

        case "rom_gpio_get_pad_pin":
            ret.rom_gpio_get_pad_pin = FromFbs(symbt)

        case "rom_flash_spi_select":
            ret.rom_flash_spi_select = FromFbs(symbt)

        case "rom_gpio_configure":
            ret.rom_gpio_configure = FromFbs(symbt)

        case "rom_def_100003578":
            ret.rom_def_100003578 = FromFbs(symbt)

        case "rom_jpt_100003578":
            ret.rom_jpt_100003578 = FromFbs(symbt)

        case "rom_gpio_configure_pupdn":
            ret.rom_gpio_configure_pupdn = FromFbs(symbt)

        case "rom_rGPIO_PINSTRAPS_VALID_CFG_0":
            ret.rom_rGPIO_PINSTRAPS_VALID_CFG_0 = FromFbs(symbt)

        case "rom_maybe_power_on_sep":
            ret.rom_maybe_power_on_sep = FromFbs(symbt)

        case "rom_sep_client_get_nonce":
            ret.rom_sep_client_get_nonce = FromFbs(symbt)

        case "rom__sep_client_reader":
            ret.rom__sep_client_reader = FromFbs(symbt)

        case "rom_flash_spi_init":
            ret.rom_flash_spi_init = FromFbs(symbt)

        case "rom_flash_spi_read_range_fun":
            ret.rom_flash_spi_read_range_fun = FromFbs(symbt)

        case "rom_flash_spi_setup_bus":
            ret.rom_flash_spi_setup_bus = FromFbs(symbt)

        case "rom_flash_spi_wait_busy":
            ret.rom_flash_spi_wait_busy = FromFbs(symbt)

        case "rom_spiregs":
            ret.rom_spiregs = FromFbs(symbt)

        case "rom_empty_panic":
            ret.rom_empty_panic = FromFbs(symbt)

        case "rom_spi_setup":
            ret.rom_spi_setup = FromFbs(symbt)

        case "rom_spi_read_etc":
            ret.rom_spi_read_etc = FromFbs(symbt)

        case "rom_spi_write_etc":
            ret.rom_spi_write_etc = FromFbs(symbt)

        case "rom_spi_gpio_read":
            ret.rom_spi_gpio_read = FromFbs(symbt)

        case "rom__image4_get_partial":
            ret.rom__image4_get_partial = FromFbs(symbt)

        case "rom_der_expect":
            ret.rom_der_expect = FromFbs(symbt)

        case "rom_der_restrict":
            ret.rom_der_restrict = FromFbs(symbt)

        case "rom_der_expect_ia5string":
            ret.rom_der_expect_ia5string = FromFbs(symbt)

        case "rom_image4_validate_property_callback_interposer":
            ret.rom_image4_validate_property_callback_interposer = FromFbs(symbt)

        case "rom_called_by_verify_impl":
            ret.rom_called_by_verify_impl = FromFbs(symbt)

        case "rom_image4_process_superblock":
            ret.rom_image4_process_superblock = FromFbs(symbt)

        case "rom_image4_find":
            ret.rom_image4_find = FromFbs(symbt)

        case "rom_image4_load":
            ret.rom_image4_load = FromFbs(symbt)

        case "rom_image4_load_copyobject":
            ret.rom_image4_load_copyobject = FromFbs(symbt)

        case "rom_image4_verify_number_relation":
            ret.rom_image4_verify_number_relation = FromFbs(symbt)

        case "rom_image4_verify_boolean_relation":
            ret.rom_image4_verify_boolean_relation = FromFbs(symbt)

        case "rom_platform_cache_operation":
            ret.rom_platform_cache_operation = FromFbs(symbt)

        case "rom_platform_memory_barrier":
            ret.rom_platform_memory_barrier = FromFbs(symbt)

        case "rom_platform_get_iboot_flags":
            ret.rom_platform_get_iboot_flags = FromFbs(symbt)

        case "rom_j_chipid_get_minimum_epoch":
            ret.rom_j_chipid_get_minimum_epoch = FromFbs(symbt)

        case "rom_platform_get_usb_product_id":
            ret.rom_platform_get_usb_product_id = FromFbs(symbt)

        case "rom_platform_get_usb_product_string":
            ret.rom_platform_get_usb_product_string = FromFbs(symbt)

        case "rom_platform_get_usb_serial_number_string":
            ret.rom_platform_get_usb_serial_number_string = FromFbs(symbt)

        case "rom_hash_calculate":
            ret.rom_hash_calculate = FromFbs(symbt)

        case "rom_platform_get_usb_more_other_string":
            ret.rom_platform_get_usb_more_other_string = FromFbs(symbt)

        case "rom_platform_consume_nonce":
            ret.rom_platform_consume_nonce = FromFbs(symbt)

        case "rom_panic_as_well":
            ret.rom_panic_as_well = FromFbs(symbt)

        case "rom_platform_start":
            ret.rom_platform_start = FromFbs(symbt)

        case "rom_report_no_boot_image":
            ret.rom_report_no_boot_image = FromFbs(symbt)

        case "rom_some_kind_of_report":
            ret.rom_some_kind_of_report = FromFbs(symbt)

        case "rom_nullsub_5":
            ret.rom_nullsub_5 = FromFbs(symbt)

        case "rom_platform_init_setup_clocks":
            ret.rom_platform_init_setup_clocks = FromFbs(symbt)

        case "rom_unknown_main_init_fn":
            ret.rom_unknown_main_init_fn = FromFbs(symbt)

        case "rom_platform_init_hwpins":
            ret.rom_platform_init_hwpins = FromFbs(symbt)

        case "rom_platform_init_internal_mem":
            ret.rom_platform_init_internal_mem = FromFbs(symbt)

        case "rom_platform_get_entropy":
            ret.rom_platform_get_entropy = FromFbs(symbt)

        case "rom_platform_quiesce_hardware":
            ret.rom_platform_quiesce_hardware = FromFbs(symbt)

        case "rom_platform_bootprep":
            ret.rom_platform_bootprep = FromFbs(symbt)

        case "rom_platform_disable_keys":
            ret.rom_platform_disable_keys = FromFbs(symbt)

        case "rom_get_integrated_hash":
            ret.rom_get_integrated_hash = FromFbs(symbt)

        case "rom_something_l2_cramconfig":
            ret.rom_something_l2_cramconfig = FromFbs(symbt)

        case "rom_platform_reset":
            ret.rom_platform_reset = FromFbs(symbt)

        case "rom_platform_get_board_id":
            ret.rom_platform_get_board_id = FromFbs(symbt)

        case "rom_platform_get_lock_fuses_required":
            ret.rom_platform_get_lock_fuses_required = FromFbs(symbt)

        case "rom_platform_get_boot_device":
            ret.rom_platform_get_boot_device = FromFbs(symbt)

        case "rom_platform_enable_boot_interface":
            ret.rom_platform_enable_boot_interface = FromFbs(symbt)

        case "rom_platform_get_nonce":
            ret.rom_platform_get_nonce = FromFbs(symbt)

        case "rom_platform_get_sep_nonce":
            ret.rom_platform_get_sep_nonce = FromFbs(symbt)

        case "rom_platform_get_spi_frequency":
            ret.rom_platform_get_spi_frequency = FromFbs(symbt)

        case "rom_platform_get_usb_cable_connected":
            ret.rom_platform_get_usb_cable_connected = FromFbs(symbt)

        case "rom_platform_watchdog_tickle":
            ret.rom_platform_watchdog_tickle = FromFbs(symbt)

        case "rom_platform_get_force_dfu":
            ret.rom_platform_get_force_dfu = FromFbs(symbt)

        case "rom_platform_get_request_dfu1":
            ret.rom_platform_get_request_dfu1 = FromFbs(symbt)

        case "rom_platform_get_request_dfu2":
            ret.rom_platform_get_request_dfu2 = FromFbs(symbt)

        case "rom_platform_demote_production":
            ret.rom_platform_demote_production = FromFbs(symbt)

        case "rom_platform_get_boot_trampoline":
            ret.rom_platform_get_boot_trampoline = FromFbs(symbt)

        case "rom_platform_get_boot_manifest_hash":
            ret.rom_platform_get_boot_manifest_hash = FromFbs(symbt)

        case "rom_platform_set_boot_manifest_hash":
            ret.rom_platform_set_boot_manifest_hash = FromFbs(symbt)

        case "rom_memzero_if_io_reg":
            ret.rom_memzero_if_io_reg = FromFbs(symbt)

        case "rom_panic_now":
            ret.rom_panic_now = FromFbs(symbt)

        case "rom_platform_sidp_lock_rom_manifest":
            ret.rom_platform_sidp_lock_rom_manifest = FromFbs(symbt)

        case "rom_platform_sidp_set_rom_manifest":
            ret.rom_platform_sidp_set_rom_manifest = FromFbs(symbt)

        case "rom_platform_get_mix_n_match_prevention_status":
            ret.rom_platform_get_mix_n_match_prevention_status = FromFbs(symbt)

        case "rom_platform_set_mix_n_match_prevention_status":
            ret.rom_platform_set_mix_n_match_prevention_status = FromFbs(symbt)

        case "rom__boot_handoff_trampoline":
            ret.rom__boot_handoff_trampoline = FromFbs(symbt)

        case "rom_cfg_sec_params_valid":
            ret.rom_cfg_sec_params_valid = FromFbs(symbt)

        case "rom_cfg_fuse_get_bit":
            ret.rom_cfg_fuse_get_bit = FromFbs(symbt)

        case "rom_chipid_get_current_production_mode":
            ret.rom_chipid_get_current_production_mode = FromFbs(symbt)

        case "rom_cfg_fuse_get_bool":
            ret.rom_cfg_fuse_get_bool = FromFbs(symbt)

        case "rom_chipid_get_raw_production_mode":
            ret.rom_chipid_get_raw_production_mode = FromFbs(symbt)

        case "rom_chipid_clear_production_mode":
            ret.rom_chipid_clear_production_mode = FromFbs(symbt)

        case "rom_chipid_get_secure_mode":
            ret.rom_chipid_get_secure_mode = FromFbs(symbt)

        case "rom_chipid_get_security_domain":
            ret.rom_chipid_get_security_domain = FromFbs(symbt)

        case "rom_chipid_get_board_id":
            ret.rom_chipid_get_board_id = FromFbs(symbt)

        case "rom_platform_get_security_epoch":
            ret.rom_platform_get_security_epoch = FromFbs(symbt)

        case "rom_chipid_get_chip_id":
            ret.rom_chipid_get_chip_id = FromFbs(symbt)

        case "rom__chipid_get_chip_revision":
            ret.rom__chipid_get_chip_revision = FromFbs(symbt)

        case "rom_chipid_get_ecid_id":
            ret.rom_chipid_get_ecid_id = FromFbs(symbt)

        case "rom_chipid_set_fuse_lock":
            ret.rom_chipid_set_fuse_lock = FromFbs(symbt)

        case "rom_miu_initialize_internal_ram":
            ret.rom_miu_initialize_internal_ram = FromFbs(symbt)

        case "rom_clocks_set_default":
            ret.rom_clocks_set_default = FromFbs(symbt)

        case "rom_clock_gate":
            ret.rom_clock_gate = FromFbs(symbt)

        case "rom_def_100008A1C":
            ret.rom_def_100008A1C = FromFbs(symbt)

        case "rom_jpt_100008A1C":
            ret.rom_jpt_100008A1C = FromFbs(symbt)

        case "rom_nullsub_6":
            ret.rom_nullsub_6 = FromFbs(symbt)

        case "rom_clocks_set_performance":
            ret.rom_clocks_set_performance = FromFbs(symbt)

        case "rom_def_100008B28":
            ret.rom_def_100008B28 = FromFbs(symbt)

        case "rom_jpt_100008B28":
            ret.rom_jpt_100008B28 = FromFbs(symbt)

        case "rom_prepare_and_jump":
            ret.rom_prepare_and_jump = FromFbs(symbt)

        case "rom_debug_init":
            ret.rom_debug_init = FromFbs(symbt)

        case "rom_nullsub_7":
            ret.rom_nullsub_7 = FromFbs(symbt)

        case "rom_nullsub_8":
            ret.rom_nullsub_8 = FromFbs(symbt)

        case "rom__panic":
            ret.rom__panic = FromFbs(symbt)

        case "rom_sys_init_stack_cookie":
            ret.rom_sys_init_stack_cookie = FromFbs(symbt)

        case "rom_stack_corrupted":
            ret.rom_stack_corrupted = FromFbs(symbt)

        case "rom_sys_init":
            ret.rom_sys_init = FromFbs(symbt)

        case "rom_task_init":
            ret.rom_task_init = FromFbs(symbt)

        case "rom_security_init":
            ret.rom_security_init = FromFbs(symbt)

        case "rom_security_protect_memory":
            ret.rom_security_protect_memory = FromFbs(symbt)

        case "rom_security_allow_modes":
            ret.rom_security_allow_modes = FromFbs(symbt)

        case "rom_security_set_untrusted":
            ret.rom_security_set_untrusted = FromFbs(symbt)

        case "rom_security_set_production_override":
            ret.rom_security_set_production_override = FromFbs(symbt)

        case "rom_security_get_effective_production_status":
            ret.rom_security_get_effective_production_status = FromFbs(symbt)

        case "rom_security_set_boot_manifest_hash":
            ret.rom_security_set_boot_manifest_hash = FromFbs(symbt)

        case "rom_security_set_mix_n_match_prevention_status":
            ret.rom_security_set_mix_n_match_prevention_status = FromFbs(symbt)

        case "rom_security_set_lock_fuses":
            ret.rom_security_set_lock_fuses = FromFbs(symbt)

        case "rom_security_get_lock_fuses":
            ret.rom_security_get_lock_fuses = FromFbs(symbt)

        case "rom_security_consolidate_environment":
            ret.rom_security_consolidate_environment = FromFbs(symbt)

        case "rom_security_sidp_seal_rom_manifest":
            ret.rom_security_sidp_seal_rom_manifest = FromFbs(symbt)

        case "rom_did_enter_higher_el":
            ret.rom_did_enter_higher_el = FromFbs(symbt)

        case "rom_potentially_return_to_el0":
            ret.rom_potentially_return_to_el0 = FromFbs(symbt)

        case "rom_panic2":
            ret.rom_panic2 = FromFbs(symbt)

        case "rom_must_return_to_el0":
            ret.rom_must_return_to_el0 = FromFbs(symbt)

        case "rom_panic3":
            ret.rom_panic3 = FromFbs(symbt)

        case "rom_iteratively_return_to_el0":
            ret.rom_iteratively_return_to_el0 = FromFbs(symbt)

        case "rom_set_thread_id_bootstrap":
            ret.rom_set_thread_id_bootstrap = FromFbs(symbt)

        case "rom_task_create_etc":
            ret.rom_task_create_etc = FromFbs(symbt)

        case "rom_idle_task_routine_0":
            ret.rom_idle_task_routine_0 = FromFbs(symbt)

        case "rom_current_task":
            ret.rom_current_task = FromFbs(symbt)

        case "rom_task_create":
            ret.rom_task_create = FromFbs(symbt)

        case "rom_task_destroy":
            ret.rom_task_destroy = FromFbs(symbt)

        case "rom_list_delete":
            ret.rom_list_delete = FromFbs(symbt)

        case "rom_task_yield":
            ret.rom_task_yield = FromFbs(symbt)

        case "rom_insert_run_q_tail":
            ret.rom_insert_run_q_tail = FromFbs(symbt)

        case "rom_task_start":
            ret.rom_task_start = FromFbs(symbt)

        case "rom_wait_queue_wake_all":
            ret.rom_wait_queue_wake_all = FromFbs(symbt)

        case "rom_task_wait_on":
            ret.rom_task_wait_on = FromFbs(symbt)

        case "rom_task_block":
            ret.rom_task_block = FromFbs(symbt)

        case "rom_list_add_tail_0":
            ret.rom_list_add_tail_0 = FromFbs(symbt)

        case "rom_task_sleep":
            ret.rom_task_sleep = FromFbs(symbt)

        case "rom_wait_queue_wake_one":
            ret.rom_wait_queue_wake_one = FromFbs(symbt)

        case "rom_list_remove_head":
            ret.rom_list_remove_head = FromFbs(symbt)

        case "rom_event_init":
            ret.rom_event_init = FromFbs(symbt)

        case "rom_event_signal":
            ret.rom_event_signal = FromFbs(symbt)

        case "rom_event_wait":
            ret.rom_event_wait = FromFbs(symbt)

        case "rom_event_wait_timeout":
            ret.rom_event_wait_timeout = FromFbs(symbt)

        case "rom_deep_idle_timeout_act":
            ret.rom_deep_idle_timeout_act = FromFbs(symbt)

        case "rom_system_time":
            ret.rom_system_time = FromFbs(symbt)

        case "rom_time_has_elapsed":
            ret.rom_time_has_elapsed = FromFbs(symbt)

        case "rom_spin":
            ret.rom_spin = FromFbs(symbt)

        case "rom__aes_crypto_cmd":
            ret.rom__aes_crypto_cmd = FromFbs(symbt)

        case "rom__boot_check_panic":
            ret.rom__boot_check_panic = FromFbs(symbt)

        case "rom_flash_nor_register":
            ret.rom_flash_nor_register = FromFbs(symbt)

        case "rom_nor_blockdev_read_block_0":
            ret.rom_nor_blockdev_read_block_0 = FromFbs(symbt)

        case "rom_flash_nor_init":
            ret.rom_flash_nor_init = FromFbs(symbt)

        case "rom_usb_init_with_controller":
            ret.rom_usb_init_with_controller = FromFbs(symbt)

        case "rom_usb_free":
            ret.rom_usb_free = FromFbs(symbt)

        case "rom_platform_init_usb":
            ret.rom_platform_init_usb = FromFbs(symbt)

        case "rom_usb_quiesce":
            ret.rom_usb_quiesce = FromFbs(symbt)

        case "rom_nullsub_9":
            ret.rom_nullsub_9 = FromFbs(symbt)

        case "rom_nullsub_10":
            ret.rom_nullsub_10 = FromFbs(symbt)

        case "rom_nullsub_11":
            ret.rom_nullsub_11 = FromFbs(symbt)

        case "rom_nullsub_12":
            ret.rom_nullsub_12 = FromFbs(symbt)

        case "rom_mib_get_string":
            ret.rom_mib_get_string = FromFbs(symbt)

        case "rom_image_search_bdev":
            ret.rom_image_search_bdev = FromFbs(symbt)

        case "rom_image_load":
            ret.rom_image_load = FromFbs(symbt)

        case "rom_image_find":
            ret.rom_image_find = FromFbs(symbt)

        case "rom_image_create_from_memory":
            ret.rom_image_create_from_memory = FromFbs(symbt)

        case "rom_image_free":
            ret.rom_image_free = FromFbs(symbt)

        case "rom_platform_get_fuse_modes":
            ret.rom_platform_get_fuse_modes = FromFbs(symbt)

        case "rom_arch_task_context_switch":
            ret.rom_arch_task_context_switch = FromFbs(symbt)

        case "rom_set_thread_id":
            ret.rom_set_thread_id = FromFbs(symbt)

        case "rom_arm_fp_init":
            ret.rom_arm_fp_init = FromFbs(symbt)

        case "rom_handle_svc":
            ret.rom_handle_svc = FromFbs(symbt)

        case "rom__arm_synchronous_exception":
            ret.rom__arm_synchronous_exception = FromFbs(symbt)

        case "rom_handle_irq":
            ret.rom_handle_irq = FromFbs(symbt)

        case "rom_timer_init":
            ret.rom_timer_init = FromFbs(symbt)

        case "rom_timer_stop_all":
            ret.rom_timer_stop_all = FromFbs(symbt)

        case "rom_timer_deadline_enter":
            ret.rom_timer_deadline_enter = FromFbs(symbt)

        case "rom_timer_get_ticks_0":
            ret.rom_timer_get_ticks_0 = FromFbs(symbt)

        case "rom_arm_fiq":
            ret.rom_arm_fiq = FromFbs(symbt)

        case "rom_timer_ticks_to_usecs":
            ret.rom_timer_ticks_to_usecs = FromFbs(symbt)

        case "rom_ticks_per_usec":
            ret.rom_ticks_per_usec = FromFbs(symbt)

        case "rom_usecs_to_ticks":
            ret.rom_usecs_to_ticks = FromFbs(symbt)

        case "rom_platform_power_spin":
            ret.rom_platform_power_spin = FromFbs(symbt)

        case "rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService":
            ret.rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService = FromFbs(symbt)

        case "rom_spi_nand_init":
            ret.rom_spi_nand_init = FromFbs(symbt)

        case "rom_synopsys_otg_controller_init":
            ret.rom_synopsys_otg_controller_init = FromFbs(symbt)

        case "rom_synopsys_otg_start":
            ret.rom_synopsys_otg_start = FromFbs(symbt)

        case "rom_synopsys_otg_stop":
            ret.rom_synopsys_otg_stop = FromFbs(symbt)

        case "rom_synopsys_otg_set_address":
            ret.rom_synopsys_otg_set_address = FromFbs(symbt)

        case "rom_synopsys_otg_get_connection_speed":
            ret.rom_synopsys_otg_get_connection_speed = FromFbs(symbt)

        case "rom_synopsys_otg_activate_endpoint":
            ret.rom_synopsys_otg_activate_endpoint = FromFbs(symbt)

        case "rom_synopsys_otg_do_endpoint_io":
            ret.rom_synopsys_otg_do_endpoint_io = FromFbs(symbt)

        case "rom_synopsys_otg_stall_endpoint":
            ret.rom_synopsys_otg_stall_endpoint = FromFbs(symbt)

        case "rom_synopsys_otg_reset_endpoint_data_toggle":
            ret.rom_synopsys_otg_reset_endpoint_data_toggle = FromFbs(symbt)

        case "rom_synopsys_otg_is_endpoint_stalled":
            ret.rom_synopsys_otg_is_endpoint_stalled = FromFbs(symbt)

        case "rom_synopsys_otg_do_test_mode":
            ret.rom_synopsys_otg_do_test_mode = FromFbs(symbt)

        case "rom_synopsys_otg_abort_endpoint":
            ret.rom_synopsys_otg_abort_endpoint = FromFbs(symbt)

        case "rom_synopsys_otg_deactivate_endpoint":
            ret.rom_synopsys_otg_deactivate_endpoint = FromFbs(symbt)

        case "rom_synopsys_otg_init":
            ret.rom_synopsys_otg_init = FromFbs(symbt)

        case "rom_synopsys_otg_task":
            ret.rom_synopsys_otg_task = FromFbs(symbt)

        case "rom_synopsys_otg_start_controller":
            ret.rom_synopsys_otg_start_controller = FromFbs(symbt)

        case "rom_synopsys_otg_go_on_bus":
            ret.rom_synopsys_otg_go_on_bus = FromFbs(symbt)

        case "rom_scavenge_endpoint_finished_list":
            ret.rom_scavenge_endpoint_finished_list = FromFbs(symbt)

        case "rom_synopsys_otg_start_ep0_out":
            ret.rom_synopsys_otg_start_ep0_out = FromFbs(symbt)

        case "rom_synopsys_otg_free":
            ret.rom_synopsys_otg_free = FromFbs(symbt)

        case "rom_synopsys_otg_int_handler":
            ret.rom_synopsys_otg_int_handler = FromFbs(symbt)

        case "rom_synopsys_otg_start_endpoint_in":
            ret.rom_synopsys_otg_start_endpoint_in = FromFbs(symbt)

        case "rom_usb_controller_register":
            ret.rom_usb_controller_register = FromFbs(symbt)

        case "rom_usb_controller_init":
            ret.rom_usb_controller_init = FromFbs(symbt)

        case "rom_usb_controller_start":
            ret.rom_usb_controller_start = FromFbs(symbt)

        case "rom_usb_controller_set_address":
            ret.rom_usb_controller_set_address = FromFbs(symbt)

        case "rom_usb_controller_get_connection_speed":
            ret.rom_usb_controller_get_connection_speed = FromFbs(symbt)

        case "rom_usb_controller_abort_endpoint":
            ret.rom_usb_controller_abort_endpoint = FromFbs(symbt)

        case "rom_usb_core_init":
            ret.rom_usb_core_init = FromFbs(symbt)

        case "rom_usb_alloc_string_descriptor":
            ret.rom_usb_alloc_string_descriptor = FromFbs(symbt)

        case "rom_usb_create_string_descriptor":
            ret.rom_usb_create_string_descriptor = FromFbs(symbt)

        case "rom_usb_core_start":
            ret.rom_usb_core_start = FromFbs(symbt)

        case "rom_usb_core_register_interface":
            ret.rom_usb_core_register_interface = FromFbs(symbt)

        case "rom_usb_core_handle_usb_control_receive":
            ret.rom_usb_core_handle_usb_control_receive = FromFbs(symbt)

        case "rom_def_10000E514":
            ret.rom_def_10000E514 = FromFbs(symbt)

        case "rom_jpt_10000E514":
            ret.rom_jpt_10000E514 = FromFbs(symbt)

        case "rom_jpt_10000E6C4":
            ret.rom_jpt_10000E6C4 = FromFbs(symbt)

        case "rom_jpt_10000E83C":
            ret.rom_jpt_10000E83C = FromFbs(symbt)

        case "rom_usb_core_event_handler":
            ret.rom_usb_core_event_handler = FromFbs(symbt)

        case "rom_usb_core_complete_endpoint_io":
            ret.rom_usb_core_complete_endpoint_io = FromFbs(symbt)

        case "rom__vsock_abort":
            ret.rom__vsock_abort = FromFbs(symbt)

        case "rom_getDFUImage":
            ret.rom_getDFUImage = FromFbs(symbt)

        case "rom_usb_dfu_init":
            ret.rom_usb_dfu_init = FromFbs(symbt)

        case "rom_handle_interface_request":
            ret.rom_handle_interface_request = FromFbs(symbt)

        case "rom_data_received":
            ret.rom_data_received = FromFbs(symbt)

        case "rom_handle_bus_reset":
            ret.rom_handle_bus_reset = FromFbs(symbt)

        case "rom_usb_dfu_exit":
            ret.rom_usb_dfu_exit = FromFbs(symbt)

        case "rom_lookup_blockdev":
            ret.rom_lookup_blockdev = FromFbs(symbt)

        case "rom_register_blockdev":
            ret.rom_register_blockdev = FromFbs(symbt)

        case "rom_get_cpu_cache_line_size":
            ret.rom_get_cpu_cache_line_size = FromFbs(symbt)

        case "rom_construct_blockdev":
            ret.rom_construct_blockdev = FromFbs(symbt)

        case "rom_blockdev_read_hook_fun":
            ret.rom_blockdev_read_hook_fun = FromFbs(symbt)

        case "rom_blockdev_read_block_hook_fun":
            ret.rom_blockdev_read_block_hook_fun = FromFbs(symbt)

        case "rom_blockdev_write_hook_fun":
            ret.rom_blockdev_write_hook_fun = FromFbs(symbt)

        case "rom_blockdev_write_block_hook_fun":
            ret.rom_blockdev_write_block_hook_fun = FromFbs(symbt)

        case "rom_blockdev_erase_hook_fun":
            ret.rom_blockdev_erase_hook_fun = FromFbs(symbt)

        case "rom_get_bounce_buf":
            ret.rom_get_bounce_buf = FromFbs(symbt)

        case "rom_cbuf_create":
            ret.rom_cbuf_create = FromFbs(symbt)

        case "rom_siphash_aligned":
            ret.rom_siphash_aligned = FromFbs(symbt)

        case "rom_def_10000FBA8":
            ret.rom_def_10000FBA8 = FromFbs(symbt)

        case "rom_jpt_10000FBA8":
            ret.rom_jpt_10000FBA8 = FromFbs(symbt)

        case "rom_heap_alloc":
            ret.rom_heap_alloc = FromFbs(symbt)

        case "rom_uk_heap_fn":
            ret.rom_uk_heap_fn = FromFbs(symbt)

        case "rom_panic_almost":
            ret.rom_panic_almost = FromFbs(symbt)

        case "rom_required_size":
            ret.rom_required_size = FromFbs(symbt)

        case "rom_maybe_verify_block_padding":
            ret.rom_maybe_verify_block_padding = FromFbs(symbt)

        case "rom_calloc":
            ret.rom_calloc = FromFbs(symbt)

        case "rom_verify_block_checksum":
            ret.rom_verify_block_checksum = FromFbs(symbt)

        case "rom_heap_free":
            ret.rom_heap_free = FromFbs(symbt)

        case "rom_calculate_block_checksum":
            ret.rom_calculate_block_checksum = FromFbs(symbt)

        case "rom_heap_memalign":
            ret.rom_heap_memalign = FromFbs(symbt)

        case "rom_posix_memalign":
            ret.rom_posix_memalign = FromFbs(symbt)

        case "rom_heap_panic":
            ret.rom_heap_panic = FromFbs(symbt)

        case "rom_verify_block_padding":
            ret.rom_verify_block_padding = FromFbs(symbt)

        case "rom_free_list_add":
            ret.rom_free_list_add = FromFbs(symbt)

        case "rom_heap_add_chunk_0":
            ret.rom_heap_add_chunk_0 = FromFbs(symbt)

        case "rom_heap_add_chunk":
            ret.rom_heap_add_chunk = FromFbs(symbt)

        case "rom_another_heap_panic2":
            ret.rom_another_heap_panic2 = FromFbs(symbt)

        case "rom_heap_set_cookie":
            ret.rom_heap_set_cookie = FromFbs(symbt)

        case "rom_another_heap_panic":
            ret.rom_another_heap_panic = FromFbs(symbt)

        case "rom_heap_verify":
            ret.rom_heap_verify = FromFbs(symbt)

        case "rom_round_size":
            ret.rom_round_size = FromFbs(symbt)

        case "rom_free_list_remove":
            ret.rom_free_list_remove = FromFbs(symbt)

        case "rom_split_tail":
            ret.rom_split_tail = FromFbs(symbt)

        case "rom_malloc":
            ret.rom_malloc = FromFbs(symbt)

        case "rom_free":
            ret.rom_free = FromFbs(symbt)

        case "rom_log2_int":
            ret.rom_log2_int = FromFbs(symbt)

        case "rom_memset_s":
            ret.rom_memset_s = FromFbs(symbt)

        case "rom_weird_memset":
            ret.rom_weird_memset = FromFbs(symbt)

        case "rom_dprintf":
            ret.rom_dprintf = FromFbs(symbt)

        case "rom_not_empty_putchar":
            ret.rom_not_empty_putchar = FromFbs(symbt)

        case "rom__do_printf":
            ret.rom__do_printf = FromFbs(symbt)

        case "rom_def_100010D1C":
            ret.rom_def_100010D1C = FromFbs(symbt)

        case "rom_def_100010D64":
            ret.rom_def_100010D64 = FromFbs(symbt)

        case "rom_jpt_100010D1C":
            ret.rom_jpt_100010D1C = FromFbs(symbt)

        case "rom_jpt_100010D64":
            ret.rom_jpt_100010D64 = FromFbs(symbt)

        case "rom_snprintf":
            ret.rom_snprintf = FromFbs(symbt)

        case "rom__platform_early_init":
            ret.rom__platform_early_init = FromFbs(symbt)

        case "rom_puts":
            ret.rom_puts = FromFbs(symbt)

        case "rom__putchar":
            ret.rom__putchar = FromFbs(symbt)

        case "rom_strlcat":
            ret.rom_strlcat = FromFbs(symbt)

        case "rom_strlcpy":
            ret.rom_strlcpy = FromFbs(symbt)

        case "rom_memcpy":
            ret.rom_memcpy = FromFbs(symbt)

        case "rom__bzero":
            ret.rom__bzero = FromFbs(symbt)

        case "rom__memset":
            ret.rom__memset = FromFbs(symbt)

        case "rom_memcmp":
            ret.rom_memcmp = FromFbs(symbt)

        case "rom_strcmp":
            ret.rom_strcmp = FromFbs(symbt)

        case "rom_strlen":
            ret.rom_strlen = FromFbs(symbt)

        case "rom_mib_find_node":
            ret.rom_mib_find_node = FromFbs(symbt)

        case "rom_mib_something_varr":
            ret.rom_mib_something_varr = FromFbs(symbt)

        case "rom__mib_find":
            ret.rom__mib_find = FromFbs(symbt)

        case "rom_mib_probably_retrieve_value":
            ret.rom_mib_probably_retrieve_value = FromFbs(symbt)

        case "rom_mib_get_size":
            ret.rom_mib_get_size = FromFbs(symbt)

        case "rom_mib_exists":
            ret.rom_mib_exists = FromFbs(symbt)

        case "rom_mib_get_cached":
            ret.rom_mib_get_cached = FromFbs(symbt)

        case "rom_mib_get_value":
            ret.rom_mib_get_value = FromFbs(symbt)

        case "rom_def_1000120D0":
            ret.rom_def_1000120D0 = FromFbs(symbt)

        case "rom_jpt_1000120D0":
            ret.rom_jpt_1000120D0 = FromFbs(symbt)

        case "rom_get_entropy":
            ret.rom_get_entropy = FromFbs(symbt)

        case "rom_init_entropy_source":
            ret.rom_init_entropy_source = FromFbs(symbt)

        case "rom_timer_get_ticks":
            ret.rom_timer_get_ticks = FromFbs(symbt)

        case "rom_random_get_bytes_internal":
            ret.rom_random_get_bytes_internal = FromFbs(symbt)

        case "rom_random_get_bytes":
            ret.rom_random_get_bytes = FromFbs(symbt)

        case "rom_callout_enqueue":
            ret.rom_callout_enqueue = FromFbs(symbt)

        case "rom__callout_dequeue":
            ret.rom__callout_dequeue = FromFbs(symbt)

        case "rom_list_add_tail":
            ret.rom_list_add_tail = FromFbs(symbt)

        case "rom__callout_reset_deadline":
            ret.rom__callout_reset_deadline = FromFbs(symbt)

        case "rom_callout_dequeue":
            ret.rom_callout_dequeue = FromFbs(symbt)

        case "rom_enter_critical_section":
            ret.rom_enter_critical_section = FromFbs(symbt)

        case "rom_exit_critical_section":
            ret.rom_exit_critical_section = FromFbs(symbt)

        case "rom__irq_enter_critical_section":
            ret.rom__irq_enter_critical_section = FromFbs(symbt)

        case "rom__irq_exit_critical_section_0":
            ret.rom__irq_exit_critical_section_0 = FromFbs(symbt)

        case "rom_really_disable_interrupts_on_current_task":
            ret.rom_really_disable_interrupts_on_current_task = FromFbs(symbt)

        case "rom__irq_exit_critical_section":
            ret.rom__irq_exit_critical_section = FromFbs(symbt)

        case "rom_image4_load_decrypt_payload":
            ret.rom_image4_load_decrypt_payload = FromFbs(symbt)

        case "rom_platform_get_current_production_mode":
            ret.rom_platform_get_current_production_mode = FromFbs(symbt)

        case "rom_platform_get_raw_production_mode":
            ret.rom_platform_get_raw_production_mode = FromFbs(symbt)

        case "rom_platform_get_security_domain":
            ret.rom_platform_get_security_domain = FromFbs(symbt)

        case "rom_platform_get_secure_mode":
            ret.rom_platform_get_secure_mode = FromFbs(symbt)

        case "rom_platform_get_hardware_epoch":
            ret.rom_platform_get_hardware_epoch = FromFbs(symbt)

        case "rom_platform_get_chip_id":
            ret.rom_platform_get_chip_id = FromFbs(symbt)

        case "rom_platform_get_chip_revision":
            ret.rom_platform_get_chip_revision = FromFbs(symbt)

        case "rom_platform_get_ecid_id":
            ret.rom_platform_get_ecid_id = FromFbs(symbt)

        case "rom_j__platform_init_usb":
            ret.rom_j__platform_init_usb = FromFbs(symbt)

        case "rom_platform_get_usb_vendor_id":
            ret.rom_platform_get_usb_vendor_id = FromFbs(symbt)

        case "rom_platform_halt":
            ret.rom_platform_halt = FromFbs(symbt)

        case "rom_platform_deep_idle":
            ret.rom_platform_deep_idle = FromFbs(symbt)

        case "rom_platform_get_usb_manufacturer_string":
            ret.rom_platform_get_usb_manufacturer_string = FromFbs(symbt)

        case "rom_platform_get_usb_device_version":
            ret.rom_platform_get_usb_device_version = FromFbs(symbt)

        case "rom_DERImg4DecodeFindInSequence_0":
            ret.rom_DERImg4DecodeFindInSequence_0 = FromFbs(symbt)

        case "rom_DERImg4DecodeContentFindItemWithTag_0":
            ret.rom_DERImg4DecodeContentFindItemWithTag_0 = FromFbs(symbt)

        case "rom_DERImg4DecodeTagCompare_1":
            ret.rom_DERImg4DecodeTagCompare_1 = FromFbs(symbt)

        case "rom_parse_main_img4_der":
            ret.rom_parse_main_img4_der = FromFbs(symbt)

        case "rom_parse_payload_der":
            ret.rom_parse_payload_der = FromFbs(symbt)

        case "rom_parse_manifest_der":
            ret.rom_parse_manifest_der = FromFbs(symbt)

        case "rom_parse_recovery_der":
            ret.rom_parse_recovery_der = FromFbs(symbt)

        case "rom_DERImg4DecodeProperty_0":
            ret.rom_DERImg4DecodeProperty_0 = FromFbs(symbt)

        case "rom_DERFindInSequence":
            ret.rom_DERFindInSequence = FromFbs(symbt)

        case "rom_DERImg4DecodeParseManifestProperties_0":
            ret.rom_DERImg4DecodeParseManifestProperties_0 = FromFbs(symbt)

        case "rom__Img4DecodePayloadExists_0":
            ret.rom__Img4DecodePayloadExists_0 = FromFbs(symbt)

        case "rom_Img4DecodeGetPayload":
            ret.rom_Img4DecodeGetPayload = FromFbs(symbt)

        case "rom_Img4DecodeGetPayloadType":
            ret.rom_Img4DecodeGetPayloadType = FromFbs(symbt)

        case "rom_Img4DecodeGetPayloadKeybag":
            ret.rom_Img4DecodeGetPayloadKeybag = FromFbs(symbt)

        case "rom_Img4DecodePayloadCompressionExists":
            ret.rom_Img4DecodePayloadCompressionExists = FromFbs(symbt)

        case "rom_Img4DecodeGetPayloadCompression":
            ret.rom_Img4DecodeGetPayloadCompression = FromFbs(symbt)

        case "rom_Img4DecodeCopyPayloadDigest":
            ret.rom_Img4DecodeCopyPayloadDigest = FromFbs(symbt)

        case "rom__Img4DecodeManifestExists_0":
            ret.rom__Img4DecodeManifestExists_0 = FromFbs(symbt)

        case "rom_Img4DecodeCopyManifestDigest":
            ret.rom_Img4DecodeCopyManifestDigest = FromFbs(symbt)

        case "rom__Img4DecodeSectionExists_0":
            ret.rom__Img4DecodeSectionExists_0 = FromFbs(symbt)

        case "rom__Img4DecodeGetRestoreInfoData":
            ret.rom__Img4DecodeGetRestoreInfoData = FromFbs(symbt)

        case "rom_Img4DecodeGetPropertyBoolean_0":
            ret.rom_Img4DecodeGetPropertyBoolean_0 = FromFbs(symbt)

        case "rom_verify_payload_properties":
            ret.rom_verify_payload_properties = FromFbs(symbt)

        case "rom_Img4DecodeEvaluateDictionaryProperties_0":
            ret.rom_Img4DecodeEvaluateDictionaryProperties_0 = FromFbs(symbt)

        case "rom_Img4DecodeInit":
            ret.rom_Img4DecodeInit = FromFbs(symbt)

        case "rom_Img4DecodePerformTrustEvaluatation":
            ret.rom_Img4DecodePerformTrustEvaluatation = FromFbs(symbt)

        case "rom_verify_signature_for_reals":
            ret.rom_verify_signature_for_reals = FromFbs(symbt)

        case "rom_verify_pkcs1_sig":
            ret.rom_verify_pkcs1_sig = FromFbs(symbt)

        case "rom_parse_chain":
            ret.rom_parse_chain = FromFbs(symbt)

        case "rom_verify_chain_signatures":
            ret.rom_verify_chain_signatures = FromFbs(symbt)

        case "rom_verify_parse_chain":
            ret.rom_verify_parse_chain = FromFbs(symbt)

        case "rom_parse_cert_chain":
            ret.rom_parse_cert_chain = FromFbs(symbt)

        case "rom_crack_chain_root":
            ret.rom_crack_chain_root = FromFbs(symbt)

        case "rom_Img4DecodeComputeDigest":
            ret.rom_Img4DecodeComputeDigest = FromFbs(symbt)

        case "rom_crack_chain":
            ret.rom_crack_chain = FromFbs(symbt)

        case "rom_parse_extensions":
            ret.rom_parse_extensions = FromFbs(symbt)

        case "rom_DERDecodeItem":
            ret.rom_DERDecodeItem = FromFbs(symbt)

        case "rom_DERDecodeItemPartialBuffer":
            ret.rom_DERDecodeItemPartialBuffer = FromFbs(symbt)

        case "rom_DERDecodeItemPartialBuffer_0":
            ret.rom_DERDecodeItemPartialBuffer_0 = FromFbs(symbt)

        case "rom__DERParseBitString_0_0":
            ret.rom__DERParseBitString_0_0 = FromFbs(symbt)

        case "rom__DERParseBoolean_0":
            ret.rom__DERParseBoolean_0 = FromFbs(symbt)

        case "rom_DERParseInteger":
            ret.rom_DERParseInteger = FromFbs(symbt)

        case "rom__DERParseInteger64":
            ret.rom__DERParseInteger64 = FromFbs(symbt)

        case "rom_DERDecodeSeqInitAgain":
            ret.rom_DERDecodeSeqInitAgain = FromFbs(symbt)

        case "rom_DERDecodeSeqContentInit":
            ret.rom_DERDecodeSeqContentInit = FromFbs(symbt)

        case "rom_DERDecodeSeqNext":
            ret.rom_DERDecodeSeqNext = FromFbs(symbt)

        case "rom_DERParseSequence":
            ret.rom_DERParseSequence = FromFbs(symbt)

        case "rom_DERParseSequenceContent":
            ret.rom_DERParseSequenceContent = FromFbs(symbt)

        case "rom_DEROidCompare":
            ret.rom_DEROidCompare = FromFbs(symbt)

        case "rom_memcmp_0":
            ret.rom_memcmp_0 = FromFbs(symbt)

        case "rom__lzvn_decode_buffer":
            ret.rom__lzvn_decode_buffer = FromFbs(symbt)

        case "rom__lz4_decode_asm":
            ret.rom__lz4_decode_asm = FromFbs(symbt)

        case "rom__lzfse_decode_lmd":
            ret.rom__lzfse_decode_lmd = FromFbs(symbt)

        case "rom__lzfse_decode_literals":
            ret.rom__lzfse_decode_literals = FromFbs(symbt)

        case "rom__lz4raw_decode_buffer":
            ret.rom__lz4raw_decode_buffer = FromFbs(symbt)

        case "rom__LZFSEIBootBufferPush":
            ret.rom__LZFSEIBootBufferPush = FromFbs(symbt)

        case "rom_aes_key_expansion":
            ret.rom_aes_key_expansion = FromFbs(symbt)

        case "rom__ccaes_arm_decrypt_key128":
            ret.rom__ccaes_arm_decrypt_key128 = FromFbs(symbt)

        case "rom__ccaes_arm_decrypt_key192":
            ret.rom__ccaes_arm_decrypt_key192 = FromFbs(symbt)

        case "rom__ccaes_arm_decrypt_key256":
            ret.rom__ccaes_arm_decrypt_key256 = FromFbs(symbt)

        case "rom__ccaes_arm_encrypt_key":
            ret.rom__ccaes_arm_encrypt_key = FromFbs(symbt)

        case "rom__ccaes_arm_encrypt_key_0":
            ret.rom__ccaes_arm_encrypt_key_0 = FromFbs(symbt)

        case "rom__ccn_cmp_0":
            ret.rom__ccn_cmp_0 = FromFbs(symbt)

        case "rom_nullsub_13":
            ret.rom_nullsub_13 = FromFbs(symbt)

        case "rom__ccn_mul":
            ret.rom__ccn_mul = FromFbs(symbt)

        case "rom_ccdigest":
            ret.rom_ccdigest = FromFbs(symbt)

        case "rom__ccdigest_init":
            ret.rom__ccdigest_init = FromFbs(symbt)

        case "rom__ccdigest_update":
            ret.rom__ccdigest_update = FromFbs(symbt)

        case "rom__cchmac_final":
            ret.rom__cchmac_final = FromFbs(symbt)

        case "rom__cchmac_init":
            ret.rom__cchmac_init = FromFbs(symbt)

        case "rom_j__ccdigest_update":
            ret.rom_j__ccdigest_update = FromFbs(symbt)

        case "rom__cc_mux2p":
            ret.rom__cc_mux2p = FromFbs(symbt)

        case "rom__ccn_add_0":
            ret.rom__ccn_add_0 = FromFbs(symbt)

        case "rom__ccn_sub_0":
            ret.rom__ccn_sub_0 = FromFbs(symbt)

        case "rom__ccn_write_uint_size":
            ret.rom__ccn_write_uint_size = FromFbs(symbt)

        case "rom_cc_clear":
            ret.rom_cc_clear = FromFbs(symbt)

        case "rom_get_sha1_digest":
            ret.rom_get_sha1_digest = FromFbs(symbt)

        case "rom__ccn_shift_right_1":
            ret.rom__ccn_shift_right_1 = FromFbs(symbt)

        case "rom_ccdrbg_init":
            ret.rom_ccdrbg_init = FromFbs(symbt)

        case "rom_ccdrbg_reseed":
            ret.rom_ccdrbg_reseed = FromFbs(symbt)

        case "rom_ccdrbg_generate":
            ret.rom_ccdrbg_generate = FromFbs(symbt)

        case "rom_ccdrbg_done":
            ret.rom_ccdrbg_done = FromFbs(symbt)

        case "rom__ccdrbg_factory_nisthmac":
            ret.rom__ccdrbg_factory_nisthmac = FromFbs(symbt)

        case "rom_ccdrbg_update":
            ret.rom_ccdrbg_update = FromFbs(symbt)

        case "rom_get_hash_impl":
            ret.rom_get_hash_impl = FromFbs(symbt)

        case "rom__cc_muxp":
            ret.rom__cc_muxp = FromFbs(symbt)

        case "rom__ccn_n_0":
            ret.rom__ccn_n_0 = FromFbs(symbt)

        case "rom_aNor0":
            ret.rom_aNor0 = FromFbs(symbt)

        case "rom_aSpiNand0":
            ret.rom_aSpiNand0 = FromFbs(symbt)

        case "rom_aImg4":
            ret.rom_aImg4 = FromFbs(symbt)

        case "rom_aIm4p":
            ret.rom_aIm4p = FromFbs(symbt)

        case "rom_aAppleMobileDev":
            ret.rom_aAppleMobileDev = FromFbs(symbt)

        case "rom_aCpid04xCprv02x":
            ret.rom_aCpid04xCprv02x = FromFbs(symbt)

        case "rom_aSrtgS":
            ret.rom_aSrtgS = FromFbs(symbt)

        case "rom_aNonc":
            ret.rom_aNonc = FromFbs(symbt)

        case "rom_a02x":
            ret.rom_a02x = FromFbs(symbt)

        case "rom_aSnon":
            ret.rom_aSnon = FromFbs(symbt)

        case "rom_aDoublePanicIn":
            ret.rom_aDoublePanicIn = FromFbs(symbt)

        case "rom_aPanic":
            ret.rom_aPanic = FromFbs(symbt)

        case "rom_aConstructingId":
            ret.rom_aConstructingId = FromFbs(symbt)

        case "rom_aIdleTask":
            ret.rom_aIdleTask = FromFbs(symbt)

        case "rom_aUsb":
            ret.rom_aUsb = FromFbs(symbt)

        case "rom_aNull":
            ret.rom_aNull = FromFbs(symbt)

        case "rom_aPtr":
            ret.rom_aPtr = FromFbs(symbt)

        case "rom_a0x":
            ret.rom_a0x = FromFbs(symbt)

        case "rom_aAppleInc":
            ret.rom_aAppleInc = FromFbs(symbt)

        case "rom_spi_regs":
            ret.rom_spi_regs = FromFbs(symbt)

        case "rom_boot_device_map":
            ret.rom_boot_device_map = FromFbs(symbt)

        case "rom_boot_flag_map":
            ret.rom_boot_flag_map = FromFbs(symbt)

        case "rom_probably_device_configs":
            ret.rom_probably_device_configs = FromFbs(symbt)

        case "rom_a78":
            ret.rom_a78 = FromFbs(symbt)

        case "rom_usb_dfu_interface_descriptor":
            ret.rom_usb_dfu_interface_descriptor = FromFbs(symbt)

        case "rom_usb_dfu_run_time_desc":
            ret.rom_usb_dfu_run_time_desc = FromFbs(symbt)

        case "rom_img4_item_spec":
            ret.rom_img4_item_spec = FromFbs(symbt)

        case "rom_payload_item_spec":
            ret.rom_payload_item_spec = FromFbs(symbt)

        case "rom_manifest_item_spec":
            ret.rom_manifest_item_spec = FromFbs(symbt)

        case "rom_recover_item_spec":
            ret.rom_recover_item_spec = FromFbs(symbt)

        case "rom_payload_uk_item_spec":
            ret.rom_payload_uk_item_spec = FromFbs(symbt)

        case "rom_root_ca":
            ret.rom_root_ca = FromFbs(symbt)

        case "rom_DERSignedCertCrlItemSpecs":
            ret.rom_DERSignedCertCrlItemSpecs = FromFbs(symbt)

        case "rom_DERTBSCertItemSpecs":
            ret.rom_DERTBSCertItemSpecs = FromFbs(symbt)

        case "rom_DERExtensionItemSpecs":
            ret.rom_DERExtensionItemSpecs = FromFbs(symbt)

        case "rom_DERAlgorithmIdItemSpecs":
            ret.rom_DERAlgorithmIdItemSpecs = FromFbs(symbt)

        case "rom_DERSubjPubKeyInfoItemSpecs":
            ret.rom_DERSubjPubKeyInfoItemSpecs = FromFbs(symbt)

        case "rom_oidRsa":
            ret.rom_oidRsa = FromFbs(symbt)

        case "rom_oidSha384Rsa":
            ret.rom_oidSha384Rsa = FromFbs(symbt)

        case "rom_oidEcPubKey":
            ret.rom_oidEcPubKey = FromFbs(symbt)

        case "rom_oidSha384":
            ret.rom_oidSha384 = FromFbs(symbt)

        case "rom_oidAppleImg4ManifestCertSpec":
            ret.rom_oidAppleImg4ManifestCertSpec = FromFbs(symbt)

        case "rom_mib_linker_set_begin":
            ret.rom_mib_linker_set_begin = FromFbs(symbt)

        case "rom_mib_linker_set_limit":
            ret.rom_mib_linker_set_limit = FromFbs(symbt)

        case "rom_synopsys_otg_controller_functions":
            ret.rom_synopsys_otg_controller_functions = FromFbs(symbt)

        case "rom_mib_node_cache":
            ret.rom_mib_node_cache = FromFbs(symbt)

        case "rom_hasher_meta":
            ret.rom_hasher_meta = FromFbs(symbt)

        case "rom_cc_digest_impl":
            ret.rom_cc_digest_impl = FromFbs(symbt)

        case "rom_oidRsaItem":
            ret.rom_oidRsaItem = FromFbs(symbt)

        case "rom_oidSha384RsaItem":
            ret.rom_oidSha384RsaItem = FromFbs(symbt)

        case "rom_oidEcPubKeyItem":
            ret.rom_oidEcPubKeyItem = FromFbs(symbt)

        case "rom_oidSha384Item":
            ret.rom_oidSha384Item = FromFbs(symbt)

        case "rom_oidAppleImg4ManifestCertSpecItem":
            ret.rom_oidAppleImg4ManifestCertSpecItem = FromFbs(symbt)

        case "rom_sha384":
            ret.rom_sha384 = FromFbs(symbt)

        case "rom_sha1":
            ret.rom_sha1 = FromFbs(symbt)

        case "rom__akf_wrappers":
            ret.rom__akf_wrappers = FromFbs(symbt)

        case "rom_images":
            ret.rom_images = FromFbs(symbt)

        case "rom_stack_cookie":
            ret.rom_stack_cookie = FromFbs(symbt)

        case "rom_task_list":
            ret.rom_task_list = FromFbs(symbt)

        case "rom_run_q":
            ret.rom_run_q = FromFbs(symbt)

        case "rom_bootstrap_task":
            ret.rom_bootstrap_task = FromFbs(symbt)

        case "rom_usb_core_device_descriptor":
            ret.rom_usb_core_device_descriptor = FromFbs(symbt)

        case "rom_heap_cookie":
            ret.rom_heap_cookie = FromFbs(symbt)

        case "rom_ccdrbg_state_ptr":
            ret.rom_ccdrbg_state_ptr = FromFbs(symbt)

        case "rom_flash_spi_read_range":
            ret.rom_flash_spi_read_range = FromFbs(symbt)

        case "rom_deep_idle_timeout":
            ret.rom_deep_idle_timeout = FromFbs(symbt)

        case "rom_idle_task_routine":
            ret.rom_idle_task_routine = FromFbs(symbt)

        case "rom_nor_blockdev_read_block":
            ret.rom_nor_blockdev_read_block = FromFbs(symbt)

        case "rom_synopsys_otg_int_handler_ptr":
            ret.rom_synopsys_otg_int_handler_ptr = FromFbs(symbt)

        case "rom_synopsys_otg_task_ptr":
            ret.rom_synopsys_otg_task_ptr = FromFbs(symbt)

        case "rom_data_received_ptr":
            ret.rom_data_received_ptr = FromFbs(symbt)

        case "rom_handle_bus_reset_ptr":
            ret.rom_handle_bus_reset_ptr = FromFbs(symbt)

        case "rom_handle_interface_request_ptr":
            ret.rom_handle_interface_request_ptr = FromFbs(symbt)

        case "rom_blockdev_erase_hook":
            ret.rom_blockdev_erase_hook = FromFbs(symbt)

        case "rom_blockdev_read_block_hook":
            ret.rom_blockdev_read_block_hook = FromFbs(symbt)

        case "rom_blockdev_read_hook":
            ret.rom_blockdev_read_hook = FromFbs(symbt)

        case "rom_blockdev_write_block_hook":
            ret.rom_blockdev_write_block_hook = FromFbs(symbt)

        case "rom_blockdev_write_hook":
            ret.rom_blockdev_write_hook = FromFbs(symbt)

        case "rom_crack_chain_root_ptr":
            ret.rom_crack_chain_root_ptr = FromFbs(symbt)

        case "rom_ccdrbg_done_ptr":
            ret.rom_ccdrbg_done_ptr = FromFbs(symbt)

        case "rom_ccdrbg_generate_ptr":
            ret.rom_ccdrbg_generate_ptr = FromFbs(symbt)

        case "rom_ccdrbg_init_ptr":
            ret.rom_ccdrbg_init_ptr = FromFbs(symbt)

        case "rom_ccdrbg_reseed_ptr":
            ret.rom_ccdrbg_reseed_ptr = FromFbs(symbt)

        case "rom_did_read_aff1":
            ret.rom_did_read_aff1 = FromFbs(symbt)

        case "rom_aff1":
            ret.rom_aff1 = FromFbs(symbt)

        case "rom_handlers":
            ret.rom_handlers = FromFbs(symbt)

        case "rom_spurious":
            ret.rom_spurious = FromFbs(symbt)

        case "rom_usbphy_powered":
            ret.rom_usbphy_powered = FromFbs(symbt)

        case "rom_sep_nonce_buffer":
            ret.rom_sep_nonce_buffer = FromFbs(symbt)

        case "rom__sep_send_msg":
            ret.rom__sep_send_msg = FromFbs(symbt)

        case "rom__sep_pending_recv_msg":
            ret.rom__sep_pending_recv_msg = FromFbs(symbt)

        case "rom__sep_recv_msg":
            ret.rom__sep_recv_msg = FromFbs(symbt)

        case "rom_spi_status":
            ret.rom_spi_status = FromFbs(symbt)

        case "rom_img_callbacks":
            ret.rom_img_callbacks = FromFbs(symbt)

        case "rom_gUSBSerialNumberStatus":
            ret.rom_gUSBSerialNumberStatus = FromFbs(symbt)

        case "rom_gUSBMoreOtherStatus":
            ret.rom_gUSBMoreOtherStatus = FromFbs(symbt)

        case "rom_gUSBMoreOther":
            ret.rom_gUSBMoreOther = FromFbs(symbt)

        case "rom_debug_cbuf":
            ret.rom_debug_cbuf = FromFbs(symbt)

        case "rom_debug_event":
            ret.rom_debug_event = FromFbs(symbt)

        case "rom_panicDepth":
            ret.rom_panicDepth = FromFbs(symbt)

        case "rom_panicBuf":
            ret.rom_panicBuf = FromFbs(symbt)

        case "rom_security_environment_consolidated":
            ret.rom_security_environment_consolidated = FromFbs(symbt)

        case "rom_security_mode":
            ret.rom_security_mode = FromFbs(symbt)

        case "rom_insecure_memory_start":
            ret.rom_insecure_memory_start = FromFbs(symbt)

        case "rom_insecure_memory_end":
            ret.rom_insecure_memory_end = FromFbs(symbt)

        case "rom_security_boot_manifest_hash":
            ret.rom_security_boot_manifest_hash = FromFbs(symbt)

        case "rom_idle_task":
            ret.rom_idle_task = FromFbs(symbt)

        case "rom_task_count":
            ret.rom_task_count = FromFbs(symbt)

        case "rom_run_q_len":
            ret.rom_run_q_len = FromFbs(symbt)

        case "rom_max_task_id":
            ret.rom_max_task_id = FromFbs(symbt)

        case "rom_deep_idle":
            ret.rom_deep_idle = FromFbs(symbt)

        case "rom_deep_idle_threshold_us":
            ret.rom_deep_idle_threshold_us = FromFbs(symbt)

        case "rom_boot_time_ticks":
            ret.rom_boot_time_ticks = FromFbs(symbt)

        case "rom_shallow_idle_cnt":
            ret.rom_shallow_idle_cnt = FromFbs(symbt)

        case "rom_deep_idle_ticks":
            ret.rom_deep_idle_ticks = FromFbs(symbt)

        case "rom_deep_idle_cnt":
            ret.rom_deep_idle_cnt = FromFbs(symbt)

        case "rom_usb_inited":
            ret.rom_usb_inited = FromFbs(symbt)

        case "rom_timer_deadline_func":
            ret.rom_timer_deadline_func = FromFbs(symbt)

        case "rom_setup_pkt_buffer_valid":
            ret.rom_setup_pkt_buffer_valid = FromFbs(symbt)

        case "rom_usb_task_event_status":
            ret.rom_usb_task_event_status = FromFbs(symbt)

        case "rom_synopsys_otg_gintsts":
            ret.rom_synopsys_otg_gintsts = FromFbs(symbt)

        case "rom_synopsys_otg_daintsts":
            ret.rom_synopsys_otg_daintsts = FromFbs(symbt)

        case "rom_max_packet_count":
            ret.rom_max_packet_count = FromFbs(symbt)

        case "rom_max_dma_size":
            ret.rom_max_dma_size = FromFbs(symbt)

        case "rom_core_version":
            ret.rom_core_version = FromFbs(symbt)

        case "rom_ep0_rx_buffer":
            ret.rom_ep0_rx_buffer = FromFbs(symbt)

        case "rom_setup_pkt_buffer":
            ret.rom_setup_pkt_buffer = FromFbs(symbt)

        case "rom_usb_task_event":
            ret.rom_usb_task_event = FromFbs(symbt)

        case "rom_usb_task_terminate_event":
            ret.rom_usb_task_terminate_event = FromFbs(symbt)

        case "rom_synopsys_otg_endpoints":
            ret.rom_synopsys_otg_endpoints = FromFbs(symbt)

        case "rom_usb_controller_funcs":
            ret.rom_usb_controller_funcs = FromFbs(symbt)

        case "rom_usb_core_cable_state":
            ret.rom_usb_core_cable_state = FromFbs(symbt)

        case "rom_registered_interfaces":
            ret.rom_registered_interfaces = FromFbs(symbt)

        case "rom_ep0_data_phase_if_num":
            ret.rom_ep0_data_phase_if_num = FromFbs(symbt)

        case "rom_registered_interfaces_count":
            ret.rom_registered_interfaces_count = FromFbs(symbt)

        case "rom_usb_device_state":
            ret.rom_usb_device_state = FromFbs(symbt)

        case "rom_nonce_string_desc":
            ret.rom_nonce_string_desc = FromFbs(symbt)

        case "rom_ep0_tx_buffer":
            ret.rom_ep0_tx_buffer = FromFbs(symbt)

        case "rom_usb_core_hs_configuration_descriptor":
            ret.rom_usb_core_hs_configuration_descriptor = FromFbs(symbt)

        case "rom_usb_core_fs_configuration_descriptor":
            ret.rom_usb_core_fs_configuration_descriptor = FromFbs(symbt)

        case "rom_usb_core_configuration_descriptor":
            ret.rom_usb_core_configuration_descriptor = FromFbs(symbt)

        case "rom_usb_core_other_speed_configuration_descriptor":
            ret.rom_usb_core_other_speed_configuration_descriptor = FromFbs(symbt)

        case "rom_dfu_done":
            ret.rom_dfu_done = FromFbs(symbt)

        case "rom_usb_dfu_inited":
            ret.rom_usb_dfu_inited = FromFbs(symbt)

        case "rom_dfu_state":
            ret.rom_dfu_state = FromFbs(symbt)

        case "rom_image_buffer_size":
            ret.rom_image_buffer_size = FromFbs(symbt)

        case "rom_completion_status":
            ret.rom_completion_status = FromFbs(symbt)

        case "rom_total_received":
            ret.rom_total_received = FromFbs(symbt)

        case "rom_status_req":
            ret.rom_status_req = FromFbs(symbt)

        case "rom_image_buffer":
            ret.rom_image_buffer = FromFbs(symbt)

        case "rom_io_buffer":
            ret.rom_io_buffer = FromFbs(symbt)

        case "rom_dfu_event":
            ret.rom_dfu_event = FromFbs(symbt)

        case "rom_usb_dfu_interface_instance":
            ret.rom_usb_dfu_interface_instance = FromFbs(symbt)

        case "rom_bdev_list":
            ret.rom_bdev_list = FromFbs(symbt)

        case "rom_maybe_mib_flags":
            ret.rom_maybe_mib_flags = FromFbs(symbt)

        case "rom_mib_cache_initialized":
            ret.rom_mib_cache_initialized = FromFbs(symbt)

        case "rom_initialized_nisthmac":
            ret.rom_initialized_nisthmac = FromFbs(symbt)

        case "rom_random_count":
            ret.rom_random_count = FromFbs(symbt)

        case "rom_random_len":
            ret.rom_random_len = FromFbs(symbt)

        case "rom_entropy_len":
            ret.rom_entropy_len = FromFbs(symbt)

        case "rom_random_output":
            ret.rom_random_output = FromFbs(symbt)

        case "rom_random_digest_maybe":
            ret.rom_random_digest_maybe = FromFbs(symbt)

        case "rom_nisthmac_info":
            ret.rom_nisthmac_info = FromFbs(symbt)

        case "rom_ready":
            ret.rom_ready = FromFbs(symbt)

        case "rom_callout_queue":
            ret.rom_callout_queue = FromFbs(symbt)

        case "rom_img_hash_impml":
            ret.rom_img_hash_impml = FromFbs(symbt)

        case "rom_gPanicStr":
            ret.rom_gPanicStr = FromFbs(symbt)

        case "rom_gPanicFunc":
            ret.rom_gPanicFunc = FromFbs(symbt)

        case "rom_is_in_higher_el":
            ret.rom_is_in_higher_el = FromFbs(symbt)

        case "rom_deep_idle_callout":
            ret.rom_deep_idle_callout = FromFbs(symbt)

        case "rom_current_task_0":
            ret.rom_current_task_0 = FromFbs(symbt)

        case "rom_controller_task":
            ret.rom_controller_task = FromFbs(symbt)

        case "rom_usb_configuration_string_desc_index":
            ret.rom_usb_configuration_string_desc_index = FromFbs(symbt)

        case "rom_new_chunk_data_0":
            ret.rom_new_chunk_data_0 = FromFbs(symbt)

        case "rom_other_new_chunk_data":
            ret.rom_other_new_chunk_data = FromFbs(symbt)

        case "rom_task_stacks":
            ret.rom_task_stacks = FromFbs(symbt)

        case "rom_task_stacks_used":
            ret.rom_task_stacks_used = FromFbs(symbt)

        case "rom_higher_el_count":
            ret.rom_higher_el_count = FromFbs(symbt)

        case "rom_irq_frame":
            ret.rom_irq_frame = FromFbs(symbt)

        case "rom_rAUSB_USB20PHY_CTL":
            ret.rom_rAUSB_USB20PHY_CTL = FromFbs(symbt)

        case "rom_rAUSB_USB20PHY_OTGSIG":
            ret.rom_rAUSB_USB20PHY_OTGSIG = FromFbs(symbt)

        case "rom_DWCUSB_GAHBCFG":
            ret.rom_DWCUSB_GAHBCFG = FromFbs(symbt)

        case "rom_DWCUSB_GUSBCFG":
            ret.rom_DWCUSB_GUSBCFG = FromFbs(symbt)

        case "rom_DWCUSB_GRSTCTL":
            ret.rom_DWCUSB_GRSTCTL = FromFbs(symbt)

        case "rom_DWCUSB_GINTSTS":
            ret.rom_DWCUSB_GINTSTS = FromFbs(symbt)

        case "rom_DWCUSB_GINTMSK":
            ret.rom_DWCUSB_GINTMSK = FromFbs(symbt)

        case "rom_DWCUSB_GSNPSID":
            ret.rom_DWCUSB_GSNPSID = FromFbs(symbt)

        case "rom_DWCUSB_GHWCFG1":
            ret.rom_DWCUSB_GHWCFG1 = FromFbs(symbt)

        case "rom_DWCUSB_GHWCFG2":
            ret.rom_DWCUSB_GHWCFG2 = FromFbs(symbt)

        case "rom_DWCUSB_GHWCFG3":
            ret.rom_DWCUSB_GHWCFG3 = FromFbs(symbt)

        case "rom_DWCUSB_DCFG":
            ret.rom_DWCUSB_DCFG = FromFbs(symbt)

        case "rom_DWCUSB_DCTL":
            ret.rom_DWCUSB_DCTL = FromFbs(symbt)

        case "rom_DWCUSB_DIEPMSK":
            ret.rom_DWCUSB_DIEPMSK = FromFbs(symbt)

        case "rom_DWCUSB_DOEPMSK":
            ret.rom_DWCUSB_DOEPMSK = FromFbs(symbt)

        case "rom_DWCUSB_DAINT":
            ret.rom_DWCUSB_DAINT = FromFbs(symbt)

        case "rom_DWCUSB_DAINTMSK":
            ret.rom_DWCUSB_DAINTMSK = FromFbs(symbt)

        case "rom_DWCUSB_DIEPINT":
            ret.rom_DWCUSB_DIEPINT = FromFbs(symbt)

        case "rom_DWCUSB_DOEPCTL_0":
            ret.rom_DWCUSB_DOEPCTL_0 = FromFbs(symbt)

        case "rom_DWCUSB_DOEPTSIZ_0":
            ret.rom_DWCUSB_DOEPTSIZ_0 = FromFbs(symbt)

        case "rom_DWCUSB_DOEPDMA":
            ret.rom_DWCUSB_DOEPDMA = FromFbs(symbt)

        case "rom_DWCUSB_DOEPINT_END":
            ret.rom_DWCUSB_DOEPINT_END = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH0":
            ret.rom_rPMGR_SCRATCH0 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH1":
            ret.rom_rPMGR_SCRATCH1 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH2":
            ret.rom_rPMGR_SCRATCH2 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH3":
            ret.rom_rPMGR_SCRATCH3 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH_BOOT_NONCE_0":
            ret.rom_rPMGR_SCRATCH_BOOT_NONCE_0 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH_BOOT_NONCE_1":
            ret.rom_rPMGR_SCRATCH_BOOT_NONCE_1 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST":
            ret.rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_LAST":
            ret.rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_LAST = FromFbs(symbt)

        case "rom_AIC_CPU_ID":
            ret.rom_AIC_CPU_ID = FromFbs(symbt)

        case "rom_rAIC_IACK":
            ret.rom_rAIC_IACK = FromFbs(symbt)

        case "rom_rAIC_EIR_DEST":
            ret.rom_rAIC_EIR_DEST = FromFbs(symbt)

        case "rom_rAIC_EIR_MASK_CLR":
            ret.rom_rAIC_EIR_MASK_CLR = FromFbs(symbt)

        case "rom_gpio_base_addr":
            ret.rom_gpio_base_addr = FromFbs(symbt)

        case "rom_rGPIO_PINSTRAPS_VALID":
            ret.rom_rGPIO_PINSTRAPS_VALID = FromFbs(symbt)

        case "rom_report_id":
            ret.rom_report_id = FromFbs(symbt)

        case "rom_rCFG_FUSE0":
            ret.rom_rCFG_FUSE0 = FromFbs(symbt)

        case "rom_rCFG_FUSE2":
            ret.rom_rCFG_FUSE2 = FromFbs(symbt)

        case "rom_rCFG_FUSE3":
            ret.rom_rCFG_FUSE3 = FromFbs(symbt)

        case "rom_rCFG_FUSE4":
            ret.rom_rCFG_FUSE4 = FromFbs(symbt)

        case "rom_rECIDLO":
            ret.rom_rECIDLO = FromFbs(symbt)

        case "rom_rECIDHI":
            ret.rom_rECIDHI = FromFbs(symbt)

        case "rom_rCFG_FUSE0_RAW":
            ret.rom_rCFG_FUSE0_RAW = FromFbs(symbt)

        case "rom_rCFG_FUSE1_RAW":
            ret.rom_rCFG_FUSE1_RAW = FromFbs(symbt)

        case "rom_rCFG_FUSE2_RAW":
            ret.rom_rCFG_FUSE2_RAW = FromFbs(symbt)

        case "rom_rCFG_FUSE3_RAW":
            ret.rom_rCFG_FUSE3_RAW = FromFbs(symbt)

        case "rom_rMINIPMGR_SEAL_DATA_A_FIRST":
            ret.rom_rMINIPMGR_SEAL_DATA_A_FIRST = FromFbs(symbt)

        case "rom_rMINIPMGR_SEAL_DATA_A_LAST":
            ret.rom_rMINIPMGR_SEAL_DATA_A_LAST = FromFbs(symbt)

        case "rom_rMINIPMGR_SEAL_CTL_A":
            ret.rom_rMINIPMGR_SEAL_CTL_A = FromFbs(symbt)

        }

    }

    return ret
}