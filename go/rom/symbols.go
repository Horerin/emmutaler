/*

    AUTOGENERATED DO NOT EDIT!

    Generated by /Users/leonardogalli/Code/ETH/thesis/emmutaler/builddir/go/emmu rom --rom ../../SecureROMs-master/SecureROM for t8030si, iBoot-4479.0.0.100.4 --out /Users/leonardogalli/Code/ETH/thesis/emmutaler/builddir/go symbols --out /Users/leonardogalli/Code/ETH/thesis/emmutaler/go/rom
    at 2021-03-12 22:55:52.167628 &#43;0100 CET m=&#43;0.002351653

*/


package rom

import "github.com/galli-leo/emmutaler/fbs"

func FromFbs(s *fbs.SymbolT) Symbol {
    return Symbol{Start: int64(s.FileStart), End: int64(s.FileEnd)}
}

type Symbol struct {
    Start int64
    End   int64
}

type Symbols struct {

    // __int64 __fastcall rom_start();
    rom_start Symbol

    // 
    rom_aSecureromForT8 Symbol

    // 
    rom_aRomrelease Symbol

    // 
    rom_aIboot447900100 Symbol

    // void __fastcall rom_arch_cpu_init(__int64 resume);
    rom_arch_cpu_init Symbol

    // 
    rom__arm_write_sctlr Symbol

    // 
    rom_aic_get_ticks Symbol

    // 
    rom_arm_invalidate_icache Symbol

    // 
    rom_nullsub_1 Symbol

    // 
    rom_nullsub_2 Symbol

    // 
    rom_arm_invalidate_dcache Symbol

    // 
    rom_nullsub_4 Symbol

    // 
    rom__arm_vtop Symbol

    // 
    rom_arch_enable_ints Symbol

    // 
    rom_nullsub_14 Symbol

    // 
    rom__arch_halt Symbol

    // 
    rom__arch_spin Symbol

    // 
    rom_set_paci_a_key Symbol

    // 
    rom_set_paci_b_key Symbol

    // 
    rom_set_pacd_a_key Symbol

    // 
    rom_set_pacd_b_key Symbol

    // 
    rom_set_pacc_a_key Symbol

    // 
    rom_enable_pacia_key Symbol

    // unsigned __int64 __fastcall rom_enable_pacib_key(__int64 enable);
    rom_enable_pacib_key Symbol

    // 
    rom_authenticate_task_pointer Symbol

    // 
    rom_aUuid Symbol

    // 
    rom_getcontext_call_X2 Symbol

    // 
    rom_def_100001428 Symbol

    // 
    rom_jpt_100001428 Symbol

    // __int64 __fastcall rom_arm_mmu_init(bool resume);
    rom_arm_mmu_init Symbol

    // void *__fastcall rom_arch_task_create(task *a1);
    rom_arch_task_create Symbol

    // int __cdecl rom_main(int argc, const char **argv, const char **envp);
    rom_main Symbol

    // 
    rom_gpio_read Symbol

    // __int64 __fastcall rom_gpio_get_pad_pin(unsigned int gpio, unsigned int *pad, int *pin);
    rom_gpio_get_pad_pin Symbol

    // 
    rom_flash_spi_select Symbol

    // void __fastcall rom_gpio_configure(uint32_t gpio, uint32_t config);
    rom_gpio_configure Symbol

    // 
    rom_def_100003578 Symbol

    // 
    rom_jpt_100003578 Symbol

    // 
    rom_gpio_configure_pupdn Symbol

    // __int64 __fastcall rom_rGPIO_PINSTRAPS_VALID_CFG_0();
    rom_rGPIO_PINSTRAPS_VALID_CFG_0 Symbol

    // int __fastcall rom_flash_spi_init(int which_bus);
    rom_flash_spi_init Symbol

    // int __fastcall rom_flash_spi_read_range_fun(spi_ndev *handle, uint8_t *ptr, uint32_t offset, uint32_t length);
    rom_flash_spi_read_range_fun Symbol

    // void __fastcall static rom_flash_spi_setup_bus(struct spi_ndev *sdev);
    rom_flash_spi_setup_bus Symbol

    // int __fastcall static rom_flash_spi_wait_busy(struct spi_ndev *sdev, u_int32_t timeout);
    rom_flash_spi_wait_busy Symbol

    // spi_regs_t *__fastcall rom_spiregs(int a1);
    rom_spiregs Symbol

    // void __fastcall __noreturn rom_empty_panic();
    rom_empty_panic Symbol

    // void __fastcall rom_spi_setup(int port, int baud, bool master, int clkpol, int clkpha);
    rom_spi_setup Symbol

    // int __fastcall rom_spi_read_etc(__int64 port, void *buf, size_t len);
    rom_spi_read_etc Symbol

    // 
    rom_spi_write_etc Symbol

    // __int64 __fastcall rom_spi_gpio_read(int port);
    rom_spi_gpio_read Symbol

    // int __fastcall rom__image4_get_partial(const void *buf, size_t buf_bytes, uint32_t *ret_type, uint32_t *ret_size);
    rom__image4_get_partial Symbol

    // int __fastcall static rom_der_expect(const DERItem *bounds, DERTag tag, DERDecodedInfo *info, bool partial);
    rom_der_expect Symbol

    // int __fastcall static rom_der_restrict(DERItem *bounds, const DERItem *item);
    rom_der_restrict Symbol

    // int __fastcall static rom_der_expect_ia5string(DERItem *bounds, const char *s);
    rom_der_expect_ia5string Symbol

    // int __fastcall rom_image4_validate_property_callback_interposer(asn1_tag tag, void *value, uint32_t propertyType, image4_wrapper_context *context);
    rom_image4_validate_property_callback_interposer Symbol

    // __int64 __fastcall rom_called_by_verify_impl(img4 *a1, image4_wrapper_context *a2);
    rom_called_by_verify_impl Symbol

    // int __fastcall rom_image4_process_superblock(void *sblock, struct blockdev *bdev, off_t offset, uint32_t imageOptions);
    rom_image4_process_superblock Symbol

    // struct image_info *__fastcall rom_image4_find(uint32_t image_type);
    rom_image4_find Symbol

    // int __fastcall rom_image4_load(struct image_info *image, const uint32_t *types, uint32_t count, uint32_t *actual, void **load_addr, size_t *load_len);
    rom_image4_load Symbol

    // int __fastcall static rom_image4_load_copyobject(struct image_info *image_info, void *objectBuffer, size_t objectSize);
    rom_image4_load_copyobject Symbol

    // 
    rom_image4_verify_number_relation Symbol

    // 
    rom_image4_verify_boolean_relation Symbol

    // 
    rom_platform_cache_operation Symbol

    // 
    rom_platform_sidp_rom_manifest_locked Symbol

    // 
    rom_j_chipid_get_minimum_epoch Symbol

    // __int64 __fastcall rom_panic_as_well();
    rom_panic_as_well Symbol

    // void __fastcall rom_platform_start();
    rom_platform_start Symbol

    // 
    rom_report_no_boot_image Symbol

    // 
    rom_some_kind_of_report Symbol

    // 
    rom_nullsub_5 Symbol

    // 
    rom_platform_init_setup_clocks Symbol

    // __int64 __fastcall rom_unknown_main_init_fn(__int64);
    rom_unknown_main_init_fn Symbol

    // 
    rom_platform_init_hwpins Symbol

    // 
    rom_platform_init_internal_mem Symbol

    // u_int32_t rom_platform_get_entropy(void);
    rom_platform_get_entropy Symbol

    // void __fastcall rom_platform_disable_keys(uint32_t gid, uint32_t uid);
    rom_platform_disable_keys Symbol

    // 
    rom_get_integrated_hash Symbol

    // 
    rom_something_l2_cramconfig Symbol

    // 
    rom_platform_reset Symbol

    // __int64 __fastcall rom_platform_get_board_id();
    rom_platform_get_board_id Symbol

    // bool __fastcall rom_platform_get_boot_device(int32_t index, enum boot_device *boot_device, uint32_t *boot_flag, uint32_t *boot_arg);
    rom_platform_get_boot_device Symbol

    // 
    rom_platform_enable_boot_interface Symbol

    // 
    rom_platform_get_nonce Symbol

    // 
    rom_platform_get_spi_frequency Symbol

    // 
    rom_platform_get_usb_cable_connected Symbol

    // bool __fastcall rom_platform_get_force_dfu();
    rom_platform_get_force_dfu Symbol

    // bool __fastcall rom_platform_get_request_dfu1();
    rom_platform_get_request_dfu1 Symbol

    // 
    rom_platform_get_request_dfu2 Symbol

    // 
    rom_platform_demote_production Symbol

    // 
    rom_platform_get_boot_manifest_hash Symbol

    // int32_t __fastcall rom_platform_set_boot_manifest_hash(const uint8_t *boot_manifest_hash);
    rom_platform_set_boot_manifest_hash Symbol

    // int __fastcall rom_memzero_if_io_reg(char *a1, __int64 a2);
    rom_memzero_if_io_reg Symbol

    // 
    rom_panic_now Symbol

    // 
    rom_platform_sidp_lock_rom_manifest Symbol

    // void __fastcall rom_platform_sidp_set_rom_manifest(const uint32_t *manifest_hash, size_t manifest_hash_size);
    rom_platform_sidp_set_rom_manifest Symbol

    // 
    rom_platform_get_mix_n_match_prevention_status Symbol

    // 
    rom_platform_set_mix_n_match_prevention_status Symbol

    // 
    rom__boot_handoff_trampoline Symbol

    // 
    rom_chipid_get_minimum_epoch Symbol

    // 
    rom_chipid_get_chip_id Symbol

    // 
    rom__chipid_get_chip_revision Symbol

    // 
    rom_def_100008A1C Symbol

    // 
    rom_jpt_100008A1C Symbol

    // 
    rom_nullsub_6 Symbol

    // 
    rom_def_100008B28 Symbol

    // 
    rom_jpt_100008B28 Symbol

    // 
    rom_prepare_and_jump Symbol

    // void rom_debug_init(void);
    rom_debug_init Symbol

    // 
    rom_nullsub_7 Symbol

    // 
    rom_nullsub_8 Symbol

    // void __noreturn rom__panic(const char *func, const char *str, ...);
    rom__panic Symbol

    // __int64 __fastcall rom_sys_init_stack_cookie();
    rom_sys_init_stack_cookie Symbol

    // 
    rom_stack_corrupted Symbol

    // void rom_sys_init(void);
    rom_sys_init Symbol

    // void __fastcall rom_task_init();
    rom_task_init Symbol

    // 
    rom_security_init Symbol

    // 
    rom_security_allow_modes Symbol

    // 
    rom_security_get_effective_production_status Symbol

    // 
    rom_security_consolidate_environment Symbol

    // 
    rom_security_sidp_seal_rom_manifest Symbol

    // 
    rom_set_thread_id_bootstrap Symbol

    // struct task *__fastcall static rom_task_create_etc(struct task *t, const char *name, task_routine routine, void *arg, void *stack, size_t stack_len);
    rom_task_create_etc Symbol

    // 
    rom_idle_task_routine_0 Symbol

    // task *__fastcall rom_current_task();
    rom_current_task Symbol

    // __int64 __fastcall rom_task_sleep(_QWORD);
    rom_task_sleep Symbol

    // 
    rom_system_time Symbol

    // 
    rom_time_has_elapsed Symbol

    // 
    rom__aes_crypto_cmd Symbol

    // 
    rom__boot_check_panic Symbol

    // int __fastcall rom_flash_nor_register(struct nor_blockdev *nor_bdev, const char *name, uint64_t len, uint32_t block_size);
    rom_flash_nor_register Symbol

    // int __fastcall static rom_nor_blockdev_read_block_0(struct blockdev *bdev, void *ptr, block_addr block, uint32_t count);
    rom_nor_blockdev_read_block_0 Symbol

    // int __fastcall rom_flash_nor_init(int which_device);
    rom_flash_nor_init Symbol

    // 
    rom__ip6_drain Symbol

    // 
    rom_nullsub_9 Symbol

    // 
    rom_nullsub_10 Symbol

    // 
    rom_nullsub_11 Symbol

    // 
    rom_nullsub_12 Symbol

    // int __fastcall rom_image_search_bdev(struct blockdev *bdev, off_t map_offset, uint32_t imageOptions);
    rom_image_search_bdev Symbol

    // int __fastcall rom_image_load(struct image_info *image, const uint32_t *types, uint32_t count, uint32_t *actual, void **load_addr, size_t *load_len, size_t *unknown);
    rom_image_load Symbol

    // struct image_info *__fastcall rom_image_find(uint32_t type);
    rom_image_find Symbol

    // struct image_info *__fastcall rom_image_create_from_memory(void *address, size_t length, uint32_t imageOptions);
    rom_image_create_from_memory Symbol

    // void __fastcall rom_image_free(struct image_info *image);
    rom_image_free Symbol

    // 
    rom_set_thread_id Symbol

    // 
    rom_arm_fp_init Symbol

    // 
    rom_timer_get_ticks_0 Symbol

    // 
    rom_platform_power_spin Symbol

    // __int64 __fastcall rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService(AppleExternalPowerManager *__hidden this, IOService *);
    rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService Symbol

    // __int64 __fastcall rom_spi_nand_init(int a1);
    rom_spi_nand_init Symbol

    // 
    rom_nullsub_15 Symbol

    // 
    rom_def_10000E514 Symbol

    // 
    rom_jpt_10000E514 Symbol

    // 
    rom_jpt_10000E6C4 Symbol

    // 
    rom_jpt_10000E83C Symbol

    // 
    rom__vsock_abort Symbol

    // int __fastcall rom_thunderboot_get_dfu_image(void *load_address, int load_length);
    rom_thunderboot_get_dfu_image Symbol

    // blockdev *__fastcall rom_lookup_blockdev(char *name);
    rom_lookup_blockdev Symbol

    // int __fastcall rom_register_blockdev(struct blockdev *dev);
    rom_register_blockdev Symbol

    // int __fastcall rom_construct_blockdev(struct blockdev *dev, const char *name, uint64_t len, uint32_t block_size);
    rom_construct_blockdev Symbol

    // int __fastcall rom_blockdev_read_hook_fun(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_hook_fun Symbol

    // int __fastcall rom_blockdev_read_block_hook_fun(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_block_hook_fun Symbol

    // int __fastcall rom_blockdev_write_hook_fun(struct blockdev *, const void *ptr, off_t offset, uint64_t len);
    rom_blockdev_write_hook_fun Symbol

    // int __fastcall rom_blockdev_write_block_hook_fun(struct blockdev *, const void *ptr, block_addr block, uint32_t count);
    rom_blockdev_write_block_hook_fun Symbol

    // int __fastcall rom_blockdev_erase_hook_fun(struct blockdev *, off_t offset, uint64_t len);
    rom_blockdev_erase_hook_fun Symbol

    // struct cbuf *__fastcall rom_cbuf_create(size_t len, struct task_event *event);
    rom_cbuf_create Symbol

    // 
    rom_def_10000FBA8 Symbol

    // 
    rom_jpt_10000FBA8 Symbol

    // heap_block *__fastcall rom_heap_alloc(__int64 a1);
    rom_heap_alloc Symbol

    // 
    rom_uk_heap_fn Symbol

    // 
    rom_panic_almost Symbol

    // size_t __fastcall rom_required_size(size_t size);
    rom_required_size Symbol

    // heap_block *__fastcall rom_maybe_verify_block_padding(heap_block *result, unsigned __int64 a2);
    rom_maybe_verify_block_padding Symbol

    // void *__fastcall rom_calloc(size_t count, size_t size, const char *caller_name);
    rom_calloc Symbol

    // void __fastcall rom_verify_block_checksum(const struct heap_block *b);
    rom_verify_block_checksum Symbol

    // void __fastcall rom_heap_free(heap_block *);
    rom_heap_free Symbol

    // void __fastcall rom_calculate_block_checksum(struct heap_block *b);
    rom_calculate_block_checksum Symbol

    // void __fastcall rom_posix_memalign(__int64 a1, __int64 a2, __int64 a3);
    rom_posix_memalign Symbol

    // 
    rom_heap_panic Symbol

    // __int64 __fastcall rom_free_list_add(free_block *);
    rom_free_list_add Symbol

    // void __fastcall rom_heap_add_chunk_0(void *chunk, size_t size, bool clear_memory, bool uk);
    rom_heap_add_chunk_0 Symbol

    // void __fastcall rom_heap_add_chunk(void *chunk, size_t size, bool clear_memory);
    rom_heap_add_chunk Symbol

    // 
    rom_another_heap_panic2 Symbol

    // 
    rom_heap_set_cookie Symbol

    // 
    rom_another_heap_panic Symbol

    // void __fastcall rom_free_list_remove(struct free_block *b);
    rom_free_list_remove Symbol

    // void __fastcall rom_split_tail(struct heap_block *b, size_t size, size_t user_size);
    rom_split_tail Symbol

    // void *__fastcall rom_malloc(__int64 a1);
    rom_malloc Symbol

    // __int64 __fastcall rom_free(void *a1);
    rom_free Symbol

    // 
    rom_log2_int Symbol

    // 
    rom_memset_s Symbol

    // 
    rom_weird_memset Symbol

    // 
    rom_not_empty_putchar Symbol

    // 
    rom__do_printf Symbol

    // 
    rom_def_100010D1C Symbol

    // 
    rom_def_100010D64 Symbol

    // 
    rom_jpt_100010D1C Symbol

    // 
    rom_jpt_100010D64 Symbol

    // 
    rom__platform_early_init Symbol

    // __int64 __fastcall rom_puts(const char *);
    rom_puts Symbol

    // 
    rom__putchar Symbol

    // 
    rom_strlcpy Symbol

    // void *__cdecl rom_memcpy(void *__dst, const void *__src, size_t __n);
    rom_memcpy Symbol

    // void __cdecl rom__bzero(void *, size_t);
    rom__bzero Symbol

    // void *__cdecl rom__memset(void *__b, int __c, size_t __len);
    rom__memset Symbol

    // 
    rom_memcmp Symbol

    // int __fastcall rom_strcmp(const char *cs, const char *ct);
    rom_strcmp Symbol

    // size_t __fastcall rom_strlen(const char *s);
    rom_strlen Symbol

    // struct mib_node *__fastcall static rom_mib_find_node(u_int32_t oid, bool nofollow);
    rom_mib_find_node Symbol

    // bool __fastcall rom__mib_find(u_int32_t oid, u_int32_t node_type, void *value);
    rom__mib_find Symbol

    // void __fastcall rom_mib_get_size(u_int32_t oid, u_int32_t node_type, void *value);
    rom_mib_get_size Symbol

    // 
    rom_def_1000120D0 Symbol

    // 
    rom_jpt_1000120D0 Symbol

    // uint32_t *__fastcall rom_get_entropy(uint32_t *result, unsigned __int64 entropy_len);
    rom_get_entropy Symbol

    // 
    rom_init_entropy_source Symbol

    // 
    rom_timer_get_ticks Symbol

    // int __fastcall static rom_random_get_bytes_internal(uint8_t *buffer, size_t length, void *entropy_buffer, size_t entropy_buffer_size);
    rom_random_get_bytes_internal Symbol

    // 
    rom_random_get_bytes Symbol

    // void __fastcall rom_enter_critical_section();
    rom_enter_critical_section Symbol

    // 
    rom_exit_critical_section Symbol

    // 
    rom__irq_exit_critical_section_0 Symbol

    // 
    rom__irq_exit_critical_section Symbol

    // void __fastcall rom_image4_load_decrypt_payload();
    rom_image4_load_decrypt_payload Symbol

    // 
    rom_platform_get_raw_production_mode Symbol

    // 
    rom_platform_get_security_domain Symbol

    // 
    rom_platform_get_secure_mode Symbol

    // 
    rom_platform_get_hardware_epoch Symbol

    // 
    rom_platform_get_chip_id Symbol

    // 
    rom_j__chipid_get_chip_revision Symbol

    // 
    rom_platform_get_ecid_id Symbol

    // 
    rom_j__ip6_drain Symbol

    // 
    rom_j__arch_halt Symbol

    // 
    rom_j_j__arch_halt Symbol

    // __int64 __fastcall rom_DERImg4DecodeFindInSequence_0(void *set_data, __int64 *set_end, __int64 search_key, DERItem *dest);
    rom_DERImg4DecodeFindInSequence_0 Symbol

    // __int64 __fastcall rom_DERImg4DecodeContentFindItemWithTag_0(DERItem *set, __int64 search_key, DERItem *dest);
    rom_DERImg4DecodeContentFindItemWithTag_0 Symbol

    // __int64 __fastcall rom_DERImg4DecodeTagCompare_1(_QWORD, _QWORD);
    rom_DERImg4DecodeTagCompare_1 Symbol

    // __int64 __fastcall rom_parse_main_img4_der(DERItem *a1, __int64 decoded_infos);
    rom_parse_main_img4_der Symbol

    // __int64 __fastcall rom_parse_payload_der(DERItem *a1, img4_payload *payload_items);
    rom_parse_payload_der Symbol

    // __int64 __fastcall rom_parse_manifest_der(_QWORD *a1, img4_manifest *manifest_items);
    rom_parse_manifest_der Symbol

    // DERItem *__fastcall rom_parse_recovery_der(DERItem *result, img4_recovery *recovery);
    rom_parse_recovery_der Symbol

    // __int64 __fastcall rom_DERImg4DecodeProperty_0(DERItem *a1, asn1_tag a2, DERDecodedInfoFind *find_result);
    rom_DERImg4DecodeProperty_0 Symbol

    // __int64 __fastcall rom_DERFindInSequence(DERItem *set, asn1_tag search_key, asn1_tag return_type_maybe, DERDecodedInfoFind *result);
    rom_DERFindInSequence Symbol

    // __int64 __fastcall rom_DERImg4DecodeParseManifestProperties_0(img4 *a1, DERItem *manb, DERItem *manp);
    rom_DERImg4DecodeParseManifestProperties_0 Symbol

    // __int64 __fastcall rom__Img4DecodePayloadExists_0(img4 *a1, bool *a2);
    rom__Img4DecodePayloadExists_0 Symbol

    // __int64 __fastcall rom_Img4DecodeGetPayload(img4 *img4, DERItem *res);
    rom_Img4DecodeGetPayload Symbol

    // __int64 __fastcall rom_Img4DecodeGetPayloadType(img4 *a1, _DWORD *a2);
    rom_Img4DecodeGetPayloadType Symbol

    // __int64 __fastcall rom_Img4DecodeGetPayloadKeybag(img4 *a1, __int64 a2);
    rom_Img4DecodeGetPayloadKeybag Symbol

    // __int64 __fastcall rom_Img4DecodeCopyPayloadDigest(img4 *a1, __int64 x1_0, unsigned __int64 a3, Img4DecodeImplementation *a4);
    rom_Img4DecodeCopyPayloadDigest Symbol

    // __int64 __fastcall rom__Img4DecodeManifestExists_0(img4 *, bool *validManifest);
    rom__Img4DecodeManifestExists_0 Symbol

    // __int64 __fastcall rom_Img4DecodeCopyManifestDigest(img4 *a1, __int64 dest, unsigned __int64 a3, Img4DecodeImplementation *a4);
    rom_Img4DecodeCopyManifestDigest Symbol

    // 
    rom__Img4DecodeSectionExists_0 Symbol

    // 
    rom__Img4DecodeGetRestoreInfoData Symbol

    // 
    rom_Img4DecodeGetPropertyBoolean_0 Symbol

    // __int64 __fastcall rom_hasher_18(img4 *img4);
    rom_hasher_18 Symbol

    // __int64 __fastcall rom_Img4DecodeEvaluateDictionaryProperties_0(const DERItem *a1, __int64 propType, int (__fastcall *image4_validate_property_callback_interposer)(uint32_t, void *, uint32_t, void *), void *context);
    rom_Img4DecodeEvaluateDictionaryProperties_0 Symbol

    // __int64 __fastcall rom_Img4DecodeInit(DERByte *bjectBuffer, DERSize correctedObjectSize, img4 *img4);
    rom_Img4DecodeInit Symbol

    // __int64 __fastcall rom_Img4DecodePerformTrustEvaluatation(uint32_t actualType, img4 *img4, void *validate_props, Img4DecodeImplementation *hasher, image4_wrapper_context *wrapper_ctxt);
    rom_Img4DecodePerformTrustEvaluatation Symbol

    // __int64 __fastcall rom_verify_signature_for_reals(DERItem *chain, const unsigned __int8 *hash_oid, DERItem *manifest_hash, DERItem *sig_blob, __int64 key_size, __int64 hash_size, Img4DecodeImplementation *hasher);
    rom_verify_signature_for_reals Symbol

    // __int64 __fastcall rom__verify_signature_rsa_0(__int64 a1, __int64 a2, __int64 signature_data, __int64 signature_len, __int64 manifest_item_digest, __int64 hasher_size, Img4DecodeImplementation *hasher);
    rom__verify_signature_rsa_0 Symbol

    // __int64 __fastcall rom_process_chain(DERItem *chain, __int64 max_len, _QWORD *a3, __int64 a4, __int64 a5, __int64 a6);
    rom_process_chain Symbol

    // __int64 __fastcall rom_verify_parse_chain(__int64 a1, __int64 a2, __int64 a3, __int64 a4, DERByte **a5, DERSize *a6, Img4DecodeImplementation *hasher, __int64 (__fastcall *crack_chain_root)(DERItem *, DERItem[], unsigned int));
    rom_verify_parse_chain Symbol

    // __int64 __fastcall rom_hasher_8(__int64 cert_chain_data, __int64 cert_chain_len, __int64 local1, __int64 local2);
    rom_hasher_8 Symbol

    // __int64 __fastcall rom_crack_chain_root(DERItem *certBlob, DERItem *__attribute__((__org_arrdim(0,0))) chain, unsigned int chain_len);
    rom_crack_chain_root Symbol

    // __int64 __fastcall rom_Img4DecodeComputeDigest(void *a1, __int64 len, void *probs_dest, __int64 hash_size, Img4DecodeImplementation *a5);
    rom_Img4DecodeComputeDigest Symbol

    // __int64 __fastcall rom_crack_chain(DERItem *certBlob, DERItem *__attribute__((__org_arrdim(0,0))) chain, unsigned int chain_len);
    rom_crack_chain Symbol

    // DERReturn __fastcall rom_DERDecodeItem(const DERItem *der, DERDecodedInfo *decoded);
    rom_DERDecodeItem Symbol

    // DERReturn __fastcall rom_DERDecodeItemPartialBuffer(const DERItem *der, DERDecodedInfo *decoded, bool allowPartialBuffer);
    rom_DERDecodeItemPartialBuffer Symbol

    // DERReturn __fastcall rom_DERDecodeItemPartialBuffer_0(const DERItem *der, DERDecodedInfo *decoded, bool allowPartialBuffer);
    rom_DERDecodeItemPartialBuffer_0 Symbol

    // 
    rom__DERParseBitString_0_0 Symbol

    // 
    rom__DERParseBoolean_0 Symbol

    // DERReturn __fastcall rom_DERParseInteger(const DERItem *contents, uint32_t *result);
    rom_DERParseInteger Symbol

    // DERReturn __fastcall rom__DERParseInteger64(const DERItem *contents, uint64_t *result);
    rom__DERParseInteger64 Symbol

    // __int64 __fastcall rom_DERDecodeSeqInitAgain(const DERItem *a1, asn1_tag *a2, DERSequence *a3);
    rom_DERDecodeSeqInitAgain Symbol

    // DERReturn __fastcall rom_DERDecodeSeqContentInit(const DERItem *content, DERSequence *derSeq);
    rom_DERDecodeSeqContentInit Symbol

    // DERReturn __fastcall rom_DERDecodeSeqNext(DERSequence *derSeq, DERDecodedInfo *decoded);
    rom_DERDecodeSeqNext Symbol

    // DERReturn __fastcall rom_DERParseSequence(const DERItem *der, DERShort numItems, const DERItemSpec *itemSpecs, void *dest, DERSize sizeToZero);
    rom_DERParseSequence Symbol

    // DERReturn __fastcall rom_DERParseSequenceContent(const DERItem *content, DERShort numItems, const DERItemSpec *itemSpecs, void *dest, DERSize sizeToZero);
    rom_DERParseSequenceContent Symbol

    // bool __fastcall rom_DEROidCompare(const DERItem *oid1, const DERItem *oid2);
    rom_DEROidCompare Symbol

    // 
    rom__lzvn_decode_buffer Symbol

    // 
    rom__lz4_decode_asm Symbol

    // 
    rom__lzfse_decode_lmd Symbol

    // 
    rom__lzfse_decode_literals Symbol

    // 
    rom__lz4raw_decode_buffer Symbol

    // 
    rom__LZFSEIBootBufferPush Symbol

    // 
    rom_aes_key_expansion Symbol

    // 
    rom__ccaes_arm_decrypt_key128 Symbol

    // 
    rom__ccaes_arm_decrypt_key192 Symbol

    // 
    rom__ccaes_arm_decrypt_key256 Symbol

    // 
    rom__ccaes_arm_encrypt_key Symbol

    // 
    rom__ccaes_arm_encrypt_key_0 Symbol

    // int __cdecl rom__ccn_cmp_0(cc_size n, const cc_unit *s, const cc_unit *t);
    rom__ccn_cmp_0 Symbol

    // 
    rom_nullsub_13 Symbol

    // void __cdecl rom__ccn_mul(cc_size n, cc_unit *r_2n, const cc_unit *s, const cc_unit *t);
    rom__ccn_mul Symbol

    // void __fastcall rom_ccdigest(const struct ccdigest_info *di, size_t len, const void *data, void *digest);
    rom_ccdigest Symbol

    // void __fastcall rom__ccdigest_init(const struct ccdigest_info *di, ccdigest_ctx_t ctx);
    rom__ccdigest_init Symbol

    // void __fastcall rom__ccdigest_update(const struct ccdigest_info *di, #94 ctx, size_t len, const void *data);
    rom__ccdigest_update Symbol

    // 
    rom__cchmac_final Symbol

    // __int64 __fastcall rom__cchmac_init(struct ccdigest_info *di, #94 ctx);
    rom__cchmac_init Symbol

    // void __fastcall rom_j__ccdigest_update(const struct ccdigest_info *di, #94 ctx, size_t len, const void *data);
    rom_j__ccdigest_update Symbol

    // 
    rom__cc_mux2p Symbol

    // cc_unit __cdecl rom__ccn_add_0(cc_size n, cc_unit *r, const cc_unit *s, const cc_unit *t);
    rom__ccn_add_0 Symbol

    // cc_unit __cdecl rom__ccn_sub_0(cc_size n, cc_unit *r, const cc_unit *s, const cc_unit *t);
    rom__ccn_sub_0 Symbol

    // size_t __cdecl rom__ccn_write_uint_size(cc_size n, const cc_unit *s);
    rom__ccn_write_uint_size Symbol

    // 
    rom_cc_clear Symbol

    // 
    rom_get_sha1_digest Symbol

    // 
    rom__ccn_shift_right_1 Symbol

    // int __fastcall rom_ccdrbg_init(const struct ccdrbg_info *info, struct ccdrbg_state *drbg, size_t entropyLength, const void *entropy, size_t nonceLength, const void *nonce, size_t psLength, const void *ps);
    rom_ccdrbg_init Symbol

    // int __fastcall rom_ccdrbg_reseed(struct ccdrbg_state *prng, size_t entropylen, const void *entropy, size_t inlen, const void *in);
    rom_ccdrbg_reseed Symbol

    // int __fastcall rom_ccdrbg_generate(struct ccdrbg_state *prng, size_t outlen, void *out, size_t inlen, const void *in);
    rom_ccdrbg_generate Symbol

    // void __fastcall rom_ccdrbg_done(struct ccdrbg_state *prng);
    rom_ccdrbg_done Symbol

    // ccdrbg_info *__fastcall rom__ccdrbg_factory_nisthmac(ccdrbg_info *result, ccdrbg_nisthmac_custom *a2);
    rom__ccdrbg_factory_nisthmac Symbol

    // void rom_ccdrbg_update(struct ccdrbg_state *ctx, unsigned int ndata, ...);
    rom_ccdrbg_update Symbol

    // 
    rom_get_hash_impl Symbol

    // void *__cdecl rom__cc_muxp(int s, const void *a, const void *b);
    rom__cc_muxp Symbol

    // cc_size __cdecl rom__ccn_n_0(cc_size n, const cc_unit *s);
    rom__ccn_n_0 Symbol

    // 
    rom_aNor0 Symbol

    // 
    rom_aSpiNand0 Symbol

    // 
    rom_aImg4 Symbol

    // 
    rom_aIm4p Symbol

    // 
    rom_aAppleMobileDev Symbol

    // 
    rom_aCpid04xCprv02x Symbol

    // 
    rom_aSrtgS Symbol

    // 
    rom_aNonc Symbol

    // 
    rom_a02x Symbol

    // 
    rom_aSnon Symbol

    // 
    rom_aDoublePanicIn Symbol

    // 
    rom_aPanic Symbol

    // 
    rom_aConstructingId Symbol

    // 
    rom_aIdleTask Symbol

    // 
    rom_aUsb Symbol

    // 
    rom_aNull Symbol

    // 
    rom_aPtr Symbol

    // 
    rom_a0x Symbol

    // 
    rom_aAppleInc Symbol

    // 
    rom_spi_regs Symbol

    // boot_device rom_boot_device_map[8];
    rom_boot_device_map Symbol

    // uint32_t rom_boot_flag_map[8];
    rom_boot_flag_map Symbol

    // 
    rom_a78 Symbol

    // DERItemSpec rom_img4_item_spec[4];
    rom_img4_item_spec Symbol

    // DERItemSpec rom_payload_item_spec[6];
    rom_payload_item_spec Symbol

    // 
    rom_manifest_item_spec Symbol

    // 
    rom_recover_item_spec Symbol

    // 
    rom_payload_uk_item_spec Symbol

    // 
    rom_root_ca Symbol

    // 
    rom_oidRsa Symbol

    // 
    rom_oidSha384Rsa Symbol

    // void *rom_oidEcPubKey;
    rom_oidEcPubKey Symbol

    // 
    rom_oidSha384 Symbol

    // 
    rom_oidAppleImg4ManifestCertSpec Symbol

    // hash_info rom_hasher_meta;
    rom_hasher_meta Symbol

    // 
    rom_cc_digest_impl Symbol

    // 
    rom_oidRsaItem Symbol

    // 
    rom_oidEcPubKeyItem Symbol

    // 
    rom_oidSha384Item Symbol

    // 
    rom_oidAppleImg4ManifestCertSpecItem Symbol

    // const struct ccdigest_info *rom_sha384;
    rom_sha384 Symbol

    // 
    rom_sha1 Symbol

    // list_node rom_images;
    rom_images Symbol

    // 
    rom_stack_cookie Symbol

    // struct list_node rom_task_list;
    rom_task_list Symbol

    // 
    rom_bootstrap_task Symbol

    // uint64_t rom_heap_cookie[2];
    rom_heap_cookie Symbol

    // ccdrbg_state *rom_ccdrbg_state_ptr;
    rom_ccdrbg_state_ptr Symbol

    // int (__fastcall *rom_flash_spi_read_range)(uintptr_t handle, uint8_t *ptr, uint32_t offset, uint32_t length);
    rom_flash_spi_read_range Symbol

    // 
    rom_idle_task_routine Symbol

    // int (__fastcall *rom_nor_blockdev_read_block)(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_nor_blockdev_read_block Symbol

    // int (__fastcall *rom_blockdev_erase_hook)(struct blockdev *, off_t offset, uint64_t len);
    rom_blockdev_erase_hook Symbol

    // int (__fastcall *rom_blockdev_read_block_hook)(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_block_hook Symbol

    // int (__fastcall *rom_blockdev_read_hook)(struct blockdev *, void *ptr, block_addr block, uint32_t count);
    rom_blockdev_read_hook Symbol

    // int (__fastcall *rom_blockdev_write_block_hook)(struct blockdev *, const void *ptr, block_addr block, uint32_t count);
    rom_blockdev_write_block_hook Symbol

    // int (__fastcall *rom_blockdev_write_hook)(struct blockdev *, const void *ptr, off_t offset, uint64_t len);
    rom_blockdev_write_hook Symbol

    // unsigned int (__fastcall *rom_crack_chain_root_ptr)(DERItem *certBlob, DERItem *chain, __int64 chain_len);
    rom_crack_chain_root_ptr Symbol

    // void (__fastcall *rom_ccdrbg_done_ptr)(struct ccdrbg_state *prng);
    rom_ccdrbg_done_ptr Symbol

    // int (__fastcall *rom_ccdrbg_generate_ptr)(struct ccdrbg_state *prng, size_t outlen, void *out, size_t inlen, const void *in);
    rom_ccdrbg_generate_ptr Symbol

    // int (__fastcall *rom_ccdrbg_init_ptr)(const struct ccdrbg_info *info, struct ccdrbg_state *drbg, size_t entropyLength, const void *entropy, size_t nonceLength, const void *nonce, size_t psLength, const void *ps);
    rom_ccdrbg_init_ptr Symbol

    // int (__fastcall *rom_ccdrbg_reseed_ptr)(struct ccdrbg_state *prng, size_t entropylen, const void *entropy, size_t inlen, const void *in);
    rom_ccdrbg_reseed_ptr Symbol

    // image4_callbacks rom_spi_status;
    rom_spi_status Symbol

    // image4_callbacks rom_img_callbacks;
    rom_img_callbacks Symbol

    // 
    rom_debug_cbuf Symbol

    // task_event rom_debug_event;
    rom_debug_event Symbol

    // _DWORD rom_panicDepth;
    rom_panicDepth Symbol

    // char rom_panicBuf[8];
    rom_panicBuf Symbol

    // 
    rom_security_environment_consolidated Symbol

    // 
    rom_security_mode Symbol

    // 
    rom_security_boot_manifest_hash Symbol

    // 
    rom_idle_task Symbol

    // 
    rom_task_count Symbol

    // 
    rom_max_task_id Symbol

    // blockdev rom_bdev_list;
    rom_bdev_list Symbol

    // char rom_initialized_nisthmac;
    rom_initialized_nisthmac Symbol

    // 
    rom_random_count Symbol

    // 
    rom_random_len Symbol

    // 
    rom_entropy_len Symbol

    // char rom_random_output[10];
    rom_random_output Symbol

    // ccdrbg_nisthmac_custom rom_random_digest_maybe;
    rom_random_digest_maybe Symbol

    // ccdrbg_info rom_nisthmac_info;
    rom_nisthmac_info Symbol

    // const struct ccdigest_info *rom_img_hash_impml;
    rom_img_hash_impml Symbol

    // 
    rom_gPanicStr Symbol

    // 
    rom_gPanicFunc Symbol

    // new_chunk_data rom_new_chunk_data_0;
    rom_new_chunk_data_0 Symbol

    // new_chunk_data rom_other_new_chunk_data;
    rom_other_new_chunk_data Symbol

    // unsigned int rom_rPMGR_SCRATCH0;
    rom_rPMGR_SCRATCH0 Symbol

    // 
    rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST Symbol

    // 
    rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_LAST Symbol

    // __int64 rom_gpio_base_addr;
    rom_gpio_base_addr Symbol

    // 
    rom_report_id Symbol

    // 
    rom_rMINIPMGR_SEAL_DATA_A_FIRST Symbol

    // 
    rom_rMINIPMGR_SEAL_DATA_A_LAST Symbol

    // 
    rom_rMINIPMGR_SEAL_CTL_A Symbol
}

// Gets the symbols from the rom meta information.
func (r *ROM) GetSymbols() *Symbols {
    ret := &Symbols{}
    for _, symbt := range r.Symbols() {
        switch symbt.Name {

        case "rom_start":
            ret.rom_start = FromFbs(symbt)

        case "rom_aSecureromForT8":
            ret.rom_aSecureromForT8 = FromFbs(symbt)

        case "rom_aRomrelease":
            ret.rom_aRomrelease = FromFbs(symbt)

        case "rom_aIboot447900100":
            ret.rom_aIboot447900100 = FromFbs(symbt)

        case "rom_arch_cpu_init":
            ret.rom_arch_cpu_init = FromFbs(symbt)

        case "rom__arm_write_sctlr":
            ret.rom__arm_write_sctlr = FromFbs(symbt)

        case "rom_aic_get_ticks":
            ret.rom_aic_get_ticks = FromFbs(symbt)

        case "rom_arm_invalidate_icache":
            ret.rom_arm_invalidate_icache = FromFbs(symbt)

        case "rom_nullsub_1":
            ret.rom_nullsub_1 = FromFbs(symbt)

        case "rom_nullsub_2":
            ret.rom_nullsub_2 = FromFbs(symbt)

        case "rom_arm_invalidate_dcache":
            ret.rom_arm_invalidate_dcache = FromFbs(symbt)

        case "rom_nullsub_4":
            ret.rom_nullsub_4 = FromFbs(symbt)

        case "rom__arm_vtop":
            ret.rom__arm_vtop = FromFbs(symbt)

        case "rom_arch_enable_ints":
            ret.rom_arch_enable_ints = FromFbs(symbt)

        case "rom_nullsub_14":
            ret.rom_nullsub_14 = FromFbs(symbt)

        case "rom__arch_halt":
            ret.rom__arch_halt = FromFbs(symbt)

        case "rom__arch_spin":
            ret.rom__arch_spin = FromFbs(symbt)

        case "rom_set_paci_a_key":
            ret.rom_set_paci_a_key = FromFbs(symbt)

        case "rom_set_paci_b_key":
            ret.rom_set_paci_b_key = FromFbs(symbt)

        case "rom_set_pacd_a_key":
            ret.rom_set_pacd_a_key = FromFbs(symbt)

        case "rom_set_pacd_b_key":
            ret.rom_set_pacd_b_key = FromFbs(symbt)

        case "rom_set_pacc_a_key":
            ret.rom_set_pacc_a_key = FromFbs(symbt)

        case "rom_enable_pacia_key":
            ret.rom_enable_pacia_key = FromFbs(symbt)

        case "rom_enable_pacib_key":
            ret.rom_enable_pacib_key = FromFbs(symbt)

        case "rom_authenticate_task_pointer":
            ret.rom_authenticate_task_pointer = FromFbs(symbt)

        case "rom_aUuid":
            ret.rom_aUuid = FromFbs(symbt)

        case "rom_getcontext_call_X2":
            ret.rom_getcontext_call_X2 = FromFbs(symbt)

        case "rom_def_100001428":
            ret.rom_def_100001428 = FromFbs(symbt)

        case "rom_jpt_100001428":
            ret.rom_jpt_100001428 = FromFbs(symbt)

        case "rom_arm_mmu_init":
            ret.rom_arm_mmu_init = FromFbs(symbt)

        case "rom_arch_task_create":
            ret.rom_arch_task_create = FromFbs(symbt)

        case "rom_main":
            ret.rom_main = FromFbs(symbt)

        case "rom_gpio_read":
            ret.rom_gpio_read = FromFbs(symbt)

        case "rom_gpio_get_pad_pin":
            ret.rom_gpio_get_pad_pin = FromFbs(symbt)

        case "rom_flash_spi_select":
            ret.rom_flash_spi_select = FromFbs(symbt)

        case "rom_gpio_configure":
            ret.rom_gpio_configure = FromFbs(symbt)

        case "rom_def_100003578":
            ret.rom_def_100003578 = FromFbs(symbt)

        case "rom_jpt_100003578":
            ret.rom_jpt_100003578 = FromFbs(symbt)

        case "rom_gpio_configure_pupdn":
            ret.rom_gpio_configure_pupdn = FromFbs(symbt)

        case "rom_rGPIO_PINSTRAPS_VALID_CFG_0":
            ret.rom_rGPIO_PINSTRAPS_VALID_CFG_0 = FromFbs(symbt)

        case "rom_flash_spi_init":
            ret.rom_flash_spi_init = FromFbs(symbt)

        case "rom_flash_spi_read_range_fun":
            ret.rom_flash_spi_read_range_fun = FromFbs(symbt)

        case "rom_flash_spi_setup_bus":
            ret.rom_flash_spi_setup_bus = FromFbs(symbt)

        case "rom_flash_spi_wait_busy":
            ret.rom_flash_spi_wait_busy = FromFbs(symbt)

        case "rom_spiregs":
            ret.rom_spiregs = FromFbs(symbt)

        case "rom_empty_panic":
            ret.rom_empty_panic = FromFbs(symbt)

        case "rom_spi_setup":
            ret.rom_spi_setup = FromFbs(symbt)

        case "rom_spi_read_etc":
            ret.rom_spi_read_etc = FromFbs(symbt)

        case "rom_spi_write_etc":
            ret.rom_spi_write_etc = FromFbs(symbt)

        case "rom_spi_gpio_read":
            ret.rom_spi_gpio_read = FromFbs(symbt)

        case "rom__image4_get_partial":
            ret.rom__image4_get_partial = FromFbs(symbt)

        case "rom_der_expect":
            ret.rom_der_expect = FromFbs(symbt)

        case "rom_der_restrict":
            ret.rom_der_restrict = FromFbs(symbt)

        case "rom_der_expect_ia5string":
            ret.rom_der_expect_ia5string = FromFbs(symbt)

        case "rom_image4_validate_property_callback_interposer":
            ret.rom_image4_validate_property_callback_interposer = FromFbs(symbt)

        case "rom_called_by_verify_impl":
            ret.rom_called_by_verify_impl = FromFbs(symbt)

        case "rom_image4_process_superblock":
            ret.rom_image4_process_superblock = FromFbs(symbt)

        case "rom_image4_find":
            ret.rom_image4_find = FromFbs(symbt)

        case "rom_image4_load":
            ret.rom_image4_load = FromFbs(symbt)

        case "rom_image4_load_copyobject":
            ret.rom_image4_load_copyobject = FromFbs(symbt)

        case "rom_image4_verify_number_relation":
            ret.rom_image4_verify_number_relation = FromFbs(symbt)

        case "rom_image4_verify_boolean_relation":
            ret.rom_image4_verify_boolean_relation = FromFbs(symbt)

        case "rom_platform_cache_operation":
            ret.rom_platform_cache_operation = FromFbs(symbt)

        case "rom_platform_sidp_rom_manifest_locked":
            ret.rom_platform_sidp_rom_manifest_locked = FromFbs(symbt)

        case "rom_j_chipid_get_minimum_epoch":
            ret.rom_j_chipid_get_minimum_epoch = FromFbs(symbt)

        case "rom_panic_as_well":
            ret.rom_panic_as_well = FromFbs(symbt)

        case "rom_platform_start":
            ret.rom_platform_start = FromFbs(symbt)

        case "rom_report_no_boot_image":
            ret.rom_report_no_boot_image = FromFbs(symbt)

        case "rom_some_kind_of_report":
            ret.rom_some_kind_of_report = FromFbs(symbt)

        case "rom_nullsub_5":
            ret.rom_nullsub_5 = FromFbs(symbt)

        case "rom_platform_init_setup_clocks":
            ret.rom_platform_init_setup_clocks = FromFbs(symbt)

        case "rom_unknown_main_init_fn":
            ret.rom_unknown_main_init_fn = FromFbs(symbt)

        case "rom_platform_init_hwpins":
            ret.rom_platform_init_hwpins = FromFbs(symbt)

        case "rom_platform_init_internal_mem":
            ret.rom_platform_init_internal_mem = FromFbs(symbt)

        case "rom_platform_get_entropy":
            ret.rom_platform_get_entropy = FromFbs(symbt)

        case "rom_platform_disable_keys":
            ret.rom_platform_disable_keys = FromFbs(symbt)

        case "rom_get_integrated_hash":
            ret.rom_get_integrated_hash = FromFbs(symbt)

        case "rom_something_l2_cramconfig":
            ret.rom_something_l2_cramconfig = FromFbs(symbt)

        case "rom_platform_reset":
            ret.rom_platform_reset = FromFbs(symbt)

        case "rom_platform_get_board_id":
            ret.rom_platform_get_board_id = FromFbs(symbt)

        case "rom_platform_get_boot_device":
            ret.rom_platform_get_boot_device = FromFbs(symbt)

        case "rom_platform_enable_boot_interface":
            ret.rom_platform_enable_boot_interface = FromFbs(symbt)

        case "rom_platform_get_nonce":
            ret.rom_platform_get_nonce = FromFbs(symbt)

        case "rom_platform_get_spi_frequency":
            ret.rom_platform_get_spi_frequency = FromFbs(symbt)

        case "rom_platform_get_usb_cable_connected":
            ret.rom_platform_get_usb_cable_connected = FromFbs(symbt)

        case "rom_platform_get_force_dfu":
            ret.rom_platform_get_force_dfu = FromFbs(symbt)

        case "rom_platform_get_request_dfu1":
            ret.rom_platform_get_request_dfu1 = FromFbs(symbt)

        case "rom_platform_get_request_dfu2":
            ret.rom_platform_get_request_dfu2 = FromFbs(symbt)

        case "rom_platform_demote_production":
            ret.rom_platform_demote_production = FromFbs(symbt)

        case "rom_platform_get_boot_manifest_hash":
            ret.rom_platform_get_boot_manifest_hash = FromFbs(symbt)

        case "rom_platform_set_boot_manifest_hash":
            ret.rom_platform_set_boot_manifest_hash = FromFbs(symbt)

        case "rom_memzero_if_io_reg":
            ret.rom_memzero_if_io_reg = FromFbs(symbt)

        case "rom_panic_now":
            ret.rom_panic_now = FromFbs(symbt)

        case "rom_platform_sidp_lock_rom_manifest":
            ret.rom_platform_sidp_lock_rom_manifest = FromFbs(symbt)

        case "rom_platform_sidp_set_rom_manifest":
            ret.rom_platform_sidp_set_rom_manifest = FromFbs(symbt)

        case "rom_platform_get_mix_n_match_prevention_status":
            ret.rom_platform_get_mix_n_match_prevention_status = FromFbs(symbt)

        case "rom_platform_set_mix_n_match_prevention_status":
            ret.rom_platform_set_mix_n_match_prevention_status = FromFbs(symbt)

        case "rom__boot_handoff_trampoline":
            ret.rom__boot_handoff_trampoline = FromFbs(symbt)

        case "rom_chipid_get_minimum_epoch":
            ret.rom_chipid_get_minimum_epoch = FromFbs(symbt)

        case "rom_chipid_get_chip_id":
            ret.rom_chipid_get_chip_id = FromFbs(symbt)

        case "rom__chipid_get_chip_revision":
            ret.rom__chipid_get_chip_revision = FromFbs(symbt)

        case "rom_def_100008A1C":
            ret.rom_def_100008A1C = FromFbs(symbt)

        case "rom_jpt_100008A1C":
            ret.rom_jpt_100008A1C = FromFbs(symbt)

        case "rom_nullsub_6":
            ret.rom_nullsub_6 = FromFbs(symbt)

        case "rom_def_100008B28":
            ret.rom_def_100008B28 = FromFbs(symbt)

        case "rom_jpt_100008B28":
            ret.rom_jpt_100008B28 = FromFbs(symbt)

        case "rom_prepare_and_jump":
            ret.rom_prepare_and_jump = FromFbs(symbt)

        case "rom_debug_init":
            ret.rom_debug_init = FromFbs(symbt)

        case "rom_nullsub_7":
            ret.rom_nullsub_7 = FromFbs(symbt)

        case "rom_nullsub_8":
            ret.rom_nullsub_8 = FromFbs(symbt)

        case "rom__panic":
            ret.rom__panic = FromFbs(symbt)

        case "rom_sys_init_stack_cookie":
            ret.rom_sys_init_stack_cookie = FromFbs(symbt)

        case "rom_stack_corrupted":
            ret.rom_stack_corrupted = FromFbs(symbt)

        case "rom_sys_init":
            ret.rom_sys_init = FromFbs(symbt)

        case "rom_task_init":
            ret.rom_task_init = FromFbs(symbt)

        case "rom_security_init":
            ret.rom_security_init = FromFbs(symbt)

        case "rom_security_allow_modes":
            ret.rom_security_allow_modes = FromFbs(symbt)

        case "rom_security_get_effective_production_status":
            ret.rom_security_get_effective_production_status = FromFbs(symbt)

        case "rom_security_consolidate_environment":
            ret.rom_security_consolidate_environment = FromFbs(symbt)

        case "rom_security_sidp_seal_rom_manifest":
            ret.rom_security_sidp_seal_rom_manifest = FromFbs(symbt)

        case "rom_set_thread_id_bootstrap":
            ret.rom_set_thread_id_bootstrap = FromFbs(symbt)

        case "rom_task_create_etc":
            ret.rom_task_create_etc = FromFbs(symbt)

        case "rom_idle_task_routine_0":
            ret.rom_idle_task_routine_0 = FromFbs(symbt)

        case "rom_current_task":
            ret.rom_current_task = FromFbs(symbt)

        case "rom_task_sleep":
            ret.rom_task_sleep = FromFbs(symbt)

        case "rom_system_time":
            ret.rom_system_time = FromFbs(symbt)

        case "rom_time_has_elapsed":
            ret.rom_time_has_elapsed = FromFbs(symbt)

        case "rom__aes_crypto_cmd":
            ret.rom__aes_crypto_cmd = FromFbs(symbt)

        case "rom__boot_check_panic":
            ret.rom__boot_check_panic = FromFbs(symbt)

        case "rom_flash_nor_register":
            ret.rom_flash_nor_register = FromFbs(symbt)

        case "rom_nor_blockdev_read_block_0":
            ret.rom_nor_blockdev_read_block_0 = FromFbs(symbt)

        case "rom_flash_nor_init":
            ret.rom_flash_nor_init = FromFbs(symbt)

        case "rom__ip6_drain":
            ret.rom__ip6_drain = FromFbs(symbt)

        case "rom_nullsub_9":
            ret.rom_nullsub_9 = FromFbs(symbt)

        case "rom_nullsub_10":
            ret.rom_nullsub_10 = FromFbs(symbt)

        case "rom_nullsub_11":
            ret.rom_nullsub_11 = FromFbs(symbt)

        case "rom_nullsub_12":
            ret.rom_nullsub_12 = FromFbs(symbt)

        case "rom_image_search_bdev":
            ret.rom_image_search_bdev = FromFbs(symbt)

        case "rom_image_load":
            ret.rom_image_load = FromFbs(symbt)

        case "rom_image_find":
            ret.rom_image_find = FromFbs(symbt)

        case "rom_image_create_from_memory":
            ret.rom_image_create_from_memory = FromFbs(symbt)

        case "rom_image_free":
            ret.rom_image_free = FromFbs(symbt)

        case "rom_set_thread_id":
            ret.rom_set_thread_id = FromFbs(symbt)

        case "rom_arm_fp_init":
            ret.rom_arm_fp_init = FromFbs(symbt)

        case "rom_timer_get_ticks_0":
            ret.rom_timer_get_ticks_0 = FromFbs(symbt)

        case "rom_platform_power_spin":
            ret.rom_platform_power_spin = FromFbs(symbt)

        case "rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService":
            ret.rom___ZN25AppleExternalPowerManager23isExternalPowerProviderEP9IOService = FromFbs(symbt)

        case "rom_spi_nand_init":
            ret.rom_spi_nand_init = FromFbs(symbt)

        case "rom_nullsub_15":
            ret.rom_nullsub_15 = FromFbs(symbt)

        case "rom_def_10000E514":
            ret.rom_def_10000E514 = FromFbs(symbt)

        case "rom_jpt_10000E514":
            ret.rom_jpt_10000E514 = FromFbs(symbt)

        case "rom_jpt_10000E6C4":
            ret.rom_jpt_10000E6C4 = FromFbs(symbt)

        case "rom_jpt_10000E83C":
            ret.rom_jpt_10000E83C = FromFbs(symbt)

        case "rom__vsock_abort":
            ret.rom__vsock_abort = FromFbs(symbt)

        case "rom_thunderboot_get_dfu_image":
            ret.rom_thunderboot_get_dfu_image = FromFbs(symbt)

        case "rom_lookup_blockdev":
            ret.rom_lookup_blockdev = FromFbs(symbt)

        case "rom_register_blockdev":
            ret.rom_register_blockdev = FromFbs(symbt)

        case "rom_construct_blockdev":
            ret.rom_construct_blockdev = FromFbs(symbt)

        case "rom_blockdev_read_hook_fun":
            ret.rom_blockdev_read_hook_fun = FromFbs(symbt)

        case "rom_blockdev_read_block_hook_fun":
            ret.rom_blockdev_read_block_hook_fun = FromFbs(symbt)

        case "rom_blockdev_write_hook_fun":
            ret.rom_blockdev_write_hook_fun = FromFbs(symbt)

        case "rom_blockdev_write_block_hook_fun":
            ret.rom_blockdev_write_block_hook_fun = FromFbs(symbt)

        case "rom_blockdev_erase_hook_fun":
            ret.rom_blockdev_erase_hook_fun = FromFbs(symbt)

        case "rom_cbuf_create":
            ret.rom_cbuf_create = FromFbs(symbt)

        case "rom_def_10000FBA8":
            ret.rom_def_10000FBA8 = FromFbs(symbt)

        case "rom_jpt_10000FBA8":
            ret.rom_jpt_10000FBA8 = FromFbs(symbt)

        case "rom_heap_alloc":
            ret.rom_heap_alloc = FromFbs(symbt)

        case "rom_uk_heap_fn":
            ret.rom_uk_heap_fn = FromFbs(symbt)

        case "rom_panic_almost":
            ret.rom_panic_almost = FromFbs(symbt)

        case "rom_required_size":
            ret.rom_required_size = FromFbs(symbt)

        case "rom_maybe_verify_block_padding":
            ret.rom_maybe_verify_block_padding = FromFbs(symbt)

        case "rom_calloc":
            ret.rom_calloc = FromFbs(symbt)

        case "rom_verify_block_checksum":
            ret.rom_verify_block_checksum = FromFbs(symbt)

        case "rom_heap_free":
            ret.rom_heap_free = FromFbs(symbt)

        case "rom_calculate_block_checksum":
            ret.rom_calculate_block_checksum = FromFbs(symbt)

        case "rom_posix_memalign":
            ret.rom_posix_memalign = FromFbs(symbt)

        case "rom_heap_panic":
            ret.rom_heap_panic = FromFbs(symbt)

        case "rom_free_list_add":
            ret.rom_free_list_add = FromFbs(symbt)

        case "rom_heap_add_chunk_0":
            ret.rom_heap_add_chunk_0 = FromFbs(symbt)

        case "rom_heap_add_chunk":
            ret.rom_heap_add_chunk = FromFbs(symbt)

        case "rom_another_heap_panic2":
            ret.rom_another_heap_panic2 = FromFbs(symbt)

        case "rom_heap_set_cookie":
            ret.rom_heap_set_cookie = FromFbs(symbt)

        case "rom_another_heap_panic":
            ret.rom_another_heap_panic = FromFbs(symbt)

        case "rom_free_list_remove":
            ret.rom_free_list_remove = FromFbs(symbt)

        case "rom_split_tail":
            ret.rom_split_tail = FromFbs(symbt)

        case "rom_malloc":
            ret.rom_malloc = FromFbs(symbt)

        case "rom_free":
            ret.rom_free = FromFbs(symbt)

        case "rom_log2_int":
            ret.rom_log2_int = FromFbs(symbt)

        case "rom_memset_s":
            ret.rom_memset_s = FromFbs(symbt)

        case "rom_weird_memset":
            ret.rom_weird_memset = FromFbs(symbt)

        case "rom_not_empty_putchar":
            ret.rom_not_empty_putchar = FromFbs(symbt)

        case "rom__do_printf":
            ret.rom__do_printf = FromFbs(symbt)

        case "rom_def_100010D1C":
            ret.rom_def_100010D1C = FromFbs(symbt)

        case "rom_def_100010D64":
            ret.rom_def_100010D64 = FromFbs(symbt)

        case "rom_jpt_100010D1C":
            ret.rom_jpt_100010D1C = FromFbs(symbt)

        case "rom_jpt_100010D64":
            ret.rom_jpt_100010D64 = FromFbs(symbt)

        case "rom__platform_early_init":
            ret.rom__platform_early_init = FromFbs(symbt)

        case "rom_puts":
            ret.rom_puts = FromFbs(symbt)

        case "rom__putchar":
            ret.rom__putchar = FromFbs(symbt)

        case "rom_strlcpy":
            ret.rom_strlcpy = FromFbs(symbt)

        case "rom_memcpy":
            ret.rom_memcpy = FromFbs(symbt)

        case "rom__bzero":
            ret.rom__bzero = FromFbs(symbt)

        case "rom__memset":
            ret.rom__memset = FromFbs(symbt)

        case "rom_memcmp":
            ret.rom_memcmp = FromFbs(symbt)

        case "rom_strcmp":
            ret.rom_strcmp = FromFbs(symbt)

        case "rom_strlen":
            ret.rom_strlen = FromFbs(symbt)

        case "rom_mib_find_node":
            ret.rom_mib_find_node = FromFbs(symbt)

        case "rom__mib_find":
            ret.rom__mib_find = FromFbs(symbt)

        case "rom_mib_get_size":
            ret.rom_mib_get_size = FromFbs(symbt)

        case "rom_def_1000120D0":
            ret.rom_def_1000120D0 = FromFbs(symbt)

        case "rom_jpt_1000120D0":
            ret.rom_jpt_1000120D0 = FromFbs(symbt)

        case "rom_get_entropy":
            ret.rom_get_entropy = FromFbs(symbt)

        case "rom_init_entropy_source":
            ret.rom_init_entropy_source = FromFbs(symbt)

        case "rom_timer_get_ticks":
            ret.rom_timer_get_ticks = FromFbs(symbt)

        case "rom_random_get_bytes_internal":
            ret.rom_random_get_bytes_internal = FromFbs(symbt)

        case "rom_random_get_bytes":
            ret.rom_random_get_bytes = FromFbs(symbt)

        case "rom_enter_critical_section":
            ret.rom_enter_critical_section = FromFbs(symbt)

        case "rom_exit_critical_section":
            ret.rom_exit_critical_section = FromFbs(symbt)

        case "rom__irq_exit_critical_section_0":
            ret.rom__irq_exit_critical_section_0 = FromFbs(symbt)

        case "rom__irq_exit_critical_section":
            ret.rom__irq_exit_critical_section = FromFbs(symbt)

        case "rom_image4_load_decrypt_payload":
            ret.rom_image4_load_decrypt_payload = FromFbs(symbt)

        case "rom_platform_get_raw_production_mode":
            ret.rom_platform_get_raw_production_mode = FromFbs(symbt)

        case "rom_platform_get_security_domain":
            ret.rom_platform_get_security_domain = FromFbs(symbt)

        case "rom_platform_get_secure_mode":
            ret.rom_platform_get_secure_mode = FromFbs(symbt)

        case "rom_platform_get_hardware_epoch":
            ret.rom_platform_get_hardware_epoch = FromFbs(symbt)

        case "rom_platform_get_chip_id":
            ret.rom_platform_get_chip_id = FromFbs(symbt)

        case "rom_j__chipid_get_chip_revision":
            ret.rom_j__chipid_get_chip_revision = FromFbs(symbt)

        case "rom_platform_get_ecid_id":
            ret.rom_platform_get_ecid_id = FromFbs(symbt)

        case "rom_j__ip6_drain":
            ret.rom_j__ip6_drain = FromFbs(symbt)

        case "rom_j__arch_halt":
            ret.rom_j__arch_halt = FromFbs(symbt)

        case "rom_j_j__arch_halt":
            ret.rom_j_j__arch_halt = FromFbs(symbt)

        case "rom_DERImg4DecodeFindInSequence_0":
            ret.rom_DERImg4DecodeFindInSequence_0 = FromFbs(symbt)

        case "rom_DERImg4DecodeContentFindItemWithTag_0":
            ret.rom_DERImg4DecodeContentFindItemWithTag_0 = FromFbs(symbt)

        case "rom_DERImg4DecodeTagCompare_1":
            ret.rom_DERImg4DecodeTagCompare_1 = FromFbs(symbt)

        case "rom_parse_main_img4_der":
            ret.rom_parse_main_img4_der = FromFbs(symbt)

        case "rom_parse_payload_der":
            ret.rom_parse_payload_der = FromFbs(symbt)

        case "rom_parse_manifest_der":
            ret.rom_parse_manifest_der = FromFbs(symbt)

        case "rom_parse_recovery_der":
            ret.rom_parse_recovery_der = FromFbs(symbt)

        case "rom_DERImg4DecodeProperty_0":
            ret.rom_DERImg4DecodeProperty_0 = FromFbs(symbt)

        case "rom_DERFindInSequence":
            ret.rom_DERFindInSequence = FromFbs(symbt)

        case "rom_DERImg4DecodeParseManifestProperties_0":
            ret.rom_DERImg4DecodeParseManifestProperties_0 = FromFbs(symbt)

        case "rom__Img4DecodePayloadExists_0":
            ret.rom__Img4DecodePayloadExists_0 = FromFbs(symbt)

        case "rom_Img4DecodeGetPayload":
            ret.rom_Img4DecodeGetPayload = FromFbs(symbt)

        case "rom_Img4DecodeGetPayloadType":
            ret.rom_Img4DecodeGetPayloadType = FromFbs(symbt)

        case "rom_Img4DecodeGetPayloadKeybag":
            ret.rom_Img4DecodeGetPayloadKeybag = FromFbs(symbt)

        case "rom_Img4DecodeCopyPayloadDigest":
            ret.rom_Img4DecodeCopyPayloadDigest = FromFbs(symbt)

        case "rom__Img4DecodeManifestExists_0":
            ret.rom__Img4DecodeManifestExists_0 = FromFbs(symbt)

        case "rom_Img4DecodeCopyManifestDigest":
            ret.rom_Img4DecodeCopyManifestDigest = FromFbs(symbt)

        case "rom__Img4DecodeSectionExists_0":
            ret.rom__Img4DecodeSectionExists_0 = FromFbs(symbt)

        case "rom__Img4DecodeGetRestoreInfoData":
            ret.rom__Img4DecodeGetRestoreInfoData = FromFbs(symbt)

        case "rom_Img4DecodeGetPropertyBoolean_0":
            ret.rom_Img4DecodeGetPropertyBoolean_0 = FromFbs(symbt)

        case "rom_hasher_18":
            ret.rom_hasher_18 = FromFbs(symbt)

        case "rom_Img4DecodeEvaluateDictionaryProperties_0":
            ret.rom_Img4DecodeEvaluateDictionaryProperties_0 = FromFbs(symbt)

        case "rom_Img4DecodeInit":
            ret.rom_Img4DecodeInit = FromFbs(symbt)

        case "rom_Img4DecodePerformTrustEvaluatation":
            ret.rom_Img4DecodePerformTrustEvaluatation = FromFbs(symbt)

        case "rom_verify_signature_for_reals":
            ret.rom_verify_signature_for_reals = FromFbs(symbt)

        case "rom__verify_signature_rsa_0":
            ret.rom__verify_signature_rsa_0 = FromFbs(symbt)

        case "rom_process_chain":
            ret.rom_process_chain = FromFbs(symbt)

        case "rom_verify_parse_chain":
            ret.rom_verify_parse_chain = FromFbs(symbt)

        case "rom_hasher_8":
            ret.rom_hasher_8 = FromFbs(symbt)

        case "rom_crack_chain_root":
            ret.rom_crack_chain_root = FromFbs(symbt)

        case "rom_Img4DecodeComputeDigest":
            ret.rom_Img4DecodeComputeDigest = FromFbs(symbt)

        case "rom_crack_chain":
            ret.rom_crack_chain = FromFbs(symbt)

        case "rom_DERDecodeItem":
            ret.rom_DERDecodeItem = FromFbs(symbt)

        case "rom_DERDecodeItemPartialBuffer":
            ret.rom_DERDecodeItemPartialBuffer = FromFbs(symbt)

        case "rom_DERDecodeItemPartialBuffer_0":
            ret.rom_DERDecodeItemPartialBuffer_0 = FromFbs(symbt)

        case "rom__DERParseBitString_0_0":
            ret.rom__DERParseBitString_0_0 = FromFbs(symbt)

        case "rom__DERParseBoolean_0":
            ret.rom__DERParseBoolean_0 = FromFbs(symbt)

        case "rom_DERParseInteger":
            ret.rom_DERParseInteger = FromFbs(symbt)

        case "rom__DERParseInteger64":
            ret.rom__DERParseInteger64 = FromFbs(symbt)

        case "rom_DERDecodeSeqInitAgain":
            ret.rom_DERDecodeSeqInitAgain = FromFbs(symbt)

        case "rom_DERDecodeSeqContentInit":
            ret.rom_DERDecodeSeqContentInit = FromFbs(symbt)

        case "rom_DERDecodeSeqNext":
            ret.rom_DERDecodeSeqNext = FromFbs(symbt)

        case "rom_DERParseSequence":
            ret.rom_DERParseSequence = FromFbs(symbt)

        case "rom_DERParseSequenceContent":
            ret.rom_DERParseSequenceContent = FromFbs(symbt)

        case "rom_DEROidCompare":
            ret.rom_DEROidCompare = FromFbs(symbt)

        case "rom__lzvn_decode_buffer":
            ret.rom__lzvn_decode_buffer = FromFbs(symbt)

        case "rom__lz4_decode_asm":
            ret.rom__lz4_decode_asm = FromFbs(symbt)

        case "rom__lzfse_decode_lmd":
            ret.rom__lzfse_decode_lmd = FromFbs(symbt)

        case "rom__lzfse_decode_literals":
            ret.rom__lzfse_decode_literals = FromFbs(symbt)

        case "rom__lz4raw_decode_buffer":
            ret.rom__lz4raw_decode_buffer = FromFbs(symbt)

        case "rom__LZFSEIBootBufferPush":
            ret.rom__LZFSEIBootBufferPush = FromFbs(symbt)

        case "rom_aes_key_expansion":
            ret.rom_aes_key_expansion = FromFbs(symbt)

        case "rom__ccaes_arm_decrypt_key128":
            ret.rom__ccaes_arm_decrypt_key128 = FromFbs(symbt)

        case "rom__ccaes_arm_decrypt_key192":
            ret.rom__ccaes_arm_decrypt_key192 = FromFbs(symbt)

        case "rom__ccaes_arm_decrypt_key256":
            ret.rom__ccaes_arm_decrypt_key256 = FromFbs(symbt)

        case "rom__ccaes_arm_encrypt_key":
            ret.rom__ccaes_arm_encrypt_key = FromFbs(symbt)

        case "rom__ccaes_arm_encrypt_key_0":
            ret.rom__ccaes_arm_encrypt_key_0 = FromFbs(symbt)

        case "rom__ccn_cmp_0":
            ret.rom__ccn_cmp_0 = FromFbs(symbt)

        case "rom_nullsub_13":
            ret.rom_nullsub_13 = FromFbs(symbt)

        case "rom__ccn_mul":
            ret.rom__ccn_mul = FromFbs(symbt)

        case "rom_ccdigest":
            ret.rom_ccdigest = FromFbs(symbt)

        case "rom__ccdigest_init":
            ret.rom__ccdigest_init = FromFbs(symbt)

        case "rom__ccdigest_update":
            ret.rom__ccdigest_update = FromFbs(symbt)

        case "rom__cchmac_final":
            ret.rom__cchmac_final = FromFbs(symbt)

        case "rom__cchmac_init":
            ret.rom__cchmac_init = FromFbs(symbt)

        case "rom_j__ccdigest_update":
            ret.rom_j__ccdigest_update = FromFbs(symbt)

        case "rom__cc_mux2p":
            ret.rom__cc_mux2p = FromFbs(symbt)

        case "rom__ccn_add_0":
            ret.rom__ccn_add_0 = FromFbs(symbt)

        case "rom__ccn_sub_0":
            ret.rom__ccn_sub_0 = FromFbs(symbt)

        case "rom__ccn_write_uint_size":
            ret.rom__ccn_write_uint_size = FromFbs(symbt)

        case "rom_cc_clear":
            ret.rom_cc_clear = FromFbs(symbt)

        case "rom_get_sha1_digest":
            ret.rom_get_sha1_digest = FromFbs(symbt)

        case "rom__ccn_shift_right_1":
            ret.rom__ccn_shift_right_1 = FromFbs(symbt)

        case "rom_ccdrbg_init":
            ret.rom_ccdrbg_init = FromFbs(symbt)

        case "rom_ccdrbg_reseed":
            ret.rom_ccdrbg_reseed = FromFbs(symbt)

        case "rom_ccdrbg_generate":
            ret.rom_ccdrbg_generate = FromFbs(symbt)

        case "rom_ccdrbg_done":
            ret.rom_ccdrbg_done = FromFbs(symbt)

        case "rom__ccdrbg_factory_nisthmac":
            ret.rom__ccdrbg_factory_nisthmac = FromFbs(symbt)

        case "rom_ccdrbg_update":
            ret.rom_ccdrbg_update = FromFbs(symbt)

        case "rom_get_hash_impl":
            ret.rom_get_hash_impl = FromFbs(symbt)

        case "rom__cc_muxp":
            ret.rom__cc_muxp = FromFbs(symbt)

        case "rom__ccn_n_0":
            ret.rom__ccn_n_0 = FromFbs(symbt)

        case "rom_aNor0":
            ret.rom_aNor0 = FromFbs(symbt)

        case "rom_aSpiNand0":
            ret.rom_aSpiNand0 = FromFbs(symbt)

        case "rom_aImg4":
            ret.rom_aImg4 = FromFbs(symbt)

        case "rom_aIm4p":
            ret.rom_aIm4p = FromFbs(symbt)

        case "rom_aAppleMobileDev":
            ret.rom_aAppleMobileDev = FromFbs(symbt)

        case "rom_aCpid04xCprv02x":
            ret.rom_aCpid04xCprv02x = FromFbs(symbt)

        case "rom_aSrtgS":
            ret.rom_aSrtgS = FromFbs(symbt)

        case "rom_aNonc":
            ret.rom_aNonc = FromFbs(symbt)

        case "rom_a02x":
            ret.rom_a02x = FromFbs(symbt)

        case "rom_aSnon":
            ret.rom_aSnon = FromFbs(symbt)

        case "rom_aDoublePanicIn":
            ret.rom_aDoublePanicIn = FromFbs(symbt)

        case "rom_aPanic":
            ret.rom_aPanic = FromFbs(symbt)

        case "rom_aConstructingId":
            ret.rom_aConstructingId = FromFbs(symbt)

        case "rom_aIdleTask":
            ret.rom_aIdleTask = FromFbs(symbt)

        case "rom_aUsb":
            ret.rom_aUsb = FromFbs(symbt)

        case "rom_aNull":
            ret.rom_aNull = FromFbs(symbt)

        case "rom_aPtr":
            ret.rom_aPtr = FromFbs(symbt)

        case "rom_a0x":
            ret.rom_a0x = FromFbs(symbt)

        case "rom_aAppleInc":
            ret.rom_aAppleInc = FromFbs(symbt)

        case "rom_spi_regs":
            ret.rom_spi_regs = FromFbs(symbt)

        case "rom_boot_device_map":
            ret.rom_boot_device_map = FromFbs(symbt)

        case "rom_boot_flag_map":
            ret.rom_boot_flag_map = FromFbs(symbt)

        case "rom_a78":
            ret.rom_a78 = FromFbs(symbt)

        case "rom_img4_item_spec":
            ret.rom_img4_item_spec = FromFbs(symbt)

        case "rom_payload_item_spec":
            ret.rom_payload_item_spec = FromFbs(symbt)

        case "rom_manifest_item_spec":
            ret.rom_manifest_item_spec = FromFbs(symbt)

        case "rom_recover_item_spec":
            ret.rom_recover_item_spec = FromFbs(symbt)

        case "rom_payload_uk_item_spec":
            ret.rom_payload_uk_item_spec = FromFbs(symbt)

        case "rom_root_ca":
            ret.rom_root_ca = FromFbs(symbt)

        case "rom_oidRsa":
            ret.rom_oidRsa = FromFbs(symbt)

        case "rom_oidSha384Rsa":
            ret.rom_oidSha384Rsa = FromFbs(symbt)

        case "rom_oidEcPubKey":
            ret.rom_oidEcPubKey = FromFbs(symbt)

        case "rom_oidSha384":
            ret.rom_oidSha384 = FromFbs(symbt)

        case "rom_oidAppleImg4ManifestCertSpec":
            ret.rom_oidAppleImg4ManifestCertSpec = FromFbs(symbt)

        case "rom_hasher_meta":
            ret.rom_hasher_meta = FromFbs(symbt)

        case "rom_cc_digest_impl":
            ret.rom_cc_digest_impl = FromFbs(symbt)

        case "rom_oidRsaItem":
            ret.rom_oidRsaItem = FromFbs(symbt)

        case "rom_oidEcPubKeyItem":
            ret.rom_oidEcPubKeyItem = FromFbs(symbt)

        case "rom_oidSha384Item":
            ret.rom_oidSha384Item = FromFbs(symbt)

        case "rom_oidAppleImg4ManifestCertSpecItem":
            ret.rom_oidAppleImg4ManifestCertSpecItem = FromFbs(symbt)

        case "rom_sha384":
            ret.rom_sha384 = FromFbs(symbt)

        case "rom_sha1":
            ret.rom_sha1 = FromFbs(symbt)

        case "rom_images":
            ret.rom_images = FromFbs(symbt)

        case "rom_stack_cookie":
            ret.rom_stack_cookie = FromFbs(symbt)

        case "rom_task_list":
            ret.rom_task_list = FromFbs(symbt)

        case "rom_bootstrap_task":
            ret.rom_bootstrap_task = FromFbs(symbt)

        case "rom_heap_cookie":
            ret.rom_heap_cookie = FromFbs(symbt)

        case "rom_ccdrbg_state_ptr":
            ret.rom_ccdrbg_state_ptr = FromFbs(symbt)

        case "rom_flash_spi_read_range":
            ret.rom_flash_spi_read_range = FromFbs(symbt)

        case "rom_idle_task_routine":
            ret.rom_idle_task_routine = FromFbs(symbt)

        case "rom_nor_blockdev_read_block":
            ret.rom_nor_blockdev_read_block = FromFbs(symbt)

        case "rom_blockdev_erase_hook":
            ret.rom_blockdev_erase_hook = FromFbs(symbt)

        case "rom_blockdev_read_block_hook":
            ret.rom_blockdev_read_block_hook = FromFbs(symbt)

        case "rom_blockdev_read_hook":
            ret.rom_blockdev_read_hook = FromFbs(symbt)

        case "rom_blockdev_write_block_hook":
            ret.rom_blockdev_write_block_hook = FromFbs(symbt)

        case "rom_blockdev_write_hook":
            ret.rom_blockdev_write_hook = FromFbs(symbt)

        case "rom_crack_chain_root_ptr":
            ret.rom_crack_chain_root_ptr = FromFbs(symbt)

        case "rom_ccdrbg_done_ptr":
            ret.rom_ccdrbg_done_ptr = FromFbs(symbt)

        case "rom_ccdrbg_generate_ptr":
            ret.rom_ccdrbg_generate_ptr = FromFbs(symbt)

        case "rom_ccdrbg_init_ptr":
            ret.rom_ccdrbg_init_ptr = FromFbs(symbt)

        case "rom_ccdrbg_reseed_ptr":
            ret.rom_ccdrbg_reseed_ptr = FromFbs(symbt)

        case "rom_spi_status":
            ret.rom_spi_status = FromFbs(symbt)

        case "rom_img_callbacks":
            ret.rom_img_callbacks = FromFbs(symbt)

        case "rom_debug_cbuf":
            ret.rom_debug_cbuf = FromFbs(symbt)

        case "rom_debug_event":
            ret.rom_debug_event = FromFbs(symbt)

        case "rom_panicDepth":
            ret.rom_panicDepth = FromFbs(symbt)

        case "rom_panicBuf":
            ret.rom_panicBuf = FromFbs(symbt)

        case "rom_security_environment_consolidated":
            ret.rom_security_environment_consolidated = FromFbs(symbt)

        case "rom_security_mode":
            ret.rom_security_mode = FromFbs(symbt)

        case "rom_security_boot_manifest_hash":
            ret.rom_security_boot_manifest_hash = FromFbs(symbt)

        case "rom_idle_task":
            ret.rom_idle_task = FromFbs(symbt)

        case "rom_task_count":
            ret.rom_task_count = FromFbs(symbt)

        case "rom_max_task_id":
            ret.rom_max_task_id = FromFbs(symbt)

        case "rom_bdev_list":
            ret.rom_bdev_list = FromFbs(symbt)

        case "rom_initialized_nisthmac":
            ret.rom_initialized_nisthmac = FromFbs(symbt)

        case "rom_random_count":
            ret.rom_random_count = FromFbs(symbt)

        case "rom_random_len":
            ret.rom_random_len = FromFbs(symbt)

        case "rom_entropy_len":
            ret.rom_entropy_len = FromFbs(symbt)

        case "rom_random_output":
            ret.rom_random_output = FromFbs(symbt)

        case "rom_random_digest_maybe":
            ret.rom_random_digest_maybe = FromFbs(symbt)

        case "rom_nisthmac_info":
            ret.rom_nisthmac_info = FromFbs(symbt)

        case "rom_img_hash_impml":
            ret.rom_img_hash_impml = FromFbs(symbt)

        case "rom_gPanicStr":
            ret.rom_gPanicStr = FromFbs(symbt)

        case "rom_gPanicFunc":
            ret.rom_gPanicFunc = FromFbs(symbt)

        case "rom_new_chunk_data_0":
            ret.rom_new_chunk_data_0 = FromFbs(symbt)

        case "rom_other_new_chunk_data":
            ret.rom_other_new_chunk_data = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH0":
            ret.rom_rPMGR_SCRATCH0 = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST":
            ret.rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_FIRST = FromFbs(symbt)

        case "rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_LAST":
            ret.rom_rPMGR_SCRATCH_BOOT_MANIFEST_HASH_LAST = FromFbs(symbt)

        case "rom_gpio_base_addr":
            ret.rom_gpio_base_addr = FromFbs(symbt)

        case "rom_report_id":
            ret.rom_report_id = FromFbs(symbt)

        case "rom_rMINIPMGR_SEAL_DATA_A_FIRST":
            ret.rom_rMINIPMGR_SEAL_DATA_A_FIRST = FromFbs(symbt)

        case "rom_rMINIPMGR_SEAL_DATA_A_LAST":
            ret.rom_rMINIPMGR_SEAL_DATA_A_LAST = FromFbs(symbt)

        case "rom_rMINIPMGR_SEAL_CTL_A":
            ret.rom_rMINIPMGR_SEAL_CTL_A = FromFbs(symbt)

        }

    }

    return ret
}